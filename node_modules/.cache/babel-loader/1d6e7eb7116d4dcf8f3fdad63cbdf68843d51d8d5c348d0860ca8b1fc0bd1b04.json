{"ast":null,"code":"import contract from \"./contract\";\nimport Web3 from \"web3\";\nasync function getTokenPrice(tokenId) {\n  try {\n    if (!contract) {\n      console.error('合约实例未初始化');\n      return null;\n    }\n    const priceWei = await contract.methods.getTokenPrice(tokenId).call();\n    const priceEth = Web3.utils.fromWei(priceWei.toString(), 'ether');\n    return priceEth;\n  } catch (error) {\n    console.error('获取当前Token price 失败', error);\n    return null;\n  }\n}\nexport default getTokenPrice;","map":{"version":3,"names":["contract","Web3","getTokenPrice","tokenId","console","error","priceWei","methods","call","priceEth","utils","fromWei","toString"],"sources":["/Users/acciomac/Desktop/repo/Hellometa/src/commons/getTokenPrice.js"],"sourcesContent":["import contract from \"./contract\";  \nimport Web3 from \"web3\";\n\nasync function getTokenPrice(tokenId) {\n    try {\n        if (!contract) {\n            console.error('合约实例未初始化');\n            return null;\n        }\n\n        const priceWei = await contract.methods.getTokenPrice(tokenId).call();\n        const priceEth = Web3.utils.fromWei(priceWei.toString(), 'ether')\n        return priceEth;\n    } catch (error) {\n        console.error('获取当前Token price 失败', error);\n        return null;\n    }\n}\n\nexport default getTokenPrice;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,MAAM;AAEvB,eAAeC,aAAaA,CAACC,OAAO,EAAE;EAClC,IAAI;IACA,IAAI,CAACH,QAAQ,EAAE;MACXI,OAAO,CAACC,KAAK,CAAC,UAAU,CAAC;MACzB,OAAO,IAAI;IACf;IAEA,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,OAAO,CAACL,aAAa,CAACC,OAAO,CAAC,CAACK,IAAI,CAAC,CAAC;IACrE,MAAMC,QAAQ,GAAGR,IAAI,CAACS,KAAK,CAACC,OAAO,CAACL,QAAQ,CAACM,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;IACjE,OAAOH,QAAQ;EACnB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO,IAAI;EACf;AACJ;AAEA,eAAeH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}