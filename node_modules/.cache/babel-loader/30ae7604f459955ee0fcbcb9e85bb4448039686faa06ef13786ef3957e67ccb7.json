{"ast":null,"code":"/*\ngetMyURLs.js提供获取当前账户已经成功上链的NFT的URL方法\n函数无传参\n函数返回一个整数数组：string[] 表示当前账户的所有NFT的URL\n*/\n\nimport contract from \"./contract\";\nimport { getAccountAddr } from \"./getAccountAddr\";\nasync function getMyURLs() {\n  try {\n    if (!contract) {\n      console.error('合约实例未初始化');\n      return null;\n    }\n\n    // 获取当前调用者的地址\n    const addr = await getAccountAddr();\n    // 调用合约的getMyURLs函数\n    const URLs = await contract.methods.getMyURLs().call({\n      from: addr\n    });\n    return URLs;\n  } catch (error) {\n    console.error('获取当前Token URL列表失败', error);\n    return null;\n  }\n}\nexport default getMyURLs;","map":{"version":3,"names":["contract","getAccountAddr","getMyURLs","console","error","addr","URLs","methods","call","from"],"sources":["/Users/acciomac/Desktop/repo/Hellometa/src/commons/getMyURLs.js"],"sourcesContent":["/*\ngetMyURLs.js提供获取当前账户已经成功上链的NFT的URL方法\n函数无传参\n函数返回一个整数数组：string[] 表示当前账户的所有NFT的URL\n*/\n\nimport contract from \"./contract\";  \nimport { getAccountAddr } from \"./getAccountAddr\";\n\nasync function getMyURLs() {\n    try {\n        if (!contract) {\n            console.error('合约实例未初始化');\n            return null;\n        }\n        \n        // 获取当前调用者的地址\n        const addr = await getAccountAddr()\n        // 调用合约的getMyURLs函数\n        const URLs = await contract.methods.getMyURLs().call({ from: addr});\n        return URLs;\n    } catch (error) {\n        console.error('获取当前Token URL列表失败', error);\n        return null;\n    }\n}\n\nexport default getMyURLs;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,eAAeC,SAASA,CAAA,EAAG;EACvB,IAAI;IACA,IAAI,CAACF,QAAQ,EAAE;MACXG,OAAO,CAACC,KAAK,CAAC,UAAU,CAAC;MACzB,OAAO,IAAI;IACf;;IAEA;IACA,MAAMC,IAAI,GAAG,MAAMJ,cAAc,CAAC,CAAC;IACnC;IACA,MAAMK,IAAI,GAAG,MAAMN,QAAQ,CAACO,OAAO,CAACL,SAAS,CAAC,CAAC,CAACM,IAAI,CAAC;MAAEC,IAAI,EAAEJ;IAAI,CAAC,CAAC;IACnE,OAAOC,IAAI;EACf,CAAC,CAAC,OAAOF,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO,IAAI;EACf;AACJ;AAEA,eAAeF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}