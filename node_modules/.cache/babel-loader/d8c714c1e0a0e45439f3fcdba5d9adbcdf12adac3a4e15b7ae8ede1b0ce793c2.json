{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isNullish } from 'web3-validator';\nimport { rpcErrorsMap } from 'web3-errors';\nimport { uuidV4 } from './uuid.js';\n// check if code is a valid rpc server error code\nexport const isResponseRpcError = rpcError => {\n  const errorCode = rpcError.error.code;\n  return rpcErrorsMap.has(errorCode) || errorCode >= -32099 && errorCode <= -32000;\n};\nexport const isResponseWithResult = response => !Array.isArray(response) && !!response && response.jsonrpc === '2.0' &&\n// JSON RPC consider \"null\" as valid response\n'result' in response && isNullish(response.error) && (typeof response.id === 'number' || typeof response.id === 'string');\n// To avoid circular package dependency, copied to code here. If you update this please update same function in `response_errors.ts`\nexport const isResponseWithError = response => !Array.isArray(response) && response.jsonrpc === '2.0' && !!response && isNullish(response.result) &&\n// JSON RPC consider \"null\" as valid response\n'error' in response && (typeof response.id === 'number' || typeof response.id === 'string');\nexport const isResponseWithNotification = response => !Array.isArray(response) && !!response && response.jsonrpc === '2.0' && !isNullish(response.params) && !isNullish(response.method);\nexport const isSubscriptionResult = response => !Array.isArray(response) && !!response && response.jsonrpc === '2.0' && 'id' in response &&\n// JSON RPC consider \"null\" as valid response\n'result' in response;\nexport const validateResponse = response => isResponseWithResult(response) || isResponseWithError(response);\nexport const isValidResponse = response => Array.isArray(response) ? response.every(validateResponse) : validateResponse(response);\nexport const isBatchResponse = response => Array.isArray(response) && response.length > 0 && isValidResponse(response);\n// internal optional variable to increment and use for the jsonrpc `id`\nlet requestIdSeed;\n/**\n * Optionally use to make the jsonrpc `id` start from a specific number.\n * Without calling this function, the `id` will be filled with a Uuid.\n * But after this being called with a number, the `id` will be a number starting from the provided `start` variable.\n * However, if `undefined` was passed to this function, the `id` will be a Uuid again.\n * @param start - a number to start incrementing from.\n * \tOr `undefined` to use a new Uuid (this is the default behavior)\n */\nexport const setRequestIdStart = start => {\n  requestIdSeed = start;\n};\nexport const toPayload = request => {\n  var _a, _b, _c, _d;\n  if (typeof requestIdSeed !== 'undefined') {\n    requestIdSeed += 1;\n  }\n  return {\n    jsonrpc: (_a = request.jsonrpc) !== null && _a !== void 0 ? _a : '2.0',\n    id: (_c = (_b = request.id) !== null && _b !== void 0 ? _b : requestIdSeed) !== null && _c !== void 0 ? _c : uuidV4(),\n    method: request.method,\n    params: (_d = request.params) !== null && _d !== void 0 ? _d : undefined\n  };\n};\nexport const toBatchPayload = requests => requests.map(request => toPayload(request));\nexport const isBatchRequest = request => Array.isArray(request) && request.length > 0;","map":{"version":3,"names":["isNullish","rpcErrorsMap","uuidV4","isResponseRpcError","rpcError","errorCode","error","code","has","isResponseWithResult","response","Array","isArray","jsonrpc","id","isResponseWithError","result","isResponseWithNotification","params","method","isSubscriptionResult","validateResponse","isValidResponse","every","isBatchResponse","length","requestIdSeed","setRequestIdStart","start","toPayload","request","_a","_c","_b","_d","undefined","toBatchPayload","requests","map","isBatchRequest"],"sources":["../../src/json_rpc.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}