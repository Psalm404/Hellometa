{"ast":null,"code":"import { scrypt as _sync, scryptAsync as _async } from \"@noble/hashes/scrypt\";\nimport { assertBytes } from \"./utils.js\";\nexport async function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n  assertBytes(password);\n  assertBytes(salt);\n  return _async(password, salt, {\n    N: n,\n    r,\n    p,\n    dkLen,\n    onProgress\n  });\n}\nexport function scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n  assertBytes(password);\n  assertBytes(salt);\n  return _sync(password, salt, {\n    N: n,\n    r,\n    p,\n    dkLen,\n    onProgress\n  });\n}","map":{"version":3,"names":["scrypt","_sync","scryptAsync","_async","assertBytes","password","salt","n","p","r","dkLen","onProgress","N","scryptSync"],"sources":["/Users/acciomac/Desktop/repo/Hellometa/node_modules/ethereum-cryptography/esm/scrypt.js"],"sourcesContent":["import { scrypt as _sync, scryptAsync as _async } from \"@noble/hashes/scrypt\";\nimport { assertBytes } from \"./utils.js\";\nexport async function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _async(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nexport function scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _sync(password, salt, { N: n, r, p, dkLen, onProgress });\n}\n"],"mappings":"AAAA,SAASA,MAAM,IAAIC,KAAK,EAAEC,WAAW,IAAIC,MAAM,QAAQ,sBAAsB;AAC7E,SAASC,WAAW,QAAQ,YAAY;AACxC,OAAO,eAAeJ,MAAMA,CAACK,QAAQ,EAAEC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,UAAU,EAAE;EACrEP,WAAW,CAACC,QAAQ,CAAC;EACrBD,WAAW,CAACE,IAAI,CAAC;EACjB,OAAOH,MAAM,CAACE,QAAQ,EAAEC,IAAI,EAAE;IAAEM,CAAC,EAAEL,CAAC;IAAEE,CAAC;IAAED,CAAC;IAAEE,KAAK;IAAEC;EAAW,CAAC,CAAC;AACpE;AACA,OAAO,SAASE,UAAUA,CAACR,QAAQ,EAAEC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,UAAU,EAAE;EACnEP,WAAW,CAACC,QAAQ,CAAC;EACrBD,WAAW,CAACE,IAAI,CAAC;EACjB,OAAOL,KAAK,CAACI,QAAQ,EAAEC,IAAI,EAAE;IAAEM,CAAC,EAAEL,CAAC;IAAEE,CAAC;IAAED,CAAC;IAAEE,KAAK;IAAEC;EAAW,CAAC,CAAC;AACnE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}