{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ERR_MULTIPLE_ERRORS } from './error_codes.js';\n/**\n * Base class for Web3 errors.\n */\nexport class BaseWeb3Error extends Error {\n  constructor(msg, cause) {\n    super(msg);\n    if (Array.isArray(cause)) {\n      // eslint-disable-next-line no-use-before-define\n      this.cause = new MultipleErrors(cause);\n    } else {\n      this.cause = cause;\n    }\n    this.name = this.constructor.name;\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(new.target.constructor);\n    } else {\n      this.stack = new Error().stack;\n    }\n  }\n  /**\n   * @deprecated Use the `cause` property instead.\n   */\n  get innerError() {\n    // eslint-disable-next-line no-use-before-define\n    if (this.cause instanceof MultipleErrors) {\n      return this.cause.errors;\n    }\n    return this.cause;\n  }\n  /**\n   * @deprecated Use the `cause` property instead.\n   */\n  set innerError(cause) {\n    if (Array.isArray(cause)) {\n      // eslint-disable-next-line no-use-before-define\n      this.cause = new MultipleErrors(cause);\n    } else {\n      this.cause = cause;\n    }\n  }\n  static convertToString(value, unquotValue = false) {\n    // Using \"null\" value intentionally for validation\n    // eslint-disable-next-line no-null/no-null\n    if (value === null || value === undefined) return 'undefined';\n    const result = JSON.stringify(value, (_, v) => typeof v === 'bigint' ? v.toString() : v);\n    return unquotValue && ['bigint', 'string'].includes(typeof value) ? result.replace(/['\\\\\"]+/g, '') : result;\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      cause: this.cause,\n      // deprecated\n      innerError: this.cause\n    };\n  }\n}\nexport class MultipleErrors extends BaseWeb3Error {\n  constructor(errors) {\n    super(`Multiple errors occurred: [${errors.map(e => e.message).join('], [')}]`);\n    this.code = ERR_MULTIPLE_ERRORS;\n    this.errors = errors;\n  }\n}\nexport class InvalidValueError extends BaseWeb3Error {\n  constructor(value, msg) {\n    super(`Invalid value given \"${BaseWeb3Error.convertToString(value, true)}\". Error: ${msg}.`);\n    this.name = this.constructor.name;\n  }\n}","map":{"version":3,"names":["ERR_MULTIPLE_ERRORS","BaseWeb3Error","Error","constructor","msg","cause","Array","isArray","MultipleErrors","name","captureStackTrace","new","target","stack","innerError","errors","convertToString","value","unquotValue","undefined","result","JSON","stringify","_","v","toString","includes","replace","toJSON","code","message","map","e","join","InvalidValueError"],"sources":["../../src/web3_error_base.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;AAoBA,SAASA,mBAAmB,QAAQ,kBAAkB;AAEtD;;;AAGA,OAAM,MAAgBC,aAAc,SAAQC,KAAK;EA6BhDC,YAAmBC,GAAY,EAAEC,KAAuB;IACvD,KAAK,CAACD,GAAG,CAAC;IAEV,IAAIE,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACzB;MACA,IAAI,CAACA,KAAK,GAAG,IAAIG,cAAc,CAACH,KAAK,CAAC;KACtC,MAAM;MACN,IAAI,CAACA,KAAK,GAAGA,KAAK;;IAGnB,IAAI,CAACI,IAAI,GAAG,IAAI,CAACN,WAAW,CAACM,IAAI;IAEjC,IAAI,OAAOP,KAAK,CAACQ,iBAAiB,KAAK,UAAU,EAAE;MAClDR,KAAK,CAACQ,iBAAiB,CAACC,GAAG,CAACC,MAAM,CAACT,WAAW,CAAC;KAC/C,MAAM;MACN,IAAI,CAACU,KAAK,GAAG,IAAIX,KAAK,EAAE,CAACW,KAAK;;EAEhC;EAvCA;;;EAGA,IAAWC,UAAUA,CAAA;IACpB;IACA,IAAI,IAAI,CAACT,KAAK,YAAYG,cAAc,EAAE;MACzC,OAAO,IAAI,CAACH,KAAK,CAACU,MAAM;;IAEzB,OAAO,IAAI,CAACV,KAAK;EAClB;EACA;;;EAGA,IAAWS,UAAUA,CAACT,KAAkC;IACvD,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACzB;MACA,IAAI,CAACA,KAAK,GAAG,IAAIG,cAAc,CAACH,KAAK,CAAC;KACtC,MAAM;MACN,IAAI,CAACA,KAAK,GAAGA,KAAK;;EAEpB;EAqBO,OAAOW,eAAeA,CAACC,KAAc,EAAEC,WAAW,GAAG,KAAK;IAChE;IACA;IACA,IAAID,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKE,SAAS,EAAE,OAAO,WAAW;IAE7D,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAS,CAC5BL,KAAK,EACL,CAACM,CAAC,EAAEC,CAAC,KAAM,OAAOA,CAAC,KAAK,QAAQ,GAAGA,CAAC,CAACC,QAAQ,EAAE,GAAGD,CAAa,CAC/D;IAED,OAAON,WAAW,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACQ,QAAQ,CAAC,OAAOT,KAAK,CAAC,GAC9DG,MAAM,CAACO,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,GAC9BP,MAAM;EACV;EAEOQ,MAAMA,CAAA;IACZ,OAAO;MACNnB,IAAI,EAAE,IAAI,CAACA,IAAI;MACfoB,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBzB,KAAK,EAAE,IAAI,CAACA,KAAK;MACjB;MACAS,UAAU,EAAE,IAAI,CAACT;KACjB;EACF;;AAGD,OAAM,MAAOG,cAAe,SAAQP,aAAa;EAIhDE,YAAmBY,MAAe;IACjC,KAAK,CAAC,8BAA8BA,MAAM,CAACgB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACF,OAAO,CAAC,CAACG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;IAJzE,KAAAJ,IAAI,GAAG7B,mBAAmB;IAKhC,IAAI,CAACe,MAAM,GAAGA,MAAM;EACrB;;AAGD,OAAM,MAAgBmB,iBAAkB,SAAQjC,aAAa;EAG5DE,YAAmBc,KAAc,EAAEb,GAAW;IAC7C,KAAK,CACJ,wBAAwBH,aAAa,CAACe,eAAe,CAACC,KAAK,EAAE,IAAI,CAAC,aAAab,GAAG,GAAG,CACrF;IACD,IAAI,CAACK,IAAI,GAAG,IAAI,CAACN,WAAW,CAACM,IAAI;EAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}