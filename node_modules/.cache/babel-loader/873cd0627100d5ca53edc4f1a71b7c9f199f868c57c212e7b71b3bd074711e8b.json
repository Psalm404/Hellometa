{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport { Web3Context, isSupportedProvider } from 'web3-core';\nimport { Web3Eth, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish, isDataFormat, isContractInitOptions } from 'web3-utils';\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3PkgInfo } from './version.js';\nimport { onNewProviderDiscovered, requestEIP6963Providers } from './web3_eip6963.js';\nexport class Web3 extends Web3Context {\n  constructor(providerOrContext) {\n    var _a;\n    if (isNullish(providerOrContext) || typeof providerOrContext === 'string' && providerOrContext.trim() === '' || typeof providerOrContext !== 'string' && !isSupportedProvider(providerOrContext) && !providerOrContext.provider) {\n      console.warn('NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!');\n    }\n    let contextInitOptions = {};\n    if (typeof providerOrContext === 'string' || isSupportedProvider(providerOrContext)) {\n      contextInitOptions.provider = providerOrContext;\n    } else if (providerOrContext) {\n      contextInitOptions = providerOrContext;\n    } else {\n      contextInitOptions = {};\n    }\n    contextInitOptions.registeredSubscriptions = Object.assign(Object.assign({}, registeredSubscriptions), (_a = contextInitOptions.registeredSubscriptions) !== null && _a !== void 0 ? _a : {});\n    super(contextInitOptions);\n    const accounts = initAccountsForContext(this);\n    // Init protected properties\n    this._wallet = accounts.wallet;\n    this._accountProvider = accounts;\n    this.utils = utils;\n    // Have to use local alias to initiate contract context\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    class ContractBuilder extends Contract {\n      constructor(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {\n        if (isContractInitOptions(addressOrOptionsOrContext) && isContractInitOptions(optionsOrContextOrReturnFormat)) {\n          throw new InvalidMethodParamsError('Should not provide options at both 2nd and 3rd parameters');\n        }\n        let address;\n        let options = {};\n        let context;\n        let dataFormat = DEFAULT_RETURN_FORMAT;\n        // add validation so its not a breaking change\n        if (!isNullish(addressOrOptionsOrContext) && typeof addressOrOptionsOrContext !== 'object' && typeof addressOrOptionsOrContext !== 'string') {\n          throw new InvalidMethodParamsError();\n        }\n        if (typeof addressOrOptionsOrContext === 'string') {\n          address = addressOrOptionsOrContext;\n        }\n        if (isContractInitOptions(addressOrOptionsOrContext)) {\n          options = addressOrOptionsOrContext;\n        } else if (isContractInitOptions(optionsOrContextOrReturnFormat)) {\n          options = optionsOrContextOrReturnFormat;\n        } else {\n          options = {};\n        }\n        if (addressOrOptionsOrContext instanceof Web3Context) {\n          context = addressOrOptionsOrContext;\n        } else if (optionsOrContextOrReturnFormat instanceof Web3Context) {\n          context = optionsOrContextOrReturnFormat;\n        } else if (contextOrReturnFormat instanceof Web3Context) {\n          context = contextOrReturnFormat;\n        } else {\n          context = self.getContextObject();\n        }\n        if (returnFormat) {\n          dataFormat = returnFormat;\n        } else if (isDataFormat(optionsOrContextOrReturnFormat)) {\n          dataFormat = optionsOrContextOrReturnFormat;\n        } else if (isDataFormat(contextOrReturnFormat)) {\n          dataFormat = contextOrReturnFormat;\n        }\n        super(jsonInterface, address, options, context, dataFormat);\n        super.subscribeToContextEvents(self);\n      }\n    }\n    const eth = self.use(Web3Eth);\n    // Eth Module\n    this.eth = Object.assign(eth, {\n      // ENS module\n      ens: self.use(ENS, registryAddresses.main),\n      // Iban helpers\n      Iban,\n      net: self.use(Net),\n      personal: self.use(Personal),\n      // Contract helper and module\n      Contract: ContractBuilder,\n      // ABI Helpers\n      abi,\n      // Accounts helper\n      accounts\n    });\n  }\n}\nWeb3.version = Web3PkgInfo.version;\nWeb3.utils = utils;\nWeb3.requestEIP6963Providers = requestEIP6963Providers;\nWeb3.onNewProviderDiscovered = onNewProviderDiscovered;\nWeb3.modules = {\n  Web3Eth,\n  Iban,\n  Net,\n  ENS,\n  Personal\n};\nexport default Web3;","map":{"version":3,"names":["Web3Context","isSupportedProvider","Web3Eth","registeredSubscriptions","Contract","ENS","registryAddresses","Iban","Personal","Net","utils","isNullish","isDataFormat","isContractInitOptions","DEFAULT_RETURN_FORMAT","InvalidMethodParamsError","abi","initAccountsForContext","Web3PkgInfo","onNewProviderDiscovered","requestEIP6963Providers","Web3","constructor","providerOrContext","_a","trim","provider","console","warn","contextInitOptions","Object","assign","accounts","_wallet","wallet","_accountProvider","self","ContractBuilder","jsonInterface","addressOrOptionsOrContext","optionsOrContextOrReturnFormat","contextOrReturnFormat","returnFormat","address","options","context","dataFormat","getContextObject","subscribeToContextEvents","eth","use","ens","main","net","personal","version","modules"],"sources":["D:/my-repo/hellometa-new/node_modules/web3/lib/esm/web3.js"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport { Web3Context, isSupportedProvider } from 'web3-core';\nimport { Web3Eth, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish, isDataFormat, isContractInitOptions } from 'web3-utils';\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3PkgInfo } from './version.js';\nimport { onNewProviderDiscovered, requestEIP6963Providers } from './web3_eip6963.js';\nexport class Web3 extends Web3Context {\n    constructor(providerOrContext) {\n        var _a;\n        if (isNullish(providerOrContext) ||\n            (typeof providerOrContext === 'string' && providerOrContext.trim() === '') ||\n            (typeof providerOrContext !== 'string' &&\n                !isSupportedProvider(providerOrContext) &&\n                !providerOrContext.provider)) {\n            console.warn('NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!');\n        }\n        let contextInitOptions = {};\n        if (typeof providerOrContext === 'string' ||\n            isSupportedProvider(providerOrContext)) {\n            contextInitOptions.provider = providerOrContext;\n        }\n        else if (providerOrContext) {\n            contextInitOptions = providerOrContext;\n        }\n        else {\n            contextInitOptions = {};\n        }\n        contextInitOptions.registeredSubscriptions = Object.assign(Object.assign({}, registeredSubscriptions), ((_a = contextInitOptions.registeredSubscriptions) !== null && _a !== void 0 ? _a : {}));\n        super(contextInitOptions);\n        const accounts = initAccountsForContext(this);\n        // Init protected properties\n        this._wallet = accounts.wallet;\n        this._accountProvider = accounts;\n        this.utils = utils;\n        // Have to use local alias to initiate contract context\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        class ContractBuilder extends Contract {\n            constructor(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {\n                if (isContractInitOptions(addressOrOptionsOrContext) && isContractInitOptions(optionsOrContextOrReturnFormat)) {\n                    throw new InvalidMethodParamsError('Should not provide options at both 2nd and 3rd parameters');\n                }\n                let address;\n                let options = {};\n                let context;\n                let dataFormat = DEFAULT_RETURN_FORMAT;\n                // add validation so its not a breaking change\n                if (!isNullish(addressOrOptionsOrContext) && typeof addressOrOptionsOrContext !== 'object' && typeof addressOrOptionsOrContext !== 'string') {\n                    throw new InvalidMethodParamsError();\n                }\n                if (typeof addressOrOptionsOrContext === 'string') {\n                    address = addressOrOptionsOrContext;\n                }\n                if (isContractInitOptions(addressOrOptionsOrContext)) {\n                    options = addressOrOptionsOrContext;\n                }\n                else if (isContractInitOptions(optionsOrContextOrReturnFormat)) {\n                    options = optionsOrContextOrReturnFormat;\n                }\n                else {\n                    options = {};\n                }\n                if (addressOrOptionsOrContext instanceof Web3Context) {\n                    context = addressOrOptionsOrContext;\n                }\n                else if (optionsOrContextOrReturnFormat instanceof Web3Context) {\n                    context = optionsOrContextOrReturnFormat;\n                }\n                else if (contextOrReturnFormat instanceof Web3Context) {\n                    context = contextOrReturnFormat;\n                }\n                else {\n                    context = self.getContextObject();\n                }\n                if (returnFormat) {\n                    dataFormat = returnFormat;\n                }\n                else if (isDataFormat(optionsOrContextOrReturnFormat)) {\n                    dataFormat = optionsOrContextOrReturnFormat;\n                }\n                else if (isDataFormat(contextOrReturnFormat)) {\n                    dataFormat = contextOrReturnFormat;\n                }\n                super(jsonInterface, address, options, context, dataFormat);\n                super.subscribeToContextEvents(self);\n            }\n        }\n        const eth = self.use(Web3Eth);\n        // Eth Module\n        this.eth = Object.assign(eth, {\n            // ENS module\n            ens: self.use(ENS, registryAddresses.main),\n            // Iban helpers\n            Iban,\n            net: self.use(Net),\n            personal: self.use(Personal),\n            // Contract helper and module\n            Contract: ContractBuilder,\n            // ABI Helpers\n            abi,\n            // Accounts helper\n            accounts,\n        });\n    }\n}\nWeb3.version = Web3PkgInfo.version;\nWeb3.utils = utils;\nWeb3.requestEIP6963Providers = requestEIP6963Providers;\nWeb3.onNewProviderDiscovered = onNewProviderDiscovered;\nWeb3.modules = {\n    Web3Eth,\n    Iban,\n    Net,\n    ENS,\n    Personal,\n};\nexport default Web3;\n//# sourceMappingURL=web3.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}