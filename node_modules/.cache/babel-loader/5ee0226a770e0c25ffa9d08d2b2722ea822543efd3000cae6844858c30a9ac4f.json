{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import getRecentBlocks from '@/commons/getRecentBlocks';\nimport getTransaction from '@/commons/getTransaction';\nimport getTransactionHash from '@/commons/getTransactionHash';\nimport getURLbyTokenId from '@/commons/getURLbyTokenId';\nimport debounce from 'lodash/debounce';\nimport axios from 'axios';\nexport default {\n  created() {\n    this.blockSearch = debounce(this.blockSearch, 300);\n  },\n  mounted() {\n    this.searchData = this.$route.query.bkSearchQuery ? this.$route.query.bkSearchQuery.toString() : '';\n    this.activeNames = Array.from({\n      length: 100\n    }, (_, index) => index);\n    this.blockSearch();\n  },\n  data() {\n    return {\n      // 区块浏览器数据\n      show: true,\n      searchData: '',\n      activeNames: [],\n      searchResult: [],\n      showDetail: false,\n      blockTitle: ['BlockNumber',\n      // 对应原来的 'number'\n      'Difficulty',\n      // 对应原来的 'difficulty'\n      'ExtraData',\n      // 对应原来的 'extraData'\n      'GasLimit',\n      // 对应原来的 'gasLimit'\n      'GasUsed',\n      // 对应原来的 'gasUsed'\n      'Hash',\n      // 对应原来的 'hash'\n      'LogsBloom',\n      // 对应原来的 'logsBloom'\n      'Miner',\n      // 对应原来的 'miner'\n      'Nonce',\n      // 对应原来的 'nonce'\n      'ParentHash',\n      // 对应原来的 'parentHash'\n      'ReceiptsRoot',\n      // 对应原来的 'receiptsRoot'\n      'Sha3Uncles',\n      // 对应原来的 'sha3Uncles'\n      'Size',\n      // 对应原来的 'size'\n      'StateRoot',\n      // 对应原来的 'stateRoot'\n      'Timestamp',\n      // 对应原来的 'timestamp'\n      'TotalDifficulty',\n      // 对应原来的 'totalDifficulty'\n      'Transactions',\n      // 对应原来的 'transactions'\n      'TransactionsRoot',\n      // 对应原来的 'transactionsRoot'\n      'Uncles' // 对应原来的 'uncles'\n      ],\n      transactionResult: [],\n      transactions_detail_title: ['BlockNumber',\n      // 对应原来的 'number'\n      'Difficulty',\n      // 对应原来的 'difficulty'\n      'ExtraData',\n      // 对应原来的 'extraData'\n      'GasLimit',\n      // 对应原来的 'gasLimit'\n      'GasUsed',\n      // 对应原来的 'gasUsed'\n      'Hash',\n      // 对应原来的 'hash'\n      'LogsBloom',\n      // 对应原来的 'logsBloom'\n      'Miner',\n      // 对应原来的 'miner'\n      'Nonce',\n      // 对应原来的 'nonce'\n      'ParentHash',\n      // 对应原来的 'parentHash'\n      'ReceiptsRoot',\n      // 对应原来的 'receiptsRoot'\n      'Sha3Uncles',\n      // 对应原来的 'sha3Uncles'\n      'Size',\n      // 对应原来的 'size'\n      'StateRoot',\n      // 对应原来的 'stateRoot'\n      'Timestamp',\n      // 对应原来的 'timestamp'\n      'TotalDifficulty',\n      // 对应原来的 'totalDifficulty'\n      'Transactions',\n      // 对应原来的 'transactions'\n      'TransactionsRoot',\n      // 对应原来的 'transactionsRoot'\n      'Uncles' // 对应原来的 'uncles'\n      ],\n      // 走马灯图片\n      picture: [require(\"@/assets/6.png\"), require(\"@/assets/PixPin_2024-05-25_17-46-05.jpg\"), require(\"@/assets/d7dfc57d557f18490d2d00ba5f9f8af.png\"), require(\"@/assets/1.jpg\"), require(\"@/assets/2.jpg\"), require(\"@/assets/3.jpg\"), require(\"@/assets/4.jpg\"), require(\"@/assets/5.jpg\")],\n      // 介绍文字\n      textBlocks: [{\n        title: '工业互联网 ',\n        description: '\"工业互联网\"（Industrial Internet）是指在工业领域应用物联网技术，' + '通过设备、传感器和软件系统的互联互通，实现数据的收集、交换和分析，以优化制造流程、提高生产效率和减少维护' + '成本的概念。它通常涉及到智能制造、自动化技术、大数据分析和云计算等领域。'\n      }, {\n        title: '无币公链',\n        description: '\"无币公链\"是指一种公共区块链技术的实现，其中不发行任何原生加密货币或代币。' + '这与众多知名的区块链平台不同，后者通常都有自己的内置代币，如比特币、以太坊等。'\n      }, {\n        title: '数据资产化',\n        description: '\"数据资产化\"是一个涉及将数据转换成可量化的、有价值的资产的概念。' + '这一过程不仅包括数据的收集和存储，还包括对数据的管理、分析和利用，目的是从数据中提取价值，支持决策制定，' + '创造商业机会，甚至直接作为产品或服务出售。'\n      }]\n    };\n  },\n  methods: {\n    logOut() {\n      this.$store.dispatch('logout');\n      setTimeout(() => {\n        this.$router.push('/intro');\n      }, 200);\n    },\n    blockSearch() {\n      if (this.searchData === '') {\n        this.show = true;\n        console.log('search for all');\n\n        // 使用API请求前100个区块\n        const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n        axios.get(`${apiBaseUrl}/getBlocksAndTransactions`, {\n          params: {\n            n: 100\n          } // 获取前100个区块\n        }).then(response => {\n          if (response.data.code === 200) {\n            const blocks = response.data.blocksWithTransactions;\n            this.searchResult = [];\n            for (let i = 0; i < blocks.length; i++) {\n              let tmp = {};\n              // 将区块信息从响应数据中提取并匹配你已有的字段\n              for (let j = 0; j < this.blockTitle.length; j++) {\n                tmp[this.blockTitle[j]] = blocks[i][this.blockTitle[j]] || ''; // 使用区块数据中的相应字段\n                // console.log(blocks);\n                if (tmp[this.blockTitle[j]] != null) {\n                  tmp[this.blockTitle[j]] = tmp[this.blockTitle[j]].toString();\n                }\n              }\n              this.searchResult.push(tmp);\n            }\n          } else {\n            console.error(\"Error fetching blocks:\", response.data);\n          }\n        }).catch(error => {\n          console.error(\"Error fetching blocks:\", error);\n        });\n      } else {\n        this.show = false;\n        if (this.searchData.startsWith('0x')) {\n          console.log('search by hashText');\n          this.searchByTH(this.searchData);\n        } else if (this.searchData.startsWith('http')) {\n          console.log('search by url');\n          this.searchByUrl(this.searchData);\n        } else {\n          console.log('search by token id');\n          this.searchByTokenId(this.searchData);\n        }\n      }\n      this.$nextTick(() => {\n        console.log('DOM已更新');\n      });\n      this.searchData = '';\n    },\n    async searchByUrl(url) {\n      let hashTx = await getTransactionHash(url);\n      if (hashTx === null) return false;\n      return this.searchByTH(hashTx);\n    },\n    async searchByTokenId(tokenId) {\n      let url = await getURLbyTokenId(tokenId);\n      return this.searchByUrl(url);\n    },\n    async searchByTH(hash) {\n      let res = await getTransaction(hash);\n      if (res === 'error') return false;\n\n      // 后续处理\n      console.log(this.transactionResult);\n      if (this.transactionResult.length > 0) {\n        this.transactionResult = [];\n      }\n      console.log(this.transactionResult);\n      for (let i = 0; i < this.transactions_detail_title.length; i++) {\n        this.transactionResult.push(res[this.transactions_detail_title[i]]);\n      }\n      console.log(this.transactionResult);\n      return true;\n    },\n    showTransactionDetail(index) {\n      console.log('index::' + index);\n      let tmp = this.searchResult[index]['transactions'];\n      this.$router.push({\n        path: '/blockBrowse/transactionDetail',\n        query: {\n          hash: tmp\n        }\n      });\n    },\n    handleChange(val) {\n      console.log(val);\n    }\n  }\n};","map":{"version":3,"names":["getTransaction","getTransactionHash","getURLbyTokenId","debounce","axios","created","blockSearch","mounted","searchData","$route","query","bkSearchQuery","toString","activeNames","Array","from","length","_","index","data","show","searchResult","showDetail","blockTitle","transactionResult","transactions_detail_title","picture","require","textBlocks","title","description","methods","logOut","$store","dispatch","setTimeout","$router","push","console","log","apiBaseUrl","process","env","VUE_APP_BACKEND_BASE_URL","get","params","n","then","response","code","blocks","blocksWithTransactions","i","tmp","j","error","catch","startsWith","searchByTH","searchByUrl","searchByTokenId","$nextTick","url","hashTx","tokenId","hash","res","showTransactionDetail","path","handleChange","val"],"sources":["src/components/userIntroPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <transition name=\"el-fade-in-linear\">\r\n            <div class=\"content\">\r\n                <nav class=\"home-navbar\">\r\n                    <div class=\"home-navbar-container\">\r\n                        <div class=\"want-to-be-left\">\r\n                            <a class=\"home-navbar-logo\">\r\n                                <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"home-logo-image\">\r\n                            </a>\r\n                            <div class=\"page-titile\">\r\n                                <h3></h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"want-to-be-right\">\r\n                            <ul class=\"home-navbar-menu\">\r\n                                <li class=\"recharge-item\"><a href=\"#/myGas\">燃料管理</a></li>\r\n                                <li class=\"intro-item  active\"><a>区块浏览器</a></li>\r\n                                <li class=\"explore-item\">\r\n                                    <a href=\"#/exhibitWorks\" :class=\"{ disabled: !$store.state.isAccountMatched }\">交易市场</a>\r\n                                </li>\r\n                                <li class=\"upload-item\">\r\n                                    <a href=\"#/uploadWorks\" :class=\"{ disabled: !$store.state.isAccountMatched }\">凭证上传</a>\r\n                                </li>\r\n                                <li class=\"records-item\">\r\n                                    <a href=\"#/recordWorks\" :class=\"{ disabled: !$store.state.isAccountMatched }\">我的凭证</a>\r\n                                </li>\r\n                                <li class=\"home-item\"><a  href=\"#/home\">个人中心</a></li>\r\n                            </ul>\r\n                            <div>\r\n                                <button class=\"home-navbar-button\" @click=\"logOut\">Log out</button>\r\n                            </div>\r\n                            <div class=\"home-navbar-profile\">\r\n                                <a href=\"https://github.com/Psalm404/Hellometa\" target=\"_blank\">\r\n                                    <img src=\"../assets/github.jpg\" alt=\"Join us\">\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div class=\"home-card-container\">\r\n                    <el-carousel :interval=\"4000\" type=\"card\">\r\n                        <el-carousel-item v-for=\"(item, index) in picture\" :key=\"index\">\r\n                            <img :src=\"item\" class=\"home-card-img\" alt=\"\">\r\n                        </el-carousel-item>\r\n                    </el-carousel>\r\n                </div>\r\n                <el-divider><i class=\"el-icon-s-promotion\"></i></el-divider>\r\n                <div class=\"home-introduction\">\r\n                    <h1>什么是工业互联网数据资产化？</h1>\r\n                    <div class=\"home-text-blocks-container\">\r\n                        <div class=\"home-text-block\" v-for=\"(block, index) in textBlocks\" :key=\"index\">\r\n                            <h3>{{ block.title }}</h3>\r\n                            <p>{{ block.description }}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <el-divider><i class=\"el-icon-menu\"></i></el-divider>\r\n                <!-- 区块浏览器部分开始 -->\r\n                <div class=\"block-browser\">\r\n                    <img src=\"../assets/logo.png\" class=\"block-browser-logo\">\r\n                    <p class=\"browser-passage1\">为工业互联网数据资产存证、确权、溯源需求</p>\r\n                    <p class=\"browser-passage2\">提供安全、高效、可信的区块链服务</p>\r\n                    <h1 style=\"color: rgb(196,196,196);\">区块浏览器</h1>\r\n                </div>\r\n                <div class=\"block-browser-search-box\">\r\n                    <input type=\"text\" class=\"block-browser-search-input\" placeholder=\"搜索地址/交易/区块\"\r\n                        v-model=\"searchData\" @keyup.enter=\"blockSearch\">\r\n                    <button class=\"block-browser-search-button\" @click=\"blockSearch\">搜索</button>\r\n                </div>\r\n                <div v-if=\"show\" class=\"block-result-card-box\">\r\n                    <div v-for=\"(item, index) in searchResult\" :key=\"index\" class=\"block-result-card\">\r\n                        <h2>区块{{ index }}</h2>\r\n                        <div class=\"block-result-card-content\">\r\n                            <!-- <el-divider><i class=\"el-icon-bottom\"></i></el-divider> -->\r\n                            <div>\r\n                                <div v-for=\"(title, n) in blockTitle\" :key=\"n\" class=\"result-card-context\">\r\n                                    <p v-if=\"(n === 18 || n === 19)\"></p>\r\n                                    <p v-else>{{ title }}: {{ item[title] }}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <!-- <el-collapse v-model=\"activeNames\" @change=\"handleChange\">\r\n                                        <el-collapse-item title=\"交易列表\" :name=\"index\" class=\"result-card-context\">\r\n                                            <p>transactions: {{ item['transactions'] }}</p>\r\n                                            <p class=\"transaction-Tx-link\" @click=\"showTransactionDetail(index)\">\r\n                                                transactionsRoot: {{\r\n                                                    item['transactionsRoot'] }}\r\n                                            </p>\r\n                                        </el-collapse-item>\r\n                                    </el-collapse> -->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div v-else class=\"block-result-card-box\">\r\n                    <div class=\"block-result-card\">\r\n                        <h2>查询结果</h2>\r\n                        <div class=\"block-result-card-content\">\r\n                            <el-divider><i class=\"el-icon-bottom\"></i></el-divider>\r\n                            <div>\r\n                                <p v-for=\"(item, index) in transactions_detail_title\" :key=\"index\"\r\n                                    class=\"result-card-context\">{{ item }}: {{ transactionResult[index] }}</p>\r\n                                <!-- <div v-for=\"(item, index) in transactionResult\" :key=\"index\" class=\"result-card-context\">\r\n                                    <p v-for=\"(item, index) in transactionResult\" :key=\"index\">{{ index }}: {{ item }}</p>\r\n                                </div> -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- 区块浏览器部分结束 -->\r\n            </div>\r\n        </transition>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import getRecentBlocks from '@/commons/getRecentBlocks';\r\nimport getTransaction from '@/commons/getTransaction';\r\nimport getTransactionHash from '@/commons/getTransactionHash';\r\nimport getURLbyTokenId from '@/commons/getURLbyTokenId';\r\nimport debounce from 'lodash/debounce';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    created() {\r\n        this.blockSearch = debounce(this.blockSearch, 300);\r\n    },\r\n    mounted() {\r\n        this.searchData = this.$route.query.bkSearchQuery ? this.$route.query.bkSearchQuery.toString() : '';\r\n        this.activeNames = Array.from({ length: 100 }, (_, index) => index);\r\n        this.blockSearch();\r\n    },\r\n    data() {\r\n        return {\r\n            // 区块浏览器数据\r\n            show: true,\r\n            searchData: '',\r\n            activeNames: [],\r\n            searchResult: [],\r\n            showDetail: false,\r\n            blockTitle: [\r\n                'BlockNumber',         // 对应原来的 'number'\r\n                'Difficulty',          // 对应原来的 'difficulty'\r\n                'ExtraData',           // 对应原来的 'extraData'\r\n                'GasLimit',            // 对应原来的 'gasLimit'\r\n                'GasUsed',             // 对应原来的 'gasUsed'\r\n                'Hash',                // 对应原来的 'hash'\r\n                'LogsBloom',           // 对应原来的 'logsBloom'\r\n                'Miner',               // 对应原来的 'miner'\r\n                'Nonce',               // 对应原来的 'nonce'\r\n                'ParentHash',          // 对应原来的 'parentHash'\r\n                'ReceiptsRoot',        // 对应原来的 'receiptsRoot'\r\n                'Sha3Uncles',          // 对应原来的 'sha3Uncles'\r\n                'Size',                // 对应原来的 'size'\r\n                'StateRoot',           // 对应原来的 'stateRoot'\r\n                'Timestamp',           // 对应原来的 'timestamp'\r\n                'TotalDifficulty',     // 对应原来的 'totalDifficulty'\r\n                'Transactions',        // 对应原来的 'transactions'\r\n                'TransactionsRoot',    // 对应原来的 'transactionsRoot'\r\n                'Uncles'               // 对应原来的 'uncles'\r\n            ],\r\n            transactionResult: [],\r\n            transactions_detail_title: [\r\n            'BlockNumber',         // 对应原来的 'number'\r\n                'Difficulty',          // 对应原来的 'difficulty'\r\n                'ExtraData',           // 对应原来的 'extraData'\r\n                'GasLimit',            // 对应原来的 'gasLimit'\r\n                'GasUsed',             // 对应原来的 'gasUsed'\r\n                'Hash',                // 对应原来的 'hash'\r\n                'LogsBloom',           // 对应原来的 'logsBloom'\r\n                'Miner',               // 对应原来的 'miner'\r\n                'Nonce',               // 对应原来的 'nonce'\r\n                'ParentHash',          // 对应原来的 'parentHash'\r\n                'ReceiptsRoot',        // 对应原来的 'receiptsRoot'\r\n                'Sha3Uncles',          // 对应原来的 'sha3Uncles'\r\n                'Size',                // 对应原来的 'size'\r\n                'StateRoot',           // 对应原来的 'stateRoot'\r\n                'Timestamp',           // 对应原来的 'timestamp'\r\n                'TotalDifficulty',     // 对应原来的 'totalDifficulty'\r\n                'Transactions',        // 对应原来的 'transactions'\r\n                'TransactionsRoot',    // 对应原来的 'transactionsRoot'\r\n                'Uncles'               // 对应原来的 'uncles'\r\n            ],\r\n            // 走马灯图片\r\n            picture: [\r\n                require(\"@/assets/6.png\"),\r\n                require(\"@/assets/PixPin_2024-05-25_17-46-05.jpg\"),\r\n                require(\"@/assets/d7dfc57d557f18490d2d00ba5f9f8af.png\"),\r\n                require(\"@/assets/1.jpg\"),\r\n                require(\"@/assets/2.jpg\"),\r\n                require(\"@/assets/3.jpg\"),\r\n                require(\"@/assets/4.jpg\"),\r\n                require(\"@/assets/5.jpg\"),\r\n            ],\r\n            // 介绍文字\r\n            textBlocks: [\r\n                {\r\n                    title: '工业互联网 ', description: '\"工业互联网\"（Industrial Internet）是指在工业领域应用物联网技术，'\r\n                        + '通过设备、传感器和软件系统的互联互通，实现数据的收集、交换和分析，以优化制造流程、提高生产效率和减少维护' +\r\n                        '成本的概念。它通常涉及到智能制造、自动化技术、大数据分析和云计算等领域。'\r\n                },\r\n                {\r\n                    title: '无币公链', description: '\"无币公链\"是指一种公共区块链技术的实现，其中不发行任何原生加密货币或代币。' +\r\n                        '这与众多知名的区块链平台不同，后者通常都有自己的内置代币，如比特币、以太坊等。'\r\n                },\r\n                {\r\n                    title: '数据资产化', description: '\"数据资产化\"是一个涉及将数据转换成可量化的、有价值的资产的概念。'\r\n                        + '这一过程不仅包括数据的收集和存储，还包括对数据的管理、分析和利用，目的是从数据中提取价值，支持决策制定，' +\r\n                        '创造商业机会，甚至直接作为产品或服务出售。'\r\n                },\r\n            ],\r\n        };\r\n    },\r\n    methods: {\r\n        logOut() {\r\n            this.$store.dispatch('logout');\r\n            setTimeout(() => {\r\n                this.$router.push('/intro');\r\n            }, 200);\r\n        },\r\n        blockSearch() {\r\n            if (this.searchData === '') {\r\n                this.show = true;\r\n                console.log('search for all');\r\n\r\n                // 使用API请求前100个区块\r\n                const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n                axios.get(`${apiBaseUrl}/getBlocksAndTransactions`, {\r\n                    params: { n: 100 } // 获取前100个区块\r\n                }).then(response => {\r\n                    if (response.data.code === 200) {\r\n                        const blocks = response.data.blocksWithTransactions;\r\n                        this.searchResult = [];\r\n                        for (let i = 0; i < blocks.length; i++) {\r\n                            let tmp = {};\r\n                            // 将区块信息从响应数据中提取并匹配你已有的字段\r\n                            for (let j = 0; j < this.blockTitle.length; j++) {\r\n                                tmp[this.blockTitle[j]] = blocks[i][this.blockTitle[j]] || ''; // 使用区块数据中的相应字段\r\n                                // console.log(blocks);\r\n                                if (tmp[this.blockTitle[j]] != null) {\r\n                                    tmp[this.blockTitle[j]] = tmp[this.blockTitle[j]].toString();\r\n                                }\r\n                            }\r\n                            this.searchResult.push(tmp);\r\n                        }\r\n                    } else {\r\n                        console.error(\"Error fetching blocks:\", response.data);\r\n                    }\r\n                }).catch(error => {\r\n                    console.error(\"Error fetching blocks:\", error);\r\n                });\r\n            } else {\r\n                this.show = false;\r\n                if (this.searchData.startsWith('0x')) {\r\n                    console.log('search by hashText');\r\n                    this.searchByTH(this.searchData);\r\n                } else if (this.searchData.startsWith('http')) {\r\n                    console.log('search by url');\r\n                    this.searchByUrl(this.searchData);\r\n                } else {\r\n                    console.log('search by token id');\r\n                    this.searchByTokenId(this.searchData);\r\n                }\r\n            }\r\n            this.$nextTick(() => {\r\n                console.log('DOM已更新');\r\n            });\r\n            this.searchData = '';\r\n        },\r\n        async searchByUrl(url) {\r\n            let hashTx = await getTransactionHash(url);\r\n            if (hashTx === null) return false;\r\n            return this.searchByTH(hashTx);\r\n        },\r\n        async searchByTokenId(tokenId) {\r\n            let url = await getURLbyTokenId(tokenId);\r\n            return this.searchByUrl(url);\r\n        },\r\n        async searchByTH(hash) {\r\n            let res = await getTransaction(hash)\r\n            if (res === 'error') return false;\r\n\r\n            // 后续处理\r\n            console.log(this.transactionResult)\r\n            if (this.transactionResult.length > 0) {\r\n                this.transactionResult = []\r\n            }\r\n            console.log(this.transactionResult)\r\n            for (let i = 0; i < this.transactions_detail_title.length; i++) {\r\n                this.transactionResult.push(res[this.transactions_detail_title[i]]);\r\n            }\r\n            console.log(this.transactionResult);\r\n            return true\r\n        },\r\n        showTransactionDetail(index) {\r\n            console.log('index::'+index);\r\n            let tmp = this.searchResult[index]['transactions'];\r\n            this.$router.push({\r\n                path: '/blockBrowse/transactionDetail',\r\n                query: { hash: tmp }\r\n            });\r\n        },\r\n        handleChange(val) {\r\n            console.log(val);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 容器样式 */\r\n.container {\r\n    max-width: 100%;\r\n    height: auto;\r\n    max-height: 100%;\r\n}\r\n\r\n/* 内容样式 */\r\n.content {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    margin: 0;\r\n}\r\n\r\nh3 {\r\n    font-size: 1.3em;\r\n    color:  #c64500;\r\n    text-align:justify;\r\n}\r\n\r\n.page-titile {\r\n    position: relative;\r\n    left: 14%;\r\n    top: -20%;\r\n}\r\n\r\n.home-navbar {\r\n    margin-top: 20px;\r\n    margin-left: calc(50% - 48vw);\r\n    background-color: rgba(255, 255, 255, 0.6); /* 设置为半透明 */\r\n    border-bottom: 1px solid rgba(230, 232, 236, 0); /* 去掉底部边框 */\r\n    padding: 10px 20px;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 90%;\r\n    height: auto;\r\n    z-index: 1000;\r\n    border-radius: 25px; /* 设置圆角 */\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 添加阴影效果 */\r\n    backdrop-filter: blur(30px); /* 添加背景模糊效果 */\r\n}\r\n\r\n/* Recharge */\r\n.recharge-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -100px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Browser */\r\n.intro-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -90px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Explore */\r\n.explore-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -80px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Upload */\r\n.upload-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -70px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Records */\r\n.records-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -60px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Home */\r\n.home-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -50px; /* 根据需要调整位置 */\r\n}\r\n\r\n.home-navbar-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n}\r\n\r\n.want-to-be-left {\r\n    display: flex;\r\n    justify-content: flex-start; /* 左对齐 */\r\n    align-items: center;\r\n    flex-grow: 1; /* 使其占据剩余空间 */\r\n}\r\n\r\n.want-to-be-right {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n.home-navbar-logo-container {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.home-navbar-logo {\r\n    font-size: 2px;\r\n    font-weight: bold;\r\n    color: #333;\r\n    text-decoration: none;\r\n}\r\n\r\n.home-logo-image {\r\n    height: 40px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.home-navbar-title {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.home-navbar-menu li {\r\n    margin: 0 15px;\r\n}\r\n\r\n.home-navbar-menu {\r\n    list-style: none;\r\n    display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.home-navbar-menu li a {\r\n    color: #4d3535;\r\n    text-decoration: none;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    transition: color 0.3s;\r\n}\r\n\r\n.home-navbar-menu li.active a {\r\n    font-size: 18px;\r\n    color:  #ff5900;\r\n}\r\n\r\n.home-navbar-menu li a:hover {\r\n    color:  #ff5900;\r\n}\r\n\r\n.home-navbar-actions {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.home-navbar-button {\r\n    background-color: rgba(255, 255, 255, 0.6); /* 设置为半透明 */\r\n    color: #4d3535;\r\n    border: 1px solid #4d3535; /* 添加2px的边框，颜色与原背景色一致 */\r\n    padding: 10px 10px;\r\n    border-radius: 20px; /* 设置圆角 */\r\n    cursor: pointer;\r\n    transition: background-color 0.3s, border-color 0.3s; /* 添加边框颜色过渡 */\r\n    margin-right: 10px; /* 增加一个右边距 */\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 添加阴影效果 */\r\n    backdrop-filter: blur(30px); /* 添加背景模糊效果 */\r\n}\r\n\r\n.home-navbar-button:hover {\r\n    background-color: #ff5900;\r\n    border-color: #ff5900; /* 修改hover状态下的边框颜色 */\r\n}\r\n\r\n.home-navbar-profile img {\r\n    width: 35px;\r\n    height: 35px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n}\r\n\r\n/* .home-card-container {\r\n    margin-top: 80px;\r\n    height: auto;\r\n} */\r\n\r\n.home-card-container {\r\n    position: relative;\r\n    left: 5%;\r\n    margin-top: 100px;\r\n    height: auto;\r\n    padding: 0; /* 移除任何内边距 */\r\n    width: 90%; /* 确保容器宽度为100% */\r\n    box-sizing: border-box; /* 确保padding和border包含在宽度内 */\r\n}\r\n\r\n.home-card-img {\r\n    width: 100%; /* 图片宽度填充整个容器 */\r\n    height: 100%; /* 图片高度填充整个容器 */\r\n    object-fit: cover; /* 保持图片比例，同时填充整个容器 */\r\n}\r\n\r\n\r\n.home-introduction {\r\n    margin-left: calc(50% - 50vw);\r\n    font: \"Microsoft YaHei\";\r\n    color: #edebeb;\r\n}\r\n\r\n.home-text-blocks-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    max-width: 900px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.home-text-block {\r\n    flex: 1;\r\n    margin: 0 10px;\r\n    background-color: rgb(41, 41, 41);\r\n    border-radius: 4px;\r\n    padding: 20px;\r\n    text-align: center;\r\n}\r\n\r\n.home-text-block h3 {\r\n    margin-bottom: 10px;\r\n    font-size: 1.5em;\r\n}\r\n\r\n.home-text-block p {\r\n    font-size: 1em;\r\n    line-height: 1.6;\r\n}\r\n\r\n.home-block-browser {\r\n    margin-left: calc(50% - 50vw);\r\n    display: inline-block; /* 使标题与搜索框在同一行 */\r\n    vertical-align: left; /* 垂直对齐 */\r\n    color: aliceblue;\r\n}\r\n\r\n.chain-search-container {\r\n    width: 100%;\r\n    max-width: 600px;\r\n    margin: 0px auto;\r\n    position: relative;\r\n    right:5%;\r\n}\r\n\r\n.chain-search-box {\r\n    display: flex;\r\n    align-items: center;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n}\r\n\r\n.chain-search-box input[type=\"text\"] {\r\n    flex: 1;\r\n    padding: 10px 15px;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.chain-search-box button {\r\n    padding: 10px 15px;\r\n    border: none;\r\n    background: transparent;\r\n    cursor: pointer;\r\n    outline: none;\r\n}\r\n\r\n.chain-search-box button:hover {\r\n    background-color: #f1f1f1;\r\n}\r\n\r\n.chain-search-box svg {\r\n    width: 20px;\r\n    height: 20px;\r\n    fill: #666;\r\n}\r\n\r\n/* block browser */\r\n.block-browser {\r\n    position: relative;\r\n    left: 0%;\r\n    margin-top: 5px;\r\n}\r\n\r\n.block-browser-logo {\r\n    width: 360px;\r\n    height: auto;\r\n}\r\n\r\n.browser-passage1 {\r\n    font-family: Poppins, sans-serif;\r\n    color: #ffffff;\r\n    font-size: 30px;\r\n    padding: 25px 0px 30px;\r\n}\r\n\r\n.browser-passage2 {\r\n    font-family: Poppins, sans-serif;\r\n    color: #ffffff;\r\n    font-size: 28px;\r\n    padding: 0px 0px 60px;\r\n}\r\n\r\n.block-browser-search-box {\r\n    position: relative;\r\n    left: 0%;\r\n    font-family: Arial, sans-serif;\r\n    width: 700px;\r\n    margin: 20px auto;\r\n    padding: 10px;\r\n    background-color: #ffffffab;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n}\r\n\r\n.block-browser-search-input {\r\n    flex: 1;\r\n    padding: 5px;\r\n    border: 1px solid #ccc;\r\n    background-color: #ffffffd5;\r\n    border-radius: 10px;\r\n    font-size: 16px;\r\n    outline: none;\r\n}\r\n\r\n.block-browser-search-button {\r\n    padding: 10px 20px;\r\n    background-color: #ff5100;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 10px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.block-browser-search-button:hover {\r\n    background-color: #ffc02d;\r\n    color: #ffffff94;\r\n}\r\n\r\n.block-result-card-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\nh2{\r\n    color:#333;\r\n    margin-top: 1%;\r\n    margin-bottom: 0%;\r\n}\r\n\r\n.block-result-card {\r\n    color:#333;\r\n    font-size: 1em;\r\n    max-width: 80%;\r\n    margin-bottom: 50px;\r\n    background-color: #ffffffdc;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    transition: transform 0.3s;\r\n    width: 80%;\r\n    align-self: center;\r\n}\r\n\r\n.block-result-card:hover {\r\n    transform: translateY(-10px);\r\n}\r\n\r\n.block-result-card-content {\r\n    padding: 50px;\r\n}\r\n\r\n.result-card-context {\r\n    text-align: left;\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 3;\r\n    overflow: hidden;\r\n}\r\n\r\n.transaction-Tx-link {\r\n    color: rgb(209, 100, 37);\r\n}\r\n\r\n.transaction-Tx-link:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n.disabled {\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n}\r\n</style>"],"mappings":";AAqHA;AACA,OAAAA,cAAA;AACA,OAAAC,kBAAA;AACA,OAAAC,eAAA;AACA,OAAAC,QAAA;AACA,OAAAC,KAAA;AAEA;EACAC,QAAA;IACA,KAAAC,WAAA,GAAAH,QAAA,MAAAG,WAAA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,aAAA,QAAAF,MAAA,CAAAC,KAAA,CAAAC,aAAA,CAAAC,QAAA;IACA,KAAAC,WAAA,GAAAC,KAAA,CAAAC,IAAA;MAAAC,MAAA;IAAA,IAAAC,CAAA,EAAAC,KAAA,KAAAA,KAAA;IACA,KAAAZ,WAAA;EACA;EACAa,KAAA;IACA;MACA;MACAC,IAAA;MACAZ,UAAA;MACAK,WAAA;MACAQ,YAAA;MACAC,UAAA;MACAC,UAAA,GACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA,CACA;MACAC,iBAAA;MACAC,yBAAA,GACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA;MACA;MAAA,CACA;MACA;MACAC,OAAA,GACAC,OAAA,oBACAA,OAAA,6CACAA,OAAA,kDACAA,OAAA,oBACAA,OAAA,oBACAA,OAAA,oBACAA,OAAA,oBACAA,OAAA,mBACA;MACA;MACAC,UAAA,GACA;QACAC,KAAA;QAAAC,WAAA,kDACA,yDACA;MACA,GACA;QACAD,KAAA;QAAAC,WAAA,6CACA;MACA,GACA;QACAD,KAAA;QAAAC,WAAA,wCACA,yDACA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,MAAA,CAAAC,QAAA;MACAC,UAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA;IACA;IACA/B,YAAA;MACA,SAAAE,UAAA;QACA,KAAAY,IAAA;QACAkB,OAAA,CAAAC,GAAA;;QAEA;QACA,MAAAC,UAAA,GAAAC,OAAA,CAAAC,GAAA,CAAAC,wBAAA;QACAvC,KAAA,CAAAwC,GAAA,IAAAJ,UAAA;UACAK,MAAA;YAAAC,CAAA;UAAA;QACA,GAAAC,IAAA,CAAAC,QAAA;UACA,IAAAA,QAAA,CAAA7B,IAAA,CAAA8B,IAAA;YACA,MAAAC,MAAA,GAAAF,QAAA,CAAA7B,IAAA,CAAAgC,sBAAA;YACA,KAAA9B,YAAA;YACA,SAAA+B,CAAA,MAAAA,CAAA,GAAAF,MAAA,CAAAlC,MAAA,EAAAoC,CAAA;cACA,IAAAC,GAAA;cACA;cACA,SAAAC,CAAA,MAAAA,CAAA,QAAA/B,UAAA,CAAAP,MAAA,EAAAsC,CAAA;gBACAD,GAAA,MAAA9B,UAAA,CAAA+B,CAAA,KAAAJ,MAAA,CAAAE,CAAA,OAAA7B,UAAA,CAAA+B,CAAA;gBACA;gBACA,IAAAD,GAAA,MAAA9B,UAAA,CAAA+B,CAAA;kBACAD,GAAA,MAAA9B,UAAA,CAAA+B,CAAA,KAAAD,GAAA,MAAA9B,UAAA,CAAA+B,CAAA,GAAA1C,QAAA;gBACA;cACA;cACA,KAAAS,YAAA,CAAAgB,IAAA,CAAAgB,GAAA;YACA;UACA;YACAf,OAAA,CAAAiB,KAAA,2BAAAP,QAAA,CAAA7B,IAAA;UACA;QACA,GAAAqC,KAAA,CAAAD,KAAA;UACAjB,OAAA,CAAAiB,KAAA,2BAAAA,KAAA;QACA;MACA;QACA,KAAAnC,IAAA;QACA,SAAAZ,UAAA,CAAAiD,UAAA;UACAnB,OAAA,CAAAC,GAAA;UACA,KAAAmB,UAAA,MAAAlD,UAAA;QACA,gBAAAA,UAAA,CAAAiD,UAAA;UACAnB,OAAA,CAAAC,GAAA;UACA,KAAAoB,WAAA,MAAAnD,UAAA;QACA;UACA8B,OAAA,CAAAC,GAAA;UACA,KAAAqB,eAAA,MAAApD,UAAA;QACA;MACA;MACA,KAAAqD,SAAA;QACAvB,OAAA,CAAAC,GAAA;MACA;MACA,KAAA/B,UAAA;IACA;IACA,MAAAmD,YAAAG,GAAA;MACA,IAAAC,MAAA,SAAA9D,kBAAA,CAAA6D,GAAA;MACA,IAAAC,MAAA;MACA,YAAAL,UAAA,CAAAK,MAAA;IACA;IACA,MAAAH,gBAAAI,OAAA;MACA,IAAAF,GAAA,SAAA5D,eAAA,CAAA8D,OAAA;MACA,YAAAL,WAAA,CAAAG,GAAA;IACA;IACA,MAAAJ,WAAAO,IAAA;MACA,IAAAC,GAAA,SAAAlE,cAAA,CAAAiE,IAAA;MACA,IAAAC,GAAA;;MAEA;MACA5B,OAAA,CAAAC,GAAA,MAAAf,iBAAA;MACA,SAAAA,iBAAA,CAAAR,MAAA;QACA,KAAAQ,iBAAA;MACA;MACAc,OAAA,CAAAC,GAAA,MAAAf,iBAAA;MACA,SAAA4B,CAAA,MAAAA,CAAA,QAAA3B,yBAAA,CAAAT,MAAA,EAAAoC,CAAA;QACA,KAAA5B,iBAAA,CAAAa,IAAA,CAAA6B,GAAA,MAAAzC,yBAAA,CAAA2B,CAAA;MACA;MACAd,OAAA,CAAAC,GAAA,MAAAf,iBAAA;MACA;IACA;IACA2C,sBAAAjD,KAAA;MACAoB,OAAA,CAAAC,GAAA,aAAArB,KAAA;MACA,IAAAmC,GAAA,QAAAhC,YAAA,CAAAH,KAAA;MACA,KAAAkB,OAAA,CAAAC,IAAA;QACA+B,IAAA;QACA1D,KAAA;UAAAuD,IAAA,EAAAZ;QAAA;MACA;IACA;IACAgB,aAAAC,GAAA;MACAhC,OAAA,CAAAC,GAAA,CAAA+B,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}