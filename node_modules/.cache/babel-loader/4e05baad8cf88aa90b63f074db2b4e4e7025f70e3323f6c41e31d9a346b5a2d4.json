{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { TypedArray } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nconst isIterable = item => typeof item === 'object' && !isNullish(item) && !Array.isArray(item) && !(item instanceof TypedArray);\n// The following code is a derivative work of the code from the \"LiskHQ/lisk-sdk\" project,\n// which is licensed under Apache version 2.\n/**\n * Deep merge two objects.\n * @param destination - The destination object.\n * @param sources - An array of source objects.\n * @returns - The merged object.\n */\nexport const mergeDeep = (destination, ...sources) => {\n  if (!isIterable(destination)) {\n    return destination;\n  }\n  const result = Object.assign({}, destination); // clone deep here\n  for (const src of sources) {\n    // const src = { ..._src };\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in src) {\n      if (isIterable(src[key])) {\n        if (!result[key]) {\n          result[key] = {};\n        }\n        result[key] = mergeDeep(result[key], src[key]);\n      } else if (!isNullish(src[key]) && Object.hasOwnProperty.call(src, key)) {\n        if (Array.isArray(src[key]) || src[key] instanceof TypedArray) {\n          result[key] = src[key].slice(0);\n        } else {\n          result[key] = src[key];\n        }\n      }\n    }\n  }\n  return result;\n};","map":{"version":3,"names":["TypedArray","isNullish","isIterable","item","Array","isArray","mergeDeep","destination","sources","result","Object","assign","src","key","hasOwnProperty","call","slice"],"sources":["../../src/objects.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAASA,UAAU,QAAQ,YAAY;AACvC,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,MAAMC,UAAU,GAAIC,IAAa,IAChC,OAAOA,IAAI,KAAK,QAAQ,IACxB,CAACF,SAAS,CAACE,IAAI,CAAC,IAChB,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IACpB,EAAEA,IAAI,YAAYH,UAAU,CAAC;AAE9B;AACA;AACA;;;;;;AAMA,OAAO,MAAMM,SAAS,GAAGA,CACxBC,WAAoC,EACpC,GAAGC,OAAkC,KACT;EAC5B,IAAI,CAACN,UAAU,CAACK,WAAW,CAAC,EAAE;IAC7B,OAAOA,WAAW;;EAEnB,MAAME,MAAM,GAAAC,MAAA,CAAAC,MAAA,KAAQJ,WAAW,CAAE,CAAC,CAAC;EACnC,KAAK,MAAMK,GAAG,IAAIJ,OAAO,EAAE;IAC1B;IACA;IACA,KAAK,MAAMK,GAAG,IAAID,GAAG,EAAE;MACtB,IAAIV,UAAU,CAACU,GAAG,CAACC,GAAG,CAAC,CAAC,EAAE;QACzB,IAAI,CAACJ,MAAM,CAACI,GAAG,CAAC,EAAE;UACjBJ,MAAM,CAACI,GAAG,CAAC,GAAG,EAAE;;QAEjBJ,MAAM,CAACI,GAAG,CAAC,GAAGP,SAAS,CACtBG,MAAM,CAACI,GAAG,CAA4B,EACtCD,GAAG,CAACC,GAAG,CAA4B,CACnC;OACD,MAAM,IAAI,CAACZ,SAAS,CAACW,GAAG,CAACC,GAAG,CAAC,CAAC,IAAIH,MAAM,CAACI,cAAc,CAACC,IAAI,CAACH,GAAG,EAAEC,GAAG,CAAC,EAAE;QACxE,IAAIT,KAAK,CAACC,OAAO,CAACO,GAAG,CAACC,GAAG,CAAC,CAAC,IAAID,GAAG,CAACC,GAAG,CAAC,YAAYb,UAAU,EAAE;UAC9DS,MAAM,CAACI,GAAG,CAAC,GAAID,GAAG,CAACC,GAAG,CAAe,CAACG,KAAK,CAAC,CAAC,CAAC;SAC9C,MAAM;UACNP,MAAM,CAACI,GAAG,CAAC,GAAGD,GAAG,CAACC,GAAG,CAAC;;;;;EAK1B,OAAOJ,MAAM;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}