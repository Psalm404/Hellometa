{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport pkg from 'crc-32';\nimport { EventEmitter, bytesToHex, hexToBytes, uint8ArrayConcat } from 'web3-utils';\nimport { TypeOutput } from './types.js';\nimport { intToUint8Array, toType, parseGethGenesis } from './utils.js';\nimport goerli from './chains/goerli.js';\nimport mainnet from './chains/mainnet.js';\nimport sepolia from './chains/sepolia.js';\nimport { EIPs } from './eips/index.js';\nimport { Chain, CustomChain, Hardfork } from './enums.js';\nimport { hardforks as HARDFORK_SPECS } from './hardforks/index.js';\nconst {\n  buf: crc32Uint8Array\n} = pkg;\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n  constructor(opts) {\n    var _a, _b;\n    super();\n    this._eips = [];\n    this._customChains = (_a = opts.customChains) !== null && _a !== void 0 ? _a : [];\n    this._chainParams = this.setChain(opts.chain);\n    this.DEFAULT_HARDFORK = (_b = this._chainParams.defaultHardfork) !== null && _b !== void 0 ? _b : Hardfork.Merge;\n    // Assign hardfork changes in the sequence of the applied hardforks\n    this.HARDFORK_CHANGES = this.hardforks().map(hf => [hf.name, HARDFORK_SPECS[hf.name]]);\n    this._hardfork = this.DEFAULT_HARDFORK;\n    if (opts.hardfork !== undefined) {\n      this.setHardfork(opts.hardfork);\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips);\n    }\n  }\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `web3-utils/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(chainParamsOrName, opts = {}) {\n    var _a;\n    const baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n    const standardChainParams = Object.assign({}, Common._getChainParams(baseChain));\n    standardChainParams.name = 'custom-chain';\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common(Object.assign({\n        chain: Object.assign(Object.assign({}, standardChainParams), chainParamsOrName)\n      }, opts));\n    }\n    if (chainParamsOrName === CustomChain.PolygonMainnet) {\n      return Common.custom({\n        name: CustomChain.PolygonMainnet,\n        chainId: 137,\n        networkId: 137\n      }, opts);\n    }\n    if (chainParamsOrName === CustomChain.PolygonMumbai) {\n      return Common.custom({\n        name: CustomChain.PolygonMumbai,\n        chainId: 80001,\n        networkId: 80001\n      }, opts);\n    }\n    if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n      return Common.custom({\n        name: CustomChain.ArbitrumRinkebyTestnet,\n        chainId: 421611,\n        networkId: 421611\n      }, opts);\n    }\n    if (chainParamsOrName === CustomChain.ArbitrumOne) {\n      return Common.custom({\n        name: CustomChain.ArbitrumOne,\n        chainId: 42161,\n        networkId: 42161\n      }, opts);\n    }\n    if (chainParamsOrName === CustomChain.xDaiChain) {\n      return Common.custom({\n        name: CustomChain.xDaiChain,\n        chainId: 100,\n        networkId: 100\n      }, opts);\n    }\n    if (chainParamsOrName === CustomChain.OptimisticKovan) {\n      return Common.custom({\n        name: CustomChain.OptimisticKovan,\n        chainId: 69,\n        networkId: 69\n      }, Object.assign({\n        hardfork: Hardfork.Berlin\n      }, opts));\n    }\n    if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n      return Common.custom({\n        name: CustomChain.OptimisticEthereum,\n        chainId: 10,\n        networkId: 10\n      }, Object.assign({\n        hardfork: Hardfork.Berlin\n      }, opts));\n    }\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    throw new Error(`Custom chain ${chainParamsOrName} not supported`);\n  }\n  /**\n   * Static method to load and set common from a geth genesis json\n   * @param genesisJson json of geth configuration\n   * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n   * @returns Common\n   */\n  static fromGethGenesis(genesisJson, {\n    chain,\n    eips,\n    genesisHash,\n    hardfork,\n    mergeForkIdPostMerge\n  }) {\n    var _a;\n    const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge);\n    const common = new Common({\n      chain: (_a = genesisParams.name) !== null && _a !== void 0 ? _a : 'custom',\n      customChains: [genesisParams],\n      eips,\n      hardfork: hardfork !== null && hardfork !== void 0 ? hardfork : genesisParams.hardfork\n    });\n    if (genesisHash !== undefined) {\n      common.setForkHashes(genesisHash);\n    }\n    return common;\n  }\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId bigint id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId) {\n    const initializedChains = this._getInitializedChains();\n    return Boolean(initializedChains.names[chainId.toString()]);\n  }\n  static _getChainParams(_chain, customChains) {\n    let chain = _chain;\n    const initializedChains = this._getInitializedChains(customChains);\n    if (typeof chain === 'number' || typeof chain === 'bigint') {\n      chain = chain.toString();\n      if (initializedChains.names[chain]) {\n        const name = initializedChains.names[chain];\n        return initializedChains[name];\n      }\n      throw new Error(`Chain with ID ${chain} not supported`);\n    }\n    if (initializedChains[chain] !== undefined) {\n      return initializedChains[chain];\n    }\n    throw new Error(`Chain with name ${chain} not supported`);\n  }\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain representation.\n   *              Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain) {\n    if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain, this._customChains);\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error('Chain must be a string, number, or bigint when initialized with customChains passed in');\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n      for (const param of required) {\n        if (!(param in chain)) {\n          throw new Error(`Missing required chain parameter: ${param}`);\n        }\n      }\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n    for (const hf of this.hardforks()) {\n      if (hf.block === undefined) {\n        throw new Error(`Hardfork cannot have undefined block number`);\n      }\n    }\n    return this._chainParams;\n  }\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork) {\n    let existing = false;\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork;\n          this.emit('hardforkChanged', hardfork);\n        }\n        existing = true;\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`);\n    }\n  }\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n   * @param timestamp: timestamp in seconds at which block was/is to be minted\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(_blockNumber, _td, _timestamp) {\n    const blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n    const td = toType(_td, TypeOutput.BigInt);\n    const timestamp = toType(_timestamp, TypeOutput.Number);\n    // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n    const hfs = this.hardforks().filter(hf =>\n    // eslint-disable-next-line no-null/no-null\n    hf.block !== null ||\n    // eslint-disable-next-line no-null/no-null\n    hf.ttd !== null && hf.ttd !== undefined || hf.timestamp !== undefined);\n    // eslint-disable-next-line no-null/no-null\n    const mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n    const doubleTTDHF = hfs.slice(mergeIndex + 1)\n    // eslint-disable-next-line no-null/no-null\n    .findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n    if (doubleTTDHF >= 0) {\n      throw Error(`More than one merge hardforks found with ttd specified`);\n    }\n    // Find the first hardfork that has a block number greater than `blockNumber`\n    // (skips the merge hardfork since it cannot have a block number specified).\n    // If timestamp is not provided, it also skips timestamps hardforks to continue\n    // discovering/checking number hardforks.\n    let hfIndex = hfs.findIndex(hf =>\n    // eslint-disable-next-line no-null/no-null\n    hf.block !== null && hf.block > blockNumber || timestamp !== undefined && Number(hf.timestamp) > timestamp);\n    if (hfIndex === -1) {\n      // all hardforks apply, set hfIndex to the last one as that's the candidate\n      hfIndex = hfs.length;\n    } else if (hfIndex === 0) {\n      // cannot have a case where a block number is before all applied hardforks\n      // since the chain has to start with a hardfork\n      throw Error('Must have at least one hardfork at block 0');\n    }\n    // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n    if (timestamp === undefined) {\n      const stepBack = hfs.slice(0, hfIndex).reverse()\n      // eslint-disable-next-line no-null/no-null\n      .findIndex(hf => hf.block !== null || hf.ttd !== undefined);\n      hfIndex -= stepBack;\n    }\n    // Move hfIndex one back to arrive at candidate hardfork\n    hfIndex -= 1;\n    // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n    // hardforks. so it will now be needed to rollback\n    // eslint-disable-next-line no-null/no-null\n    if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n      // We're on the merge hardfork.  Let's check the TTD\n      // eslint-disable-next-line no-null/no-null\n      if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd) > td) {\n        // Merge ttd greater than current td so we're on hardfork before merge\n        hfIndex -= 1;\n      }\n      // eslint-disable-next-line no-null/no-null\n    } else if (mergeIndex >= 0 && td !== undefined && td !== null) {\n      if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd) > td) {\n        throw Error('Maximum HF determined by total difficulty is lower than the block number HF');\n      } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd) <= td) {\n        throw Error('HF determined by block number is lower than the minimum total difficulty HF');\n      }\n    }\n    const hfStartIndex = hfIndex;\n    // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n    // This won't anyway be the case with Merge hfs\n    for (; hfIndex < hfs.length - 1; hfIndex += 1) {\n      // break out if hfIndex + 1 is not scheduled at hfIndex\n      if (hfs[hfIndex].block !== hfs[hfIndex + 1].block || hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp) {\n        break;\n      }\n    }\n    if (timestamp) {\n      const minTimeStamp = hfs.slice(0, hfStartIndex).reduce((acc, hf) => {\n        var _a;\n        return Math.max(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : '0'), acc);\n      }, 0);\n      if (minTimeStamp > timestamp) {\n        throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`);\n      }\n      const maxTimeStamp = hfs.slice(hfIndex + 1).reduce((acc, hf) => {\n        var _a;\n        return Math.min(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : timestamp), acc);\n      }, timestamp);\n      if (maxTimeStamp < timestamp) {\n        throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`);\n      }\n    }\n    const hardfork = hfs[hfIndex];\n    return hardfork.name;\n  }\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @param timestamp\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(blockNumber, td, timestamp) {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n    this.setHardfork(hardfork);\n    return hardfork;\n  }\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params or null if hardfork not on chain\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  _getHardfork(hardfork) {\n    const hfs = this.hardforks();\n    for (const hf of hfs) {\n      if (hf.name === hardfork) return hf;\n    }\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n      const minHF = this.gteHardfork(EIPs[eip].minimumHardfork);\n      if (!minHF) {\n        throw new Error(\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (EIPs[eip].requiredEIPs !== undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        for (const elem of EIPs[eip].requiredEIPs) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            `${eip} requires EIP ${elem}, but is not included in the EIP list`);\n          }\n        }\n      }\n    }\n    this._eips = eips;\n  }\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precedence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  param(topic, name) {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value;\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip);\n      if (value !== undefined) return value;\n    }\n    return this.paramByHardfork(topic, name, this._hardfork);\n  }\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByHardfork(topic, name, hardfork) {\n    // eslint-disable-next-line no-null/no-null\n    let value = null;\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n        const hfEIPs = hfChanges[1].eips;\n        for (const eip of hfEIPs) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          const valueEIP = this.paramByEIP(topic, name, eip);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          value = typeof valueEIP === 'bigint' ? valueEIP : value;\n        }\n        // Parameter-inlining HF file (e.g. istanbul.json)\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (hfChanges[1][topic] === undefined) {\n          throw new Error(`Topic ${topic} not defined`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (hfChanges[1][topic][name] !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n          value = hfChanges[1][topic][name].v;\n        }\n      }\n      if (hfChanges[0] === hardfork) break;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return BigInt(value !== null && value !== void 0 ? value : 0);\n  }\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `undefined` if not found\n   */\n  // eslint-disable-next-line class-methods-use-this\n  paramByEIP(topic, name, eip) {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const eipParams = EIPs[eip];\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (eipParams[topic][name] === undefined) {\n      return undefined;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n    const value = eipParams[topic][name].v;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return BigInt(value);\n  }\n  /**\n   * Returns a parameter for the hardfork active on block number or\n   * optional provided total difficulty (Merge HF)\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   * @param td Total difficulty\n   *    * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByBlock(topic, name, blockNumber, td, timestamp) {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n    return this.paramByHardfork(topic, name, hardfork);\n  }\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip) {\n    if (this.eips().includes(eip)) {\n      return true;\n    }\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const hf = hfChanges[1];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n      if (this.gteHardfork(hf.name) && 'eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (hf.eips.includes(eip)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  _hardfork, _blockNumber) {\n    const blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n    const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n    const hfBlock = this.hardforkBlock(hardfork);\n    if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber) {\n    // eslint-disable-next-line no-null/no-null\n    return this.hardforkIsActiveOnBlock(null, blockNumber);\n  }\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  _hardfork1, hardfork2) {\n    const hardfork1 = _hardfork1 !== null && _hardfork1 !== void 0 ? _hardfork1 : this._hardfork;\n    const hardforks = this.hardforks();\n    let posHf1 = -1;\n    let posHf2 = -1;\n    let index = 0;\n    for (const hf of hardforks) {\n      if (hf.name === hardfork1) posHf1 = index;\n      if (hf.name === hardfork2) posHf2 = index;\n      index += 1;\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1;\n  }\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork) {\n    // eslint-disable-next-line no-null/no-null\n    return this.hardforkGteHardfork(null, hardfork);\n  }\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  hardforkBlock(_hardfork) {\n    var _a;\n    const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n    const block = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.block;\n    // eslint-disable-next-line no-null/no-null\n    if (block === undefined || block === null) {\n      // eslint-disable-next-line no-null/no-null\n      return null;\n    }\n    return BigInt(block);\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  hardforkTimestamp(_hardfork) {\n    var _a;\n    const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n    const timestamp = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.timestamp;\n    // eslint-disable-next-line no-null/no-null\n    if (timestamp === undefined || timestamp === null) {\n      // eslint-disable-next-line no-null/no-null\n      return null;\n    }\n    return BigInt(timestamp);\n  }\n  /**\n   * Returns the hardfork change block for eip\n   * @param eip EIP number\n   * @returns Block number or null if unscheduled\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  eipBlock(eip) {\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const hf = hfChanges[1];\n      if ('eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        if (hf.eips.includes(eip)) {\n          return this.hardforkBlock(typeof hfChanges[0] === 'number' ? String(hfChanges[0]) : hfChanges[0]);\n        }\n      }\n    }\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  hardforkTTD(_hardfork) {\n    var _a;\n    const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n    const ttd = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.ttd;\n    // eslint-disable-next-line no-null/no-null\n    if (ttd === undefined || ttd === null) {\n      // eslint-disable-next-line no-null/no-null\n      return null;\n    }\n    return BigInt(ttd);\n  }\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isHardforkBlock(_blockNumber, _hardfork) {\n    const blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n    const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n    const block = this.hardforkBlock(hardfork);\n    return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false;\n  }\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block timestamp, number or null if not available\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  nextHardforkBlockOrTimestamp(_hardfork) {\n    var _a, _b;\n    const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n    const hfs = this.hardforks();\n    let hfIndex = hfs.findIndex(hf => hf.name === hardfork);\n    // If the current hardfork is merge, go one behind as merge hf is not part of these\n    // calcs even if the merge hf block is set\n    if (hardfork === Hardfork.Merge) {\n      hfIndex -= 1;\n    }\n    // Hardfork not found\n    if (hfIndex < 0) {\n      // eslint-disable-next-line no-null/no-null\n      return null;\n    }\n    let currHfTimeOrBlock = (_a = hfs[hfIndex].timestamp) !== null && _a !== void 0 ? _a : hfs[hfIndex].block;\n    currHfTimeOrBlock =\n    // eslint-disable-next-line no-null/no-null\n    currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined ? Number(currHfTimeOrBlock) :\n    // eslint-disable-next-line no-null/no-null\n    null;\n    const nextHf = hfs.slice(hfIndex + 1).find(hf => {\n      var _a;\n      let hfTimeOrBlock = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;\n      hfTimeOrBlock =\n      // eslint-disable-next-line no-null/no-null\n      hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) :\n      // eslint-disable-next-line no-null/no-null\n      null;\n      return hf.name !== Hardfork.Merge &&\n      // eslint-disable-next-line no-null/no-null\n      hfTimeOrBlock !== null && hfTimeOrBlock !== undefined && hfTimeOrBlock !== currHfTimeOrBlock;\n    });\n    // If no next hf found with valid block or timestamp return null\n    if (nextHf === undefined) {\n      // eslint-disable-next-line no-null/no-null\n      return null;\n    }\n    const nextHfBlock = (_b = nextHf.timestamp) !== null && _b !== void 0 ? _b : nextHf.block;\n    // eslint-disable-next-line no-null/no-null\n    if (nextHfBlock === null || nextHfBlock === undefined) {\n      // eslint-disable-next-line no-null/no-null\n      return null;\n    }\n    return BigInt(nextHfBlock);\n  }\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  nextHardforkBlock(_hardfork) {\n    const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n    let hfBlock = this.hardforkBlock(hardfork);\n    // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n    // to find the nextHardforkBlock\n    // eslint-disable-next-line no-null/no-null\n    if (hfBlock === null && hardfork === Hardfork.Merge) {\n      const hfs = this.hardforks();\n      // eslint-disable-next-line no-null/no-null\n      const mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n      if (mergeIndex < 0) {\n        throw Error(`Merge hardfork should have been found`);\n      }\n      hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name);\n    }\n    // eslint-disable-next-line no-null/no-null\n    if (hfBlock === null) {\n      // eslint-disable-next-line no-null/no-null\n      return null;\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    // eslint-disable-next-line no-null/no-null, @typescript-eslint/ban-types\n    const nextHfBlock = this.hardforks().reduce((acc, hf) => {\n      // We need to ignore the merge block in our next hardfork calc\n      const block = BigInt(\n      // eslint-disable-next-line no-null/no-null\n      hf.block === null || hf.ttd !== undefined && hf.ttd !== null ? 0 : hf.block);\n      // TypeScript can't seem to follow that the hfBlock is not null at this point\n      // eslint-disable-next-line no-null/no-null\n      return block > hfBlock && acc === null ? block : acc;\n      // eslint-disable-next-line no-null/no-null\n    }, null);\n    return nextHfBlock;\n  }\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isNextHardforkBlock(_blockNumber, _hardfork) {\n    const blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n    const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n    // eslint-disable-next-line deprecation/deprecation\n    const nextHardforkBlock = this.nextHardforkBlock(hardfork);\n    // eslint-disable-next-line no-null/no-null\n    return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber;\n  }\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @param genesisHash Genesis block hash of the chain\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork, genesisHash) {\n    let hfUint8Array = new Uint8Array();\n    let prevBlockOrTime = 0;\n    for (const hf of this.hardforks()) {\n      const {\n        block,\n        timestamp,\n        name\n      } = hf;\n      // Timestamp to be used for timestamp based hfs even if we may bundle\n      // block number with them retrospectively\n      let blockOrTime = timestamp !== null && timestamp !== void 0 ? timestamp : block;\n      // eslint-disable-next-line no-null/no-null\n      blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null;\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same blockOrTime HFs\n      // and on the merge since forkhash doesn't change on merge hf\n      if (typeof blockOrTime === 'number' && blockOrTime !== 0 && blockOrTime !== prevBlockOrTime && name !== Hardfork.Merge) {\n        const hfBlockUint8Array = hexToBytes(blockOrTime.toString(16).padStart(16, '0'));\n        hfUint8Array = uint8ArrayConcat(hfUint8Array, hfBlockUint8Array);\n        prevBlockOrTime = blockOrTime;\n      }\n      if (hf.name === hardfork) break;\n    }\n    const inputUint8Array = uint8ArrayConcat(genesisHash, hfUint8Array);\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    // eslint-disable-next-line no-bitwise\n    const forkhash = bytesToHex(intToUint8Array(crc32Uint8Array(inputUint8Array) >>> 0));\n    return forkhash;\n  }\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n   */\n  forkHash(_hardfork, genesisHash) {\n    const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n    const data = this._getHardfork(hardfork);\n    if (\n    // eslint-disable-next-line no-null/no-null\n    data === null ||\n    // eslint-disable-next-line no-null/no-null\n    (data === null || data === void 0 ? void 0 : data.block) === null && (data === null || data === void 0 ? void 0 : data.timestamp) === undefined && (data === null || data === void 0 ? void 0 : data.ttd) === undefined) {\n      const msg = 'No fork hash calculation possible for future hardfork';\n      throw new Error(msg);\n    }\n    // eslint-disable-next-line no-null/no-null\n    if ((data === null || data === void 0 ? void 0 : data.forkHash) !== null && (data === null || data === void 0 ? void 0 : data.forkHash) !== undefined) {\n      return data.forkHash;\n    }\n    if (!genesisHash) throw new Error('genesisHash required for forkHash calculation');\n    return this._calcForkHash(hardfork, genesisHash);\n  }\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  hardforkForForkHash(forkHash) {\n    const resArray = this.hardforks().filter(hf => hf.forkHash === forkHash);\n    // eslint-disable-next-line no-null/no-null\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n  }\n  /**\n   * Sets any missing forkHashes on the passed-in {@link Common} instance\n   * @param common The {@link Common} to set the forkHashes for\n   * @param genesisHash The genesis block hash\n   */\n  setForkHashes(genesisHash) {\n    var _a;\n    for (const hf of this.hardforks()) {\n      const blockOrTime = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;\n      if (\n      // eslint-disable-next-line no-null/no-null\n      (hf.forkHash === null || hf.forkHash === undefined) && (\n      // eslint-disable-next-line no-null/no-null\n      blockOrTime !== null && blockOrTime !== undefined || typeof hf.ttd !== 'undefined')) {\n        hf.forkHash = this.forkHash(hf.name, genesisHash);\n      }\n    }\n  }\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis() {\n    return this._chainParams.genesis;\n  }\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks() {\n    return this._chainParams.hardforks;\n  }\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes() {\n    return this._chainParams.bootstrapNodes;\n  }\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks() {\n    return this._chainParams.dnsNetworks;\n  }\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork() {\n    return this._hardfork;\n  }\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainId() {\n    return BigInt(this._chainParams.chainId);\n  }\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName() {\n    return this._chainParams.name;\n  }\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkId() {\n    return BigInt(this._chainParams.networkId);\n  }\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips() {\n    return this._eips;\n  }\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusType() {\n    const hardfork = this.hardfork();\n    let value;\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n        value = hfChanges[1].consensus.type;\n      }\n      if (hfChanges[0] === hardfork) break;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return value !== null && value !== void 0 ? value : this._chainParams.consensus.type;\n  }\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusAlgorithm() {\n    const hardfork = this.hardfork();\n    let value;\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n        value = hfChanges[1].consensus.algorithm;\n      }\n      if (hfChanges[0] === hardfork) break;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return value !== null && value !== void 0 ? value : this._chainParams.consensus.algorithm;\n  }\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: empty object\n   * clique: period, epoch\n   * casper: empty object\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusConfig() {\n    var _a;\n    const hardfork = this.hardfork();\n    let value;\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n        value = hfChanges[1].consensus[hfChanges[1].consensus.algorithm];\n      }\n      if (hfChanges[0] === hardfork) break;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return (_a = value !== null && value !== void 0 ? value : this._chainParams.consensus[this.consensusAlgorithm()]) !== null && _a !== void 0 ? _a : {};\n  }\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy() {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    copy.removeAllListeners();\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return copy;\n  }\n  static _getInitializedChains(customChains) {\n    const names = {};\n    for (const [name, id] of Object.entries(Chain)) {\n      names[id] = name.toLowerCase();\n    }\n    const chains = {\n      mainnet,\n      goerli,\n      sepolia\n    };\n    if (customChains) {\n      for (const chain of customChains) {\n        const {\n          name\n        } = chain;\n        names[chain.chainId.toString()] = name;\n        chains[name] = chain;\n      }\n    }\n    chains.names = names;\n    return chains;\n  }\n}","map":{"version":3,"names":["pkg","EventEmitter","bytesToHex","hexToBytes","uint8ArrayConcat","TypeOutput","intToUint8Array","toType","parseGethGenesis","goerli","mainnet","sepolia","EIPs","Chain","CustomChain","Hardfork","hardforks","HARDFORK_SPECS","buf","crc32Uint8Array","Common","constructor","opts","_eips","_customChains","_a","customChains","_chainParams","setChain","chain","DEFAULT_HARDFORK","_b","defaultHardfork","Merge","HARDFORK_CHANGES","map","hf","name","_hardfork","hardfork","undefined","setHardfork","eips","setEIPs","custom","chainParamsOrName","baseChain","standardChainParams","Object","assign","_getChainParams","PolygonMainnet","chainId","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","ArbitrumOne","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","fromGethGenesis","genesisJson","genesisHash","mergeForkIdPostMerge","genesisParams","common","setForkHashes","isSupportedChainId","initializedChains","_getInitializedChains","Boolean","names","toString","_chain","length","required","param","block","existing","hfChanges","emit","getHardforkByBlockNumber","_blockNumber","_td","_timestamp","blockNumber","BigInt","td","timestamp","Number","hfs","filter","ttd","mergeIndex","findIndex","doubleTTDHF","slice","hfIndex","stepBack","reverse","hfStartIndex","minTimeStamp","reduce","acc","Math","max","maxTimeStamp","min","setHardforkByBlockNumber","_getHardfork","eip","minHF","gteHardfork","minimumHardfork","requiredEIPs","elem","includes","isActivatedEIP","topic","value","paramByEIP","paramByHardfork","hfEIPs","valueEIP","v","eipParams","paramByBlock","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","_hardfork1","hardfork2","hardfork1","posHf1","posHf2","index","hardforkTimestamp","eipBlock","String","hardforkTTD","isHardforkBlock","nextHardforkBlockOrTimestamp","currHfTimeOrBlock","nextHf","find","hfTimeOrBlock","nextHfBlock","nextHardforkBlock","isNextHardforkBlock","_calcForkHash","hfUint8Array","Uint8Array","prevBlockOrTime","blockOrTime","hfBlockUint8Array","padStart","inputUint8Array","forkhash","forkHash","data","msg","hardforkForForkHash","resArray","genesis","bootstrapNodes","dnsNetworks","chainName","consensusType","consensus","type","consensusAlgorithm","algorithm","consensusConfig","copy","create","getPrototypeOf","removeAllListeners","id","entries","toLowerCase","chains"],"sources":["../../../src/common/common.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}