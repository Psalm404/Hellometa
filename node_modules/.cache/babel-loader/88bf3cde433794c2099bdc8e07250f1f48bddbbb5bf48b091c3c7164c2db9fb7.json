{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'HellometaComponent',\n  data() {\n    return {\n      username: '',\n      password: '',\n      error: '',\n      show: true,\n      showLogin: false,\n      guideText: '',\n      textColor: 'transparent',\n      activeButton: '',\n      isGuest: false // 游客模式标志\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.isLoggedIn;\n    }\n  },\n  watch: {\n    isLoggedIn(newStatus) {\n      if (newStatus) {\n        this.showLogin = false;\n        this.$router.push('/home');\n      } else {\n        this.showLogin = true;\n      }\n    }\n  },\n  mounted() {\n    // 每次加载组件时检查登录状态\n    this.$store.dispatch('checkLoginStatus');\n    console.log(this.isLoggedIn);\n    if (!this.isLoggedIn) {\n      if (this.$route.path !== '/intro') {\n        this.$router.push('/intro');\n      }\n      setTimeout(() => {\n        this.showLogin = true;\n      }, 500);\n    } else {\n      if (this.$route.path !== '/u_intro') {\n        this.$router.push('/u_intro');\n      }\n    }\n  },\n  methods: {\n    login() {\n      console.log('正在执行登录事件');\n      const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n      console.log('apiBaseUrl::' + apiBaseUrl);\n      axios.post(`${apiBaseUrl}/login`, {\n        account: this.username,\n        password: this.password\n      }).then(response => {\n        if (response.data.code === 200) {\n          // 将返回的 balance 转换为 ETH\n          const balanceInETH = response.data.user.balance / 1e18;\n\n          // 更新 user 对象中的 balance\n          const userWithETH = {\n            ...response.data.user,\n            balance: balanceInETH // 修改 balance 为以太币单位\n          };\n          this.$store.dispatch('login', {\n            token: response.data.token,\n            user: userWithETH\n          });\n          this.error = ''; // 清除错误信息\n        } else {\n          this.error = response.data.status || '登录失败，请检查您的账号和密码';\n        }\n      }).catch(error => {\n        console.error('Login error:', error);\n        this.error = '登录失败，请稍后再试';\n      });\n    },\n    register() {\n      this.showLogin = false;\n      if (this.$route.path !== '/register') {\n        this.$router.push('/register');\n      }\n    },\n    closeLogin() {\n      this.showLogin = false;\n      this.isGuest = true;\n      this.username = '';\n      this.password = '';\n      this.error = '';\n    },\n    showLoginModal() {\n      this.showLogin = true; // 显示登录框\n      console.log(this.showLogin);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","username","password","error","show","showLogin","guideText","textColor","activeButton","isGuest","computed","isLoggedIn","$store","state","watch","newStatus","$router","push","mounted","dispatch","console","log","$route","path","setTimeout","methods","login","apiBaseUrl","process","env","VUE_APP_BACKEND_BASE_URL","post","account","then","response","code","balanceInETH","user","balance","userWithETH","token","status","catch","register","closeLogin","showLoginModal"],"sources":["src/helloMeta.vue"],"sourcesContent":["<template>\n<div id=\"app\">\n    <div :class=\"{ 'guide-text-hidden':show  }\" class=\"guide-text\" :style=\"{ color: textColor }\">{{ guideText }}</div>\n    <transition name=\"el-fade-in-linear\">\n        <div v-show=\"show\" class=\"main-page\">\n            <div>\n                <router-view @trigger-login=\"showLoginModal\"></router-view>\n            </div>\n            <!-- login -->\n            <transition name=\"el-fade-in-linear\">\n                <div v-if=\"!isLoggedIn || activeButton === 'login'\" class=\"login-modal\" v-show=\"showLogin\">\n                    <div class=\"login-box\">\n                        <!-- 关闭按钮 -->\n                        <button class=\"close-button\" @click=\"closeLogin\" style=\"font-size: medium\">关闭</button>\n                        <form @submit.prevent=\"login\">\n                            <h2>欢迎！👋</h2>\n                            <h3>请先登录您的账号</h3>\n                            <div class=\"login-input\">\n                                <span class=\"login-icon\"></span>\n                                <input class=\"login-username\" v-model=\"username\" required placeholder=\" \" @invalid=\"this.setCustomValidity('请填写您的账号id')\" @input=\"this.setCustomValidity('')\">\n                                <label> <strong>用户名:</strong></label>\n                            </div>\n                            <div class=\"login-input\">\n                                <span class=\"login-icon\"></span>\n                                <input class=\"login-password\" type=\"password\" v-model=\"password\" required placeholder=\" \" @invalid=\"this.setCustomValidity('请输入您的密码')\" @input=\"this.setCustomValidity('')\">\n                                <label><strong>密码:</strong></label>\n                            </div>\n                            <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\n                            <button class=\"login-submit\" type=\"submit\">登录</button>\n                        </form>\n                        <a class=\"registerBT\" @click=\"register\">没有账号?注册一个👇</a>\n                    </div>\n                </div>\n            </transition>\n            <!-- login -->\n        </div>\n    </transition>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: 'HellometaComponent',\n    data() {\n        return {\n            username: '',\n            password: '',\n            error: '',\n            show: true,\n            showLogin: false,\n            guideText: '',\n            textColor: 'transparent',\n            activeButton: '',\n            isGuest: false, // 游客模式标志\n        };\n    },\n    computed: {\n        isLoggedIn() {\n            return this.$store.state.isLoggedIn;\n        }\n    },\n    watch: {\n        isLoggedIn(newStatus) {\n            if (newStatus) {\n                this.showLogin = false;\n                this.$router.push('/home');\n            } else {\n                this.showLogin = true;\n            }\n        }\n    },\n    mounted() {\n        // 每次加载组件时检查登录状态\n        this.$store.dispatch('checkLoginStatus');\n        console.log(this.isLoggedIn)\n        if (!this.isLoggedIn) {\n            if (this.$route.path !== '/intro') {\n                this.$router.push('/intro');\n            }\n            setTimeout(() => {\n                this.showLogin = true;\n            }, 500);\n        } else {\n            if (this.$route.path !== '/u_intro') {\n                this.$router.push('/u_intro');\n            }\n        }\n    },\n    methods: {\n        login() {\n            console.log('正在执行登录事件');\n            const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n            console.log('apiBaseUrl::' + apiBaseUrl);\n            axios.post(`${apiBaseUrl}/login`, {\n                    account: this.username,\n                    password: this.password\n                })\n                .then(response => {\n                    if (response.data.code === 200) {\n                        // 将返回的 balance 转换为 ETH\n                        const balanceInETH = response.data.user.balance / 1e18;\n\n                        // 更新 user 对象中的 balance\n                        const userWithETH = {\n                            ...response.data.user,\n                            balance: balanceInETH // 修改 balance 为以太币单位\n                        };\n                        this.$store.dispatch('login', {\n                            token: response.data.token,\n                            user: userWithETH\n                        });\n                        this.error = ''; // 清除错误信息\n                    } else {\n                        this.error = response.data.status || '登录失败，请检查您的账号和密码';\n                    }\n                })\n                .catch(error => {\n                    console.error('Login error:', error);\n                    this.error = '登录失败，请稍后再试';\n                });\n        },\n        register() {\n            this.showLogin = false;\n            if (this.$route.path !== '/register') {\n                this.$router.push('/register');\n            }\n        },\n        closeLogin() {\n            this.showLogin = false;\n            this.isGuest = true;\n            this.username = '';\n            this.password = '';\n            this.error = '';\n        },\n        showLoginModal() {\n            this.showLogin = true; // 显示登录框\n            console.log(this.showLogin)\n        }\n    }\n};\n</script>\n\n<style scoped>\n#app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    height: 100vh;\n    /* max-height: 100%; */\n    text-align: center;\n    background-color: #292929;\n}\n\n.main-page {\n    min-height: 100vh;\n    /* 确保主页面至少占满整个视口高度 */\n    max-width: 100vw;\n    /* 使主页面宽度占满整个视口宽度 */\n    display: flex;\n    flex-direction: column;\n    /* 将内容垂直排列 */\n    margin: 0;\n    /* 移除任何默认外边距 */\n    padding: 0;\n    /* 移除任何默认内边距 */\n    box-sizing: border-box;\n    /* 确保内边距和边框不会影响元素的总宽度 */\n    background-color: #292929;\n}\n\n.login-modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 10000;\n    transition: background-color 0.5s ease;\n    /* 添加渐变效果 */\n}\n\n.login-box {\n    position: relative;\n    width: 400px;\n    height: 450px;\n    background-color: transparent;\n    border: 2px solid rgba(255, 255, 255, 0.5);\n    border-radius: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    backdrop-filter: blur(15px);\n}\n\n/* 关闭按钮 */\n.close-button {\n    position: flex;\n    margin-top: 12px;\n    margin-right: 12px;\n    background: none;\n    border: none;\n    font-size: 2em;\n    color: white;\n    cursor: pointer;\n}\n\n.close-button:hover {\n    color: #c64500;\n}\n\nh2 {\n    font-size: 2em;\n    color: white;\n    text-align: center;\n    margin-top: 50px;\n}\n\nh3 {\n    font-size: 1.3em;\n    color: #c64500;\n    text-align: center;\n}\n\n.login-input {\n    position: relative;\n    width: 310px;\n    margin: 30px 0;\n    border-bottom: 2px solid white;\n}\n\n.login-input label {\n    position: absolute;\n    top: 50%;\n    left: 0px;\n    transform: translateY(-50%);\n    font-size: 15px;\n    color: white;\n    pointer-events: none;\n    transition: .5s;\n}\n\n.login-input input {\n    -webkit-text-fill-color: white;\n    width: 100%;\n    margin-top: 15px;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    font-size: 1em;\n    color: white;\n}\n\ninput:-webkit-autofill {\n    transition: background-color 5000s ease-in-out 0s;\n}\n\n.login-input input:focus~label,\n.login-input input:valid~label,\n.login-input input:not(:placeholder-shown)~label {\n    top: -3px;\n}\n\n.login-submit {\n    width: 100%;\n    height: 40px;\n    background: #fff;\n    border: none;\n    outline: none;\n    border-radius: 40px;\n    cursor: pointer;\n    font-size: 1em;\n    color: black;\n    font-weight: 500;\n}\n\n.error-message {\n    color: red;\n    margin-bottom: 10px;\n}\n\n.registerBT {\n    text-decoration: underline;\n    margin-left: 20px;\n    margin-bottom: 20px;\n    color: white;\n}\n\n.guide-text {\n    padding-top: 40vh;\n    font-size: 3em;\n    transition: color 0.5s ease;\n    text-align: center;\n}\n\n.guide-text-hidden {\n    display: none;\n}\n\n.main-page {\n    min-height: 100vh;\n    display: flex;\n}\n\n.side-navigator {\n    background-color: #202020;\n    width: 10%;\n    height: 100vh;\n    position: absolute;\n    z-index: 100;\n    top: 0;\n    left: 0;\n}\n\n.index-list {\n    margin-top: 150px;\n    height: 300px;\n    display: flex;\n    flex-direction: column;\n    gap: 35px;\n}\n\n.index-list button {\n    background-color: transparent;\n    border: 1px solid rgba(170, 170, 170, 1);\n    height: 35px;\n    line-height: 13px;\n    padding: 10px 20px;\n    text-align: center;\n    color: rgba(170, 170, 170, 1);\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.index-list button:disabled {\n    color: rgba(170, 170, 170, 0.5);\n    border-color: rgba(170, 170, 170, 0.5);\n    cursor: not-allowed;\n}\n\n.index-list button:hover {\n    color: #ff5733;\n    border-color: #ff5733;\n}\n\n.active button {\n    color: #ff5733;\n    border-color: #ff5733;\n}\n</style>\n"],"mappings":";AAyCA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,KAAA;MACAC,IAAA;MACAC,SAAA;MACAC,SAAA;MACAC,SAAA;MACAC,YAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,WAAA;MACA,YAAAC,MAAA,CAAAC,KAAA,CAAAF,UAAA;IACA;EACA;EACAG,KAAA;IACAH,WAAAI,SAAA;MACA,IAAAA,SAAA;QACA,KAAAV,SAAA;QACA,KAAAW,OAAA,CAAAC,IAAA;MACA;QACA,KAAAZ,SAAA;MACA;IACA;EACA;EACAa,QAAA;IACA;IACA,KAAAN,MAAA,CAAAO,QAAA;IACAC,OAAA,CAAAC,GAAA,MAAAV,UAAA;IACA,UAAAA,UAAA;MACA,SAAAW,MAAA,CAAAC,IAAA;QACA,KAAAP,OAAA,CAAAC,IAAA;MACA;MACAO,UAAA;QACA,KAAAnB,SAAA;MACA;IACA;MACA,SAAAiB,MAAA,CAAAC,IAAA;QACA,KAAAP,OAAA,CAAAC,IAAA;MACA;IACA;EACA;EACAQ,OAAA;IACAC,MAAA;MACAN,OAAA,CAAAC,GAAA;MACA,MAAAM,UAAA,GAAAC,OAAA,CAAAC,GAAA,CAAAC,wBAAA;MACAV,OAAA,CAAAC,GAAA,kBAAAM,UAAA;MACA7B,KAAA,CAAAiC,IAAA,IAAAJ,UAAA;QACAK,OAAA,OAAA/B,QAAA;QACAC,QAAA,OAAAA;MACA,GACA+B,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAlC,IAAA,CAAAmC,IAAA;UACA;UACA,MAAAC,YAAA,GAAAF,QAAA,CAAAlC,IAAA,CAAAqC,IAAA,CAAAC,OAAA;;UAEA;UACA,MAAAC,WAAA;YACA,GAAAL,QAAA,CAAAlC,IAAA,CAAAqC,IAAA;YACAC,OAAA,EAAAF,YAAA;UACA;UACA,KAAAxB,MAAA,CAAAO,QAAA;YACAqB,KAAA,EAAAN,QAAA,CAAAlC,IAAA,CAAAwC,KAAA;YACAH,IAAA,EAAAE;UACA;UACA,KAAApC,KAAA;QACA;UACA,KAAAA,KAAA,GAAA+B,QAAA,CAAAlC,IAAA,CAAAyC,MAAA;QACA;MACA,GACAC,KAAA,CAAAvC,KAAA;QACAiB,OAAA,CAAAjB,KAAA,iBAAAA,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IACAwC,SAAA;MACA,KAAAtC,SAAA;MACA,SAAAiB,MAAA,CAAAC,IAAA;QACA,KAAAP,OAAA,CAAAC,IAAA;MACA;IACA;IACA2B,WAAA;MACA,KAAAvC,SAAA;MACA,KAAAI,OAAA;MACA,KAAAR,QAAA;MACA,KAAAC,QAAA;MACA,KAAAC,KAAA;IACA;IACA0C,eAAA;MACA,KAAAxC,SAAA;MACAe,OAAA,CAAAC,GAAA,MAAAhB,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}