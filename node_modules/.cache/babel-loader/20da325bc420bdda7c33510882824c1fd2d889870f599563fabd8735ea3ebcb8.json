{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ETH_DATA_FORMAT } from 'web3-types';\nimport { isAddress, isHexStrict, isHexString32Bytes, isNullish, isUInt } from 'web3-validator';\nimport { ChainMismatchError, HardforkMismatchError, ChainIdMismatchError, CommonOrChainAndHardforkError, Eip1559GasPriceError, InvalidGasOrGasPrice, InvalidMaxPriorityFeePerGasOrMaxFeePerGas, InvalidNonceOrChainIdError, InvalidTransactionCall, InvalidTransactionObjectError, InvalidTransactionWithSender, MissingChainOrHardforkError, MissingCustomChainError, MissingCustomChainIdError, MissingGasError, TransactionGasMismatchError, UnsupportedFeeMarketError } from 'web3-errors';\nimport { formatTransaction } from './utils/format_transaction.js';\nexport function isBaseTransaction(value) {\n  if (!isNullish(value.to) && !isAddress(value.to)) return false;\n  if (!isHexStrict(value.type) && !isNullish(value.type) && value.type.length !== 2) return false;\n  if (!isHexStrict(value.nonce)) return false;\n  if (!isHexStrict(value.gas)) return false;\n  if (!isHexStrict(value.value)) return false;\n  if (!isHexStrict(value.input)) return false;\n  if (value.chainId && !isHexStrict(value.chainId)) return false;\n  return true;\n}\nexport function isAccessListEntry(value) {\n  if (!isNullish(value.address) && !isAddress(value.address)) return false;\n  if (!isNullish(value.storageKeys) && !value.storageKeys.every(storageKey => isHexString32Bytes(storageKey))) return false;\n  return true;\n}\nexport function isAccessList(value) {\n  if (!Array.isArray(value) || !value.every(accessListEntry => isAccessListEntry(accessListEntry))) return false;\n  return true;\n}\nexport function isTransaction1559Unsigned(value) {\n  if (!isBaseTransaction(value)) return false;\n  if (!isHexStrict(value.maxFeePerGas)) return false;\n  if (!isHexStrict(value.maxPriorityFeePerGas)) return false;\n  if (!isAccessList(value.accessList)) return false;\n  return true;\n}\nexport function isTransaction2930Unsigned(value) {\n  if (!isBaseTransaction(value)) return false;\n  if (!isHexStrict(value.gasPrice)) return false;\n  if (!isAccessList(value.accessList)) return false;\n  return true;\n}\nexport function isTransactionLegacyUnsigned(value) {\n  if (!isBaseTransaction(value)) return false;\n  if (!isHexStrict(value.gasPrice)) return false;\n  return true;\n}\nexport function isTransactionWithSender(value) {\n  if (!isAddress(value.from)) return false;\n  if (!isBaseTransaction(value)) return false;\n  if (!isTransaction1559Unsigned(value) && !isTransaction2930Unsigned(value) && !isTransactionLegacyUnsigned(value)) return false;\n  return true;\n}\nexport function validateTransactionWithSender(value) {\n  if (!isTransactionWithSender(value)) throw new InvalidTransactionWithSender(value);\n}\nexport function isTransactionCall(value) {\n  if (!isNullish(value.from) && !isAddress(value.from)) return false;\n  if (!isAddress(value.to)) return false;\n  if (!isNullish(value.gas) && !isHexStrict(value.gas)) return false;\n  if (!isNullish(value.gasPrice) && !isHexStrict(value.gasPrice)) return false;\n  if (!isNullish(value.value) && !isHexStrict(value.value)) return false;\n  if (!isNullish(value.data) && !isHexStrict(value.data)) return false;\n  if (!isNullish(value.input) && !isHexStrict(value.input)) return false;\n  if (!isNullish(value.type)) return false;\n  if (isTransaction1559Unsigned(value)) return false;\n  if (isTransaction2930Unsigned(value)) return false;\n  return true;\n}\nexport function validateTransactionCall(value) {\n  if (!isTransactionCall(value)) throw new InvalidTransactionCall(value);\n}\nexport const validateCustomChainInfo = transaction => {\n  if (!isNullish(transaction.common)) {\n    if (isNullish(transaction.common.customChain)) throw new MissingCustomChainError();\n    if (isNullish(transaction.common.customChain.chainId)) throw new MissingCustomChainIdError();\n    if (!isNullish(transaction.chainId) && transaction.chainId !== transaction.common.customChain.chainId) throw new ChainIdMismatchError({\n      txChainId: transaction.chainId,\n      customChainId: transaction.common.customChain.chainId\n    });\n  }\n};\nexport const validateChainInfo = transaction => {\n  if (!isNullish(transaction.common) && !isNullish(transaction.chain) && !isNullish(transaction.hardfork)) {\n    throw new CommonOrChainAndHardforkError();\n  }\n  if (!isNullish(transaction.chain) && isNullish(transaction.hardfork) || !isNullish(transaction.hardfork) && isNullish(transaction.chain)) throw new MissingChainOrHardforkError({\n    chain: transaction.chain,\n    hardfork: transaction.hardfork\n  });\n};\nexport const validateBaseChain = transaction => {\n  if (!isNullish(transaction.common)) if (!isNullish(transaction.common.baseChain)) if (!isNullish(transaction.chain) && transaction.chain !== transaction.common.baseChain) {\n    throw new ChainMismatchError({\n      txChain: transaction.chain,\n      baseChain: transaction.common.baseChain\n    });\n  }\n};\nexport const validateHardfork = transaction => {\n  if (!isNullish(transaction.common)) if (!isNullish(transaction.common.hardfork)) if (!isNullish(transaction.hardfork) && transaction.hardfork !== transaction.common.hardfork) {\n    throw new HardforkMismatchError({\n      txHardfork: transaction.hardfork,\n      commonHardfork: transaction.common.hardfork\n    });\n  }\n};\nexport const validateLegacyGas = transaction => {\n  if (\n  // This check is verifying gas and gasPrice aren't less than 0.\n  isNullish(transaction.gas) || !isUInt(transaction.gas) || isNullish(transaction.gasPrice) || !isUInt(transaction.gasPrice)) throw new InvalidGasOrGasPrice({\n    gas: transaction.gas,\n    gasPrice: transaction.gasPrice\n  });\n  if (!isNullish(transaction.maxFeePerGas) || !isNullish(transaction.maxPriorityFeePerGas)) throw new UnsupportedFeeMarketError({\n    maxFeePerGas: transaction.maxFeePerGas,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n  });\n};\nexport const validateFeeMarketGas = transaction => {\n  // These errors come from 1.x, so they must be checked before\n  // InvalidMaxPriorityFeePerGasOrMaxFeePerGas to throw the same error\n  // for the same code executing in 1.x\n  if (!isNullish(transaction.gasPrice) && transaction.type === '0x2') throw new Eip1559GasPriceError(transaction.gasPrice);\n  if (transaction.type === '0x0' || transaction.type === '0x1') throw new UnsupportedFeeMarketError({\n    maxFeePerGas: transaction.maxFeePerGas,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n  });\n  if (isNullish(transaction.maxFeePerGas) || !isUInt(transaction.maxFeePerGas) || isNullish(transaction.maxPriorityFeePerGas) || !isUInt(transaction.maxPriorityFeePerGas)) throw new InvalidMaxPriorityFeePerGasOrMaxFeePerGas({\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n    maxFeePerGas: transaction.maxFeePerGas\n  });\n};\n/**\n * This method checks if all required gas properties are present for either\n * legacy gas (type 0x0 and 0x1) OR fee market transactions (0x2)\n */\nexport const validateGas = transaction => {\n  const gasPresent = !isNullish(transaction.gas) || !isNullish(transaction.gasLimit);\n  const legacyGasPresent = gasPresent && !isNullish(transaction.gasPrice);\n  const feeMarketGasPresent = gasPresent && !isNullish(transaction.maxPriorityFeePerGas) && !isNullish(transaction.maxFeePerGas);\n  if (!legacyGasPresent && !feeMarketGasPresent) throw new MissingGasError({\n    gas: transaction.gas,\n    gasPrice: transaction.gasPrice,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n    maxFeePerGas: transaction.maxFeePerGas\n  });\n  if (legacyGasPresent && feeMarketGasPresent) throw new TransactionGasMismatchError({\n    gas: transaction.gas,\n    gasPrice: transaction.gasPrice,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n    maxFeePerGas: transaction.maxFeePerGas\n  });\n  (legacyGasPresent ? validateLegacyGas : validateFeeMarketGas)(transaction);\n  (!isNullish(transaction.type) && transaction.type > '0x1' ? validateFeeMarketGas : validateLegacyGas)(transaction);\n};\nexport const validateTransactionForSigning = (transaction, overrideMethod) => {\n  if (!isNullish(overrideMethod)) {\n    overrideMethod(transaction);\n    return;\n  }\n  if (typeof transaction !== 'object' || isNullish(transaction)) throw new InvalidTransactionObjectError(transaction);\n  validateCustomChainInfo(transaction);\n  validateChainInfo(transaction);\n  validateBaseChain(transaction);\n  validateHardfork(transaction);\n  const formattedTransaction = formatTransaction(transaction, ETH_DATA_FORMAT);\n  validateGas(formattedTransaction);\n  if (isNullish(formattedTransaction.nonce) || isNullish(formattedTransaction.chainId) || formattedTransaction.nonce.startsWith('-') || formattedTransaction.chainId.startsWith('-')) throw new InvalidNonceOrChainIdError({\n    nonce: transaction.nonce,\n    chainId: transaction.chainId\n  });\n};","map":{"version":3,"names":["ETH_DATA_FORMAT","isAddress","isHexStrict","isHexString32Bytes","isNullish","isUInt","ChainMismatchError","HardforkMismatchError","ChainIdMismatchError","CommonOrChainAndHardforkError","Eip1559GasPriceError","InvalidGasOrGasPrice","InvalidMaxPriorityFeePerGasOrMaxFeePerGas","InvalidNonceOrChainIdError","InvalidTransactionCall","InvalidTransactionObjectError","InvalidTransactionWithSender","MissingChainOrHardforkError","MissingCustomChainError","MissingCustomChainIdError","MissingGasError","TransactionGasMismatchError","UnsupportedFeeMarketError","formatTransaction","isBaseTransaction","value","to","type","length","nonce","gas","input","chainId","isAccessListEntry","address","storageKeys","every","storageKey","isAccessList","Array","isArray","accessListEntry","isTransaction1559Unsigned","maxFeePerGas","maxPriorityFeePerGas","accessList","isTransaction2930Unsigned","gasPrice","isTransactionLegacyUnsigned","isTransactionWithSender","from","validateTransactionWithSender","isTransactionCall","data","validateTransactionCall","validateCustomChainInfo","transaction","common","customChain","txChainId","customChainId","validateChainInfo","chain","hardfork","validateBaseChain","baseChain","txChain","validateHardfork","txHardfork","commonHardfork","validateLegacyGas","validateFeeMarketGas","validateGas","gasPresent","gasLimit","legacyGasPresent","feeMarketGasPresent","validateTransactionForSigning","overrideMethod","formattedTransaction","startsWith"],"sources":["../../src/validation.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAUCA,eAAe,QACT,YAAY;AACnB,SAASC,SAAS,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,SAAS,EAAEC,MAAM,QAAQ,gBAAgB;AAC9F,SACCC,kBAAkB,EAClBC,qBAAqB,EACrBC,oBAAoB,EACpBC,6BAA6B,EAC7BC,oBAAoB,EACpBC,oBAAoB,EACpBC,yCAAyC,EACzCC,0BAA0B,EAC1BC,sBAAsB,EACtBC,6BAA6B,EAC7BC,4BAA4B,EAC5BC,2BAA2B,EAC3BC,uBAAuB,EACvBC,yBAAyB,EACzBC,eAAe,EACfC,2BAA2B,EAC3BC,yBAAyB,QACnB,aAAa;AACpB,SAASC,iBAAiB,QAAQ,+BAA+B;AAGjE,OAAM,SAAUC,iBAAiBA,CAACC,KAAyB;EAC1D,IAAI,CAACrB,SAAS,CAACqB,KAAK,CAACC,EAAE,CAAC,IAAI,CAACzB,SAAS,CAACwB,KAAK,CAACC,EAAE,CAAC,EAAE,OAAO,KAAK;EAC9D,IAAI,CAACxB,WAAW,CAACuB,KAAK,CAACE,IAAI,CAAC,IAAI,CAACvB,SAAS,CAACqB,KAAK,CAACE,IAAI,CAAC,IAAIF,KAAK,CAACE,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;EAC/F,IAAI,CAAC1B,WAAW,CAACuB,KAAK,CAACI,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAAC3B,WAAW,CAACuB,KAAK,CAACK,GAAG,CAAC,EAAE,OAAO,KAAK;EACzC,IAAI,CAAC5B,WAAW,CAACuB,KAAK,CAACA,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAACvB,WAAW,CAACuB,KAAK,CAACM,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAIN,KAAK,CAACO,OAAO,IAAI,CAAC9B,WAAW,CAACuB,KAAK,CAACO,OAAO,CAAC,EAAE,OAAO,KAAK;EAE9D,OAAO,IAAI;AACZ;AAEA,OAAM,SAAUC,iBAAiBA,CAACR,KAAsB;EACvD,IAAI,CAACrB,SAAS,CAACqB,KAAK,CAACS,OAAO,CAAC,IAAI,CAACjC,SAAS,CAACwB,KAAK,CAACS,OAAO,CAAC,EAAE,OAAO,KAAK;EACxE,IACC,CAAC9B,SAAS,CAACqB,KAAK,CAACU,WAAW,CAAC,IAC7B,CAACV,KAAK,CAACU,WAAW,CAACC,KAAK,CAACC,UAAU,IAAIlC,kBAAkB,CAACkC,UAAU,CAAC,CAAC,EAEtE,OAAO,KAAK;EAEb,OAAO,IAAI;AACZ;AAEA,OAAM,SAAUC,YAAYA,CAACb,KAAiB;EAC7C,IACC,CAACc,KAAK,CAACC,OAAO,CAACf,KAAK,CAAC,IACrB,CAACA,KAAK,CAACW,KAAK,CAACK,eAAe,IAAIR,iBAAiB,CAACQ,eAAe,CAAC,CAAC,EAEnE,OAAO,KAAK;EAEb,OAAO,IAAI;AACZ;AAEA,OAAM,SAAUC,yBAAyBA,CAACjB,KAAiC;EAC1E,IAAI,CAACD,iBAAiB,CAACC,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAACvB,WAAW,CAACuB,KAAK,CAACkB,YAAY,CAAC,EAAE,OAAO,KAAK;EAClD,IAAI,CAACzC,WAAW,CAACuB,KAAK,CAACmB,oBAAoB,CAAC,EAAE,OAAO,KAAK;EAC1D,IAAI,CAACN,YAAY,CAACb,KAAK,CAACoB,UAAU,CAAC,EAAE,OAAO,KAAK;EAEjD,OAAO,IAAI;AACZ;AAEA,OAAM,SAAUC,yBAAyBA,CAACrB,KAAiC;EAC1E,IAAI,CAACD,iBAAiB,CAACC,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAACvB,WAAW,CAACuB,KAAK,CAACsB,QAAQ,CAAC,EAAE,OAAO,KAAK;EAC9C,IAAI,CAACT,YAAY,CAACb,KAAK,CAACoB,UAAU,CAAC,EAAE,OAAO,KAAK;EAEjD,OAAO,IAAI;AACZ;AAEA,OAAM,SAAUG,2BAA2BA,CAACvB,KAAmC;EAC9E,IAAI,CAACD,iBAAiB,CAACC,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAACvB,WAAW,CAACuB,KAAK,CAACsB,QAAQ,CAAC,EAAE,OAAO,KAAK;EAE9C,OAAO,IAAI;AACZ;AAEA,OAAM,SAAUE,uBAAuBA,CAACxB,KAA+B;EACtE,IAAI,CAACxB,SAAS,CAACwB,KAAK,CAACyB,IAAI,CAAC,EAAE,OAAO,KAAK;EACxC,IAAI,CAAC1B,iBAAiB,CAACC,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IACC,CAACiB,yBAAyB,CAACjB,KAAmC,CAAC,IAC/D,CAACqB,yBAAyB,CAACrB,KAAmC,CAAC,IAC/D,CAACuB,2BAA2B,CAACvB,KAAqC,CAAC,EAEnE,OAAO,KAAK;EAEb,OAAO,IAAI;AACZ;AAEA,OAAM,SAAU0B,6BAA6BA,CAAC1B,KAA+B;EAC5E,IAAI,CAACwB,uBAAuB,CAACxB,KAAK,CAAC,EAAE,MAAM,IAAIT,4BAA4B,CAACS,KAAK,CAAC;AACnF;AAEA,OAAM,SAAU2B,iBAAiBA,CAAC3B,KAAsB;EACvD,IAAI,CAACrB,SAAS,CAACqB,KAAK,CAACyB,IAAI,CAAC,IAAI,CAACjD,SAAS,CAACwB,KAAK,CAACyB,IAAI,CAAC,EAAE,OAAO,KAAK;EAClE,IAAI,CAACjD,SAAS,CAACwB,KAAK,CAACC,EAAE,CAAC,EAAE,OAAO,KAAK;EACtC,IAAI,CAACtB,SAAS,CAACqB,KAAK,CAACK,GAAG,CAAC,IAAI,CAAC5B,WAAW,CAACuB,KAAK,CAACK,GAAG,CAAC,EAAE,OAAO,KAAK;EAClE,IAAI,CAAC1B,SAAS,CAACqB,KAAK,CAACsB,QAAQ,CAAC,IAAI,CAAC7C,WAAW,CAACuB,KAAK,CAACsB,QAAQ,CAAC,EAAE,OAAO,KAAK;EAC5E,IAAI,CAAC3C,SAAS,CAACqB,KAAK,CAACA,KAAK,CAAC,IAAI,CAACvB,WAAW,CAACuB,KAAK,CAACA,KAAK,CAAC,EAAE,OAAO,KAAK;EACtE,IAAI,CAACrB,SAAS,CAACqB,KAAK,CAAC4B,IAAI,CAAC,IAAI,CAACnD,WAAW,CAACuB,KAAK,CAAC4B,IAAI,CAAC,EAAE,OAAO,KAAK;EACpE,IAAI,CAACjD,SAAS,CAACqB,KAAK,CAACM,KAAK,CAAC,IAAI,CAAC7B,WAAW,CAACuB,KAAK,CAACM,KAAK,CAAC,EAAE,OAAO,KAAK;EACtE,IAAI,CAAC3B,SAAS,CAACqB,KAAK,CAACE,IAAI,CAAC,EAAE,OAAO,KAAK;EACxC,IAAIe,yBAAyB,CAACjB,KAAmC,CAAC,EAAE,OAAO,KAAK;EAChF,IAAIqB,yBAAyB,CAACrB,KAAmC,CAAC,EAAE,OAAO,KAAK;EAEhF,OAAO,IAAI;AACZ;AAEA,OAAM,SAAU6B,uBAAuBA,CAAC7B,KAAsB;EAC7D,IAAI,CAAC2B,iBAAiB,CAAC3B,KAAK,CAAC,EAAE,MAAM,IAAIX,sBAAsB,CAACW,KAAK,CAAC;AACvE;AAEA,OAAO,MAAM8B,uBAAuB,GAAIC,WAAgC,IAAI;EAC3E,IAAI,CAACpD,SAAS,CAACoD,WAAW,CAACC,MAAM,CAAC,EAAE;IACnC,IAAIrD,SAAS,CAACoD,WAAW,CAACC,MAAM,CAACC,WAAW,CAAC,EAAE,MAAM,IAAIxC,uBAAuB,EAAE;IAClF,IAAId,SAAS,CAACoD,WAAW,CAACC,MAAM,CAACC,WAAW,CAAC1B,OAAO,CAAC,EACpD,MAAM,IAAIb,yBAAyB,EAAE;IACtC,IACC,CAACf,SAAS,CAACoD,WAAW,CAACxB,OAAO,CAAC,IAC/BwB,WAAW,CAACxB,OAAO,KAAKwB,WAAW,CAACC,MAAM,CAACC,WAAW,CAAC1B,OAAO,EAE9D,MAAM,IAAIxB,oBAAoB,CAAC;MAC9BmD,SAAS,EAAEH,WAAW,CAACxB,OAAO;MAC9B4B,aAAa,EAAEJ,WAAW,CAACC,MAAM,CAACC,WAAW,CAAC1B;KAC9C,CAAC;;AAEL,CAAC;AACD,OAAO,MAAM6B,iBAAiB,GAAIL,WAAgC,IAAI;EACrE,IACC,CAACpD,SAAS,CAACoD,WAAW,CAACC,MAAM,CAAC,IAC9B,CAACrD,SAAS,CAACoD,WAAW,CAACM,KAAK,CAAC,IAC7B,CAAC1D,SAAS,CAACoD,WAAW,CAACO,QAAQ,CAAC,EAC/B;IACD,MAAM,IAAItD,6BAA6B,EAAE;;EAE1C,IACE,CAACL,SAAS,CAACoD,WAAW,CAACM,KAAK,CAAC,IAAI1D,SAAS,CAACoD,WAAW,CAACO,QAAQ,CAAC,IAChE,CAAC3D,SAAS,CAACoD,WAAW,CAACO,QAAQ,CAAC,IAAI3D,SAAS,CAACoD,WAAW,CAACM,KAAK,CAAE,EAElE,MAAM,IAAI7C,2BAA2B,CAAC;IACrC6C,KAAK,EAAEN,WAAW,CAACM,KAAK;IACxBC,QAAQ,EAAEP,WAAW,CAACO;GACtB,CAAC;AACJ,CAAC;AACD,OAAO,MAAMC,iBAAiB,GAAIR,WAAgC,IAAI;EACrE,IAAI,CAACpD,SAAS,CAACoD,WAAW,CAACC,MAAM,CAAC,EACjC,IAAI,CAACrD,SAAS,CAACoD,WAAW,CAACC,MAAM,CAACQ,SAAS,CAAC,EAC3C,IACC,CAAC7D,SAAS,CAACoD,WAAW,CAACM,KAAK,CAAC,IAC7BN,WAAW,CAACM,KAAK,KAAKN,WAAW,CAACC,MAAM,CAACQ,SAAS,EACjD;IACD,MAAM,IAAI3D,kBAAkB,CAAC;MAC5B4D,OAAO,EAAEV,WAAW,CAACM,KAAK;MAC1BG,SAAS,EAAET,WAAW,CAACC,MAAM,CAACQ;KAC9B,CAAC;;AAEN,CAAC;AACD,OAAO,MAAME,gBAAgB,GAAIX,WAAgC,IAAI;EACpE,IAAI,CAACpD,SAAS,CAACoD,WAAW,CAACC,MAAM,CAAC,EACjC,IAAI,CAACrD,SAAS,CAACoD,WAAW,CAACC,MAAM,CAACM,QAAQ,CAAC,EAC1C,IACC,CAAC3D,SAAS,CAACoD,WAAW,CAACO,QAAQ,CAAC,IAChCP,WAAW,CAACO,QAAQ,KAAKP,WAAW,CAACC,MAAM,CAACM,QAAQ,EACnD;IACD,MAAM,IAAIxD,qBAAqB,CAAC;MAC/B6D,UAAU,EAAEZ,WAAW,CAACO,QAAQ;MAChCM,cAAc,EAAEb,WAAW,CAACC,MAAM,CAACM;KACnC,CAAC;;AAEN,CAAC;AAED,OAAO,MAAMO,iBAAiB,GAAId,WAAgC,IAAI;EACrE;EACC;EACApD,SAAS,CAACoD,WAAW,CAAC1B,GAAG,CAAC,IAC1B,CAACzB,MAAM,CAACmD,WAAW,CAAC1B,GAAG,CAAC,IACxB1B,SAAS,CAACoD,WAAW,CAACT,QAAQ,CAAC,IAC/B,CAAC1C,MAAM,CAACmD,WAAW,CAACT,QAAQ,CAAC,EAE7B,MAAM,IAAIpC,oBAAoB,CAAC;IAC9BmB,GAAG,EAAE0B,WAAW,CAAC1B,GAAG;IACpBiB,QAAQ,EAAES,WAAW,CAACT;GACtB,CAAC;EACH,IAAI,CAAC3C,SAAS,CAACoD,WAAW,CAACb,YAAY,CAAC,IAAI,CAACvC,SAAS,CAACoD,WAAW,CAACZ,oBAAoB,CAAC,EACvF,MAAM,IAAItB,yBAAyB,CAAC;IACnCqB,YAAY,EAAEa,WAAW,CAACb,YAAY;IACtCC,oBAAoB,EAAEY,WAAW,CAACZ;GAClC,CAAC;AACJ,CAAC;AAED,OAAO,MAAM2B,oBAAoB,GAAIf,WAAgC,IAAI;EACxE;EACA;EACA;EACA,IAAI,CAACpD,SAAS,CAACoD,WAAW,CAACT,QAAQ,CAAC,IAAIS,WAAW,CAAC7B,IAAI,KAAK,KAAK,EACjE,MAAM,IAAIjB,oBAAoB,CAAC8C,WAAW,CAACT,QAAQ,CAAC;EACrD,IAAIS,WAAW,CAAC7B,IAAI,KAAK,KAAK,IAAI6B,WAAW,CAAC7B,IAAI,KAAK,KAAK,EAC3D,MAAM,IAAIL,yBAAyB,CAAC;IACnCqB,YAAY,EAAEa,WAAW,CAACb,YAAY;IACtCC,oBAAoB,EAAEY,WAAW,CAACZ;GAClC,CAAC;EAEH,IACCxC,SAAS,CAACoD,WAAW,CAACb,YAAY,CAAC,IACnC,CAACtC,MAAM,CAACmD,WAAW,CAACb,YAAY,CAAC,IACjCvC,SAAS,CAACoD,WAAW,CAACZ,oBAAoB,CAAC,IAC3C,CAACvC,MAAM,CAACmD,WAAW,CAACZ,oBAAoB,CAAC,EAEzC,MAAM,IAAIhC,yCAAyC,CAAC;IACnDgC,oBAAoB,EAAEY,WAAW,CAACZ,oBAAoB;IACtDD,YAAY,EAAEa,WAAW,CAACb;GAC1B,CAAC;AACJ,CAAC;AAED;;;;AAIA,OAAO,MAAM6B,WAAW,GAAIhB,WAAgC,IAAI;EAC/D,MAAMiB,UAAU,GAAG,CAACrE,SAAS,CAACoD,WAAW,CAAC1B,GAAG,CAAC,IAAI,CAAC1B,SAAS,CAACoD,WAAW,CAACkB,QAAQ,CAAC;EAClF,MAAMC,gBAAgB,GAAGF,UAAU,IAAI,CAACrE,SAAS,CAACoD,WAAW,CAACT,QAAQ,CAAC;EACvE,MAAM6B,mBAAmB,GACxBH,UAAU,IACV,CAACrE,SAAS,CAACoD,WAAW,CAACZ,oBAAoB,CAAC,IAC5C,CAACxC,SAAS,CAACoD,WAAW,CAACb,YAAY,CAAC;EAErC,IAAI,CAACgC,gBAAgB,IAAI,CAACC,mBAAmB,EAC5C,MAAM,IAAIxD,eAAe,CAAC;IACzBU,GAAG,EAAE0B,WAAW,CAAC1B,GAAG;IACpBiB,QAAQ,EAAES,WAAW,CAACT,QAAQ;IAC9BH,oBAAoB,EAAEY,WAAW,CAACZ,oBAAoB;IACtDD,YAAY,EAAEa,WAAW,CAACb;GAC1B,CAAC;EAEH,IAAIgC,gBAAgB,IAAIC,mBAAmB,EAC1C,MAAM,IAAIvD,2BAA2B,CAAC;IACrCS,GAAG,EAAE0B,WAAW,CAAC1B,GAAG;IACpBiB,QAAQ,EAAES,WAAW,CAACT,QAAQ;IAC9BH,oBAAoB,EAAEY,WAAW,CAACZ,oBAAoB;IACtDD,YAAY,EAAEa,WAAW,CAACb;GAC1B,CAAC;EAEH,CAACgC,gBAAgB,GAAGL,iBAAiB,GAAGC,oBAAoB,EAAEf,WAAW,CAAC;EAC1E,CAAC,CAACpD,SAAS,CAACoD,WAAW,CAAC7B,IAAI,CAAC,IAAI6B,WAAW,CAAC7B,IAAI,GAAG,KAAK,GACtD4C,oBAAoB,GACpBD,iBAAiB,EAAEd,WAAW,CAAC;AACnC,CAAC;AAED,OAAO,MAAMqB,6BAA6B,GAAGA,CAC5CrB,WAAgC,EAChCsB,cAA2D,KACxD;EACH,IAAI,CAAC1E,SAAS,CAAC0E,cAAc,CAAC,EAAE;IAC/BA,cAAc,CAACtB,WAAW,CAAC;IAC3B;;EAGD,IAAI,OAAOA,WAAW,KAAK,QAAQ,IAAIpD,SAAS,CAACoD,WAAW,CAAC,EAC5D,MAAM,IAAIzC,6BAA6B,CAACyC,WAAW,CAAC;EAErDD,uBAAuB,CAACC,WAAW,CAAC;EACpCK,iBAAiB,CAACL,WAAW,CAAC;EAC9BQ,iBAAiB,CAACR,WAAW,CAAC;EAC9BW,gBAAgB,CAACX,WAAW,CAAC;EAE7B,MAAMuB,oBAAoB,GAAGxD,iBAAiB,CAACiC,WAA0B,EAAExD,eAAe,CAAC;EAC3FwE,WAAW,CAACO,oBAAoB,CAAC;EAEjC,IACC3E,SAAS,CAAC2E,oBAAoB,CAAClD,KAAK,CAAC,IACrCzB,SAAS,CAAC2E,oBAAoB,CAAC/C,OAAO,CAAC,IACvC+C,oBAAoB,CAAClD,KAAK,CAACmD,UAAU,CAAC,GAAG,CAAC,IAC1CD,oBAAoB,CAAC/C,OAAO,CAACgD,UAAU,CAAC,GAAG,CAAC,EAE5C,MAAM,IAAInE,0BAA0B,CAAC;IACpCgB,KAAK,EAAE2B,WAAW,CAAC3B,KAAK;IACxBG,OAAO,EAAEwB,WAAW,CAACxB;GACrB,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}