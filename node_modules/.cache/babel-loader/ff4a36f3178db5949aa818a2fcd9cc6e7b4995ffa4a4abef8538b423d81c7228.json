{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { ETH_DATA_FORMAT } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nimport { Eip1559NotSupportedError, UnsupportedTransactionTypeError } from 'web3-errors';\nimport { format } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { getBlock, getGasPrice } from '../rpc_method_wrappers.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionType } from './transaction_builder.js';\nfunction getEip1559GasPricing(transaction, web3Context, returnFormat) {\n  var _a, _b, _c, _d;\n  return __awaiter(this, void 0, void 0, function* () {\n    const block = yield getBlock(web3Context, web3Context.defaultBlock, false, ETH_DATA_FORMAT);\n    if (isNullish(block.baseFeePerGas)) throw new Eip1559NotSupportedError();\n    let gasPrice;\n    if (isNullish(transaction.gasPrice) && BigInt(block.baseFeePerGas) === BigInt(0)) {\n      gasPrice = yield getGasPrice(web3Context, returnFormat);\n    }\n    if (!isNullish(transaction.gasPrice) || !isNullish(gasPrice)) {\n      const convertedTransactionGasPrice = format({\n        format: 'uint'\n      }, (_a = transaction.gasPrice) !== null && _a !== void 0 ? _a : gasPrice, returnFormat);\n      return {\n        maxPriorityFeePerGas: convertedTransactionGasPrice,\n        maxFeePerGas: convertedTransactionGasPrice\n      };\n    }\n    return {\n      maxPriorityFeePerGas: format({\n        format: 'uint'\n      }, (_b = transaction.maxPriorityFeePerGas) !== null && _b !== void 0 ? _b : web3Context.defaultMaxPriorityFeePerGas, returnFormat),\n      maxFeePerGas: format({\n        format: 'uint'\n      }, (_c = transaction.maxFeePerGas) !== null && _c !== void 0 ? _c : BigInt(block.baseFeePerGas) * BigInt(2) + BigInt((_d = transaction.maxPriorityFeePerGas) !== null && _d !== void 0 ? _d : web3Context.defaultMaxPriorityFeePerGas), returnFormat)\n    };\n  });\n}\nexport function getTransactionGasPricing(transaction, web3Context, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const transactionType = getTransactionType(transaction, web3Context);\n    if (!isNullish(transactionType)) {\n      if (transactionType.startsWith('-')) throw new UnsupportedTransactionTypeError(transactionType);\n      // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2718.md#transactions\n      if (Number(transactionType) < 0 || Number(transactionType) > 127) throw new UnsupportedTransactionTypeError(transactionType);\n      if (isNullish(transaction.gasPrice) && (transactionType === '0x0' || transactionType === '0x1')) return {\n        gasPrice: yield getGasPrice(web3Context, returnFormat),\n        maxPriorityFeePerGas: undefined,\n        maxFeePerGas: undefined\n      };\n      if (transactionType === '0x2') {\n        return Object.assign({\n          gasPrice: undefined\n        }, yield getEip1559GasPricing(transaction, web3Context, returnFormat));\n      }\n    }\n    return undefined;\n  });\n}","map":{"version":3,"names":["ETH_DATA_FORMAT","isNullish","Eip1559NotSupportedError","UnsupportedTransactionTypeError","format","getBlock","getGasPrice","getTransactionType","getEip1559GasPricing","transaction","web3Context","returnFormat","block","defaultBlock","baseFeePerGas","gasPrice","BigInt","convertedTransactionGasPrice","_a","maxPriorityFeePerGas","maxFeePerGas","_b","defaultMaxPriorityFeePerGas","_c","_d","getTransactionGasPricing","transactionType","startsWith","Number","undefined","Object","assign"],"sources":["../../../src/utils/get_transaction_gas_pricing.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}