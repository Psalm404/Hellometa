{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { mapState } from 'vuex';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      isEditingInfo: true,\n      // 默认显示修改个人信息的表单\n      isNavigating: false,\n      // 控制遮罩层显示的状态\n      formData: {\n        account: '',\n        name: '',\n        phone: '',\n        email: '',\n        description: '',\n        currentPassword: '',\n        newPassword: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '公司名称不能为空',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          message: '公司名称至少需要3个字符',\n          trigger: 'blur'\n        }, {\n          pattern: /^[A-Za-z0-9_\\u4e00-\\u9fa5]{3,}$/,\n          message: '公司名称只允许字母、数字、下划线和中文字符',\n          trigger: 'blur'\n        }],\n        phone: [\n        // { required: true, message: '手机号不能为空', trigger: 'blur' },\n        {\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入有效的手机号',\n          trigger: 'blur'\n        }],\n        email: [\n        // { required: true, message: '邮箱不能为空', trigger: 'blur' },\n        {\n          type: 'email',\n          message: '请输入有效的邮箱地址',\n          trigger: 'blur'\n        }],\n        currentPassword: [{\n          required: true,\n          message: '请输入原密码',\n          trigger: 'blur'\n        }, {\n          min: 8,\n          message: '原密码至少8个字符',\n          trigger: 'blur'\n        }, {\n          pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n          message: '原密码至少包含一个字母和一个数字',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '新密码不能为空',\n          trigger: 'blur'\n        }, {\n          min: 8,\n          message: '新密码至少8个字符',\n          trigger: 'blur'\n        }, {\n          pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n          message: '新密码至少包含一个字母和一个数字',\n          trigger: 'blur'\n        }],\n        description: [{\n          max: 100,\n          message: '描述不能超过100个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapState({\n      user: state => state.user\n    })\n  },\n  created() {\n    this.fetchUserInfo();\n    if (this.user && this.user.avatar) {\n      this.formData.avatar = this.user.avatar; // 设置初始头像路径\n    }\n  },\n  methods: {\n    fetchUserInfo() {\n      if (this.user) {\n        this.formData = {\n          ...this.formData,\n          account: this.user.account,\n          name: this.user.name,\n          phone: this.user.phone,\n          email: this.user.email,\n          description: this.user.description,\n          avatar: this.user.avatar\n        };\n        console.log(this.formData.account);\n      } else {\n        console.error('用户信息未找到，请重新登录。');\n      }\n    },\n    async updateInfo(formName) {\n      this.$refs[formName].validate(async valid => {\n        if (valid) {\n          this.isNavigating = true; // 显示遮罩层\n          try {\n            const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n            const res = await axios.post(`${apiBaseUrl}/updateInfo`, {\n              account: this.formData.account,\n              name: this.formData.name,\n              phone: this.formData.phone,\n              email: this.formData.email,\n              description: this.formData.description,\n              avatar: this.formData.avatar // 添加头像信息\n            });\n            if (res.data.code === 200) {\n              this.$store.commit('setUser', {\n                ...this.user,\n                name: this.formData.name,\n                phone: this.formData.phone,\n                email: this.formData.email,\n                description: this.formData.description,\n                avatar: this.formData.avatar\n              });\n              this.$message.success('个人信息修改成功!2s后返回个人主页');\n              setTimeout(() => {\n                this.$router.push('/home');\n              }, 2000);\n            } else {\n              this.$message.error('修改失败');\n            }\n          } catch (error) {\n            console.error('Error updating info:', error);\n            this.$message.error('修改失败，请稍后重试');\n          } finally {\n            this.isNavigating = false; // 隐藏遮罩层\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    async updatePassword(formName) {\n      this.$refs[formName].validate(async valid => {\n        if (valid) {\n          this.isNavigating = true; // 显示遮罩层\n          try {\n            const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n            const res = await axios.post(`${apiBaseUrl}/updatePassword`, {\n              account: this.formData.account,\n              old_password: this.formData.currentPassword,\n              new_password: this.formData.newPassword,\n              repeat_password: this.formData.newPassword\n            });\n            if (res.data.code === 200) {\n              this.$message.success('密码修改成功!2s后返回个人主页');\n              setTimeout(() => {\n                this.$router.push('/home');\n              }, 2000);\n            } else {\n              this.$message.error(res.data.status);\n            }\n          } catch (error) {\n            console.error('Error updating password:', error);\n            this.$message.error('修改失败，请稍后重试');\n          } finally {\n            this.isNavigating = false; // 隐藏遮罩层\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    editInfo() {\n      this.isEditingInfo = true; // 切换到编辑个人信息表单\n      document.getElementById('edit-profile-button').active = 'true';\n    },\n    editPwd() {\n      this.isEditingInfo = false; // 切换到编辑密码表单\n    },\n    backHome() {\n      this.isNavigating = true; // 显示遮罩层\n      this.$router.push('/home');\n    },\n    handleAvatarSuccess(res, file) {\n      if (res.code === 200) {\n        this.formData.avatar = URL.createObjectURL(file.raw); // 本地预览图片\n        this.$message.success('头像上传成功！');\n        // 更新Vuex中的用户信息\n        console.log(this.formData.avatar);\n        this.$store.commit('setUser', {\n          ...this.user,\n          avatar: this.formData.avatar\n        });\n      } else {\n        this.$message.error('头像上传失败，请重试');\n      }\n    },\n    beforeAvatarUpload(file) {\n      console.log('准备上传文件:', file);\n      console.log('上传的账户名:', this.formData.account);\n      // 可以在这里检查文件类型或大小\n      const isImage = file.type.startsWith('image/');\n      if (!isImage) {\n        this.$message.error('上传的文件必须是图片类型');\n        return false;\n      }\n      return true; // 返回 true 继续上传\n    },\n    customRequest({\n      file,\n      onSuccess,\n      onError\n    }) {\n      const formData = new FormData();\n      formData.append(\"account\", this.formData.account); // Assumes formData.account has the account value\n      formData.append(\"avatar\", file, file.name);\n\n      // Setting headers\n      const headers = new Headers();\n      headers.append(\"User-Agent\", \"Apifox/1.0.0 (https://apifox.com)\");\n      headers.append(\"Accept\", \"*/*\");\n      headers.append(\"Host\", \"8.134.209.144:28888\");\n      headers.append(\"Connection\", \"keep-alive\");\n\n      // Fetch API for the upload\n      fetch(\"http://8.134.209.144:28888/api/uploadAvatar\", {\n        method: 'POST',\n        headers: headers,\n        body: formData,\n        redirect: 'follow'\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        if (result.code === 200) {\n          onSuccess(result);\n        } else {\n          onError(new Error('上传失败'));\n        }\n      }).catch(error => {\n        console.log('error', error);\n        onError(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapState","axios","data","isEditingInfo","isNavigating","formData","account","name","phone","email","description","currentPassword","newPassword","rules","required","message","trigger","min","pattern","type","max","computed","user","state","created","fetchUserInfo","avatar","methods","console","log","error","updateInfo","formName","$refs","validate","valid","apiBaseUrl","process","env","VUE_APP_BACKEND_BASE_URL","res","post","code","$store","commit","$message","success","setTimeout","$router","push","updatePassword","old_password","new_password","repeat_password","status","editInfo","document","getElementById","active","editPwd","backHome","handleAvatarSuccess","file","URL","createObjectURL","raw","beforeAvatarUpload","isImage","startsWith","customRequest","onSuccess","onError","FormData","append","headers","Headers","fetch","method","body","redirect","then","response","json","result","Error","catch"],"sources":["src/components/editProfile.vue"],"sourcesContent":["<template>\r\n    <div class=\"edit-profile-container\">\r\n        <div class=\"edit-profile-box\">\r\n            <div class=\"edit-profile-text\">\r\n                <button class=\"edit-profile-button\" :class=\"{ active: isEditingInfo }\" @click=\"editInfo\" :disabled=\"isNavigating\">编辑您的个人资料</button>\r\n                <button class=\"edit-pwd-button\" :class=\"{ active: !isEditingInfo }\" @click=\"editPwd\" :disabled=\"isNavigating\">修改你的账号密码</button>\r\n                <a class=\"el-icon-back back-guest\" @click=\"backHome\" :disabled=\"isNavigating\">返回个人主页</a>\r\n            </div>\r\n            <el-form :model=\"formData\" :rules=\"rules\" ref=\"formData\">\r\n                <!-- 修改个人信息表单 -->\r\n                <div v-if=\"isEditingInfo\" class=\"edit-profile-columns\">\r\n                    <!-- 第一列 -->\r\n                    <div class=\"column\">\r\n                        <div class=\"edit-profile-input\">\r\n                            <label>用户名</label>\r\n                            <el-form-item prop=\"name\">\r\n                                <el-input type=\"text\" v-model=\"formData.name\"></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                        <div class=\"edit-profile-input\">\r\n                            <label>手机号</label>\r\n                            <el-form-item prop=\"phone\">\r\n                                <el-input type=\"text\" v-model=\"formData.phone\"></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                        <div class=\"edit-profile-input\">\r\n                            <label>邮箱</label>\r\n                            <el-form-item prop=\"email\">\r\n                                <el-input type=\"text\" v-model=\"formData.email\"></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- 第二列 -->\r\n                    <div class=\"column\">\r\n                        <div class=\"edit-profile-input\">\r\n                            <label>描述</label>\r\n                            <el-form-item prop=\"description\">\r\n                                <el-input type=\"textarea\" v-model=\"formData.description\" rows=\"4\" autosize></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                        <!-- 头像 -->\r\n                        <div class=\"edit-profile-input\">\r\n                            <label>头像</label>\r\n                            <el-form-item prop=\"avatar\">\r\n                                <el-upload\r\n                                    class=\"avatar-uploader\"\r\n                                    :show-file-list=\"false\"\r\n                                    :before-upload=\"beforeAvatarUpload\"\r\n                                    :on-success=\"handleAvatarSuccess\"\r\n                                    :http-request=\"customRequest\"\r\n                                    accept=\"image/*\"\r\n                                >\r\n                                    <img v-if=\"formData.avatar\" :src=\"formData.avatar\" class=\"avatar\">\r\n                                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                                </el-upload>\r\n                            </el-form-item>\r\n                        </div>\r\n                        \r\n                        <!-- 头像 -->\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- 修改账号密码表单 -->\r\n                <div v-if=\"!isEditingInfo\" class=\"edit-profile-columns\">\r\n                    <!-- 第一列 -->\r\n                    <div class=\"column\">\r\n                        <div class=\"edit-profile-input\">\r\n                            <label>*原密码</label>\r\n                            <el-form-item prop=\"currentPassword\">\r\n                                <el-input type=\"password\" v-model=\"formData.currentPassword\" show-password></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- 第二列 -->\r\n                    <div class=\"column\">\r\n                        <div class=\"edit-profile-input\">\r\n                            <label>*新密码</label>\r\n                            <el-form-item prop=\"newPassword\">\r\n                                <el-input type=\"password\" v-model=\"formData.newPassword\" show-password></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- 提交按钮 -->\r\n                <el-form-item>\r\n                    <button class=\"edit-profile-submit\" @click=\"isEditingInfo ? updateInfo('formData') : updatePassword('formData')\" :disabled=\"isNavigating\">\r\n                        提交修改\r\n                    </button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        <div class=\"overlay\" id=\"overlay\" :style=\"{ display: isNavigating ? 'block' : 'none' }\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            isEditingInfo: true,  // 默认显示修改个人信息的表单\r\n            isNavigating: false, // 控制遮罩层显示的状态\r\n            formData: {\r\n                account: '',\r\n                name: '',\r\n                phone: '',\r\n                email: '',\r\n                description: '',\r\n                currentPassword: '',\r\n                newPassword: '',\r\n            },\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: '公司名称不能为空', trigger: 'blur' },\r\n                    { min: 3, message: '公司名称至少需要3个字符', trigger: 'blur' },\r\n                    { pattern: /^[A-Za-z0-9_\\u4e00-\\u9fa5]{3,}$/, message: '公司名称只允许字母、数字、下划线和中文字符', trigger: 'blur' }\r\n                ],\r\n                phone: [\r\n                    // { required: true, message: '手机号不能为空', trigger: 'blur' },\r\n                    { pattern: /^1[3-9]\\d{9}$/, message: '请输入有效的手机号', trigger: 'blur' }\r\n                ],\r\n                email: [\r\n                    // { required: true, message: '邮箱不能为空', trigger: 'blur' },\r\n                    { type: 'email', message: '请输入有效的邮箱地址', trigger: 'blur' }\r\n                ],\r\n                currentPassword: [\r\n                    { required: true, message: '请输入原密码', trigger: 'blur' },\r\n                    { min: 8, message: '原密码至少8个字符', trigger: 'blur' },\r\n                    { pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, message: '原密码至少包含一个字母和一个数字', trigger: 'blur' }\r\n                ],\r\n                newPassword: [\r\n                    { required: true, message: '新密码不能为空', trigger: 'blur' },\r\n                    { min: 8, message: '新密码至少8个字符', trigger: 'blur' },\r\n                    { pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/, message: '新密码至少包含一个字母和一个数字', trigger: 'blur' }\r\n                ],\r\n                description: [\r\n                    { max: 100, message: '描述不能超过100个字符', trigger: 'blur' }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            user: state => state.user\r\n        })\r\n    },\r\n    created() {\r\n        this.fetchUserInfo();\r\n        if (this.user && this.user.avatar) {\r\n            this.formData.avatar = this.user.avatar; // 设置初始头像路径\r\n        }\r\n    },\r\n    methods: {\r\n        fetchUserInfo() {\r\n            if (this.user) {\r\n                this.formData = {\r\n                    ...this.formData,\r\n                    account: this.user.account,\r\n                    name: this.user.name,\r\n                    phone: this.user.phone,\r\n                    email: this.user.email,\r\n                    description: this.user.description,\r\n                    avatar: this.user.avatar,\r\n                };\r\n                console.log(this.formData.account);\r\n            } else {\r\n                console.error('用户信息未找到，请重新登录。');\r\n            }\r\n        },\r\n        async updateInfo(formName) {\r\n            this.$refs[formName].validate(async (valid) => {\r\n                if (valid) {\r\n                    this.isNavigating = true;  // 显示遮罩层\r\n                    try {\r\n                        const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n                        const res = await axios.post(`${apiBaseUrl}/updateInfo`, {\r\n                            account: this.formData.account,\r\n                            name: this.formData.name,\r\n                            phone: this.formData.phone,\r\n                            email: this.formData.email,\r\n                            description: this.formData.description,\r\n                            avatar: this.formData.avatar, // 添加头像信息\r\n                        });\r\n\r\n                        if (res.data.code === 200) {\r\n                            this.$store.commit('setUser', {\r\n                                ...this.user,\r\n                                name: this.formData.name,\r\n                                phone: this.formData.phone,\r\n                                email: this.formData.email,\r\n                                description: this.formData.description,\r\n                                avatar: this.formData.avatar,\r\n                            });\r\n                            this.$message.success('个人信息修改成功!2s后返回个人主页');\r\n                            setTimeout(() => {\r\n                                this.$router.push('/home');\r\n                            }, 2000);\r\n\r\n                        } else {\r\n                            this.$message.error('修改失败');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error updating info:', error);\r\n                        this.$message.error('修改失败，请稍后重试');\r\n                    } finally {\r\n                        this.isNavigating = false;  // 隐藏遮罩层\r\n                    }\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        async updatePassword(formName) {\r\n            this.$refs[formName].validate(async (valid) => {\r\n                if (valid) {\r\n                    this.isNavigating = true;  // 显示遮罩层\r\n                    try {\r\n                        const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n                        const res = await axios.post(`${apiBaseUrl}/updatePassword`, {\r\n                            account: this.formData.account,\r\n                            old_password: this.formData.currentPassword,\r\n                            new_password: this.formData.newPassword,\r\n                            repeat_password: this.formData.newPassword\r\n                        });\r\n\r\n                        if (res.data.code === 200) {\r\n                            this.$message.success('密码修改成功!2s后返回个人主页');\r\n                            setTimeout(() => {\r\n                                this.$router.push('/home');\r\n                            }, 2000);\r\n                        } else {\r\n                            this.$message.error(res.data.status);\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error updating password:', error);\r\n                        this.$message.error('修改失败，请稍后重试');\r\n                    } finally {\r\n                        this.isNavigating = false;  // 隐藏遮罩层\r\n                    }\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        editInfo() {\r\n            this.isEditingInfo = true;  // 切换到编辑个人信息表单\r\n            document.getElementById('edit-profile-button').active = 'true';\r\n        },\r\n        editPwd() {\r\n            this.isEditingInfo = false;  // 切换到编辑密码表单\r\n        },\r\n        backHome() {\r\n            this.isNavigating = true;  // 显示遮罩层\r\n            this.$router.push('/home');\r\n        },\r\n        handleAvatarSuccess(res, file) {\r\n            if (res.code === 200) {\r\n                this.formData.avatar = URL.createObjectURL(file.raw); // 本地预览图片\r\n                this.$message.success('头像上传成功！');\r\n                // 更新Vuex中的用户信息\r\n                console.log(this.formData.avatar);\r\n                this.$store.commit('setUser', {\r\n                    ...this.user,\r\n                    avatar: this.formData.avatar,\r\n                });\r\n            } else {\r\n                this.$message.error('头像上传失败，请重试');\r\n            }\r\n        },\r\n        beforeAvatarUpload(file) {\r\n            console.log('准备上传文件:', file);\r\n            console.log('上传的账户名:', this.formData.account);\r\n            // 可以在这里检查文件类型或大小\r\n            const isImage = file.type.startsWith('image/');\r\n            if (!isImage) {\r\n            this.$message.error('上传的文件必须是图片类型');\r\n            return false;\r\n            }\r\n            return true; // 返回 true 继续上传\r\n        },\r\n        customRequest({ file, onSuccess, onError }) {\r\n            const formData = new FormData();\r\n            formData.append(\"account\", this.formData.account); // Assumes formData.account has the account value\r\n            formData.append(\"avatar\", file, file.name);\r\n\r\n            // Setting headers\r\n            const headers = new Headers();\r\n            headers.append(\"User-Agent\", \"Apifox/1.0.0 (https://apifox.com)\");\r\n            headers.append(\"Accept\", \"*/*\");\r\n            headers.append(\"Host\", \"8.134.209.144:28888\");\r\n            headers.append(\"Connection\", \"keep-alive\");\r\n\r\n            // Fetch API for the upload\r\n            fetch(\"http://8.134.209.144:28888/api/uploadAvatar\", {\r\n                method: 'POST',\r\n                headers: headers,\r\n                body: formData,\r\n                redirect: 'follow'\r\n            })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                if (result.code === 200) {\r\n                    onSuccess(result);\r\n                } else {\r\n                    onError(new Error('上传失败'));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('error', error);\r\n                onError(error);\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n/* 容器样式 */\r\n.container {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #8c8c8c;\r\n}\r\n\r\n/* 内容样式 */\r\n.content {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n}\r\n\r\n.overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 9999;\r\n    background-color: #8c8c8c;\r\n    /* 确保覆盖在页面上方 */\r\n}\r\n\r\n.edit-profile-container {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    min-width: 100vw;\r\n}\r\n\r\n.edit-profile-box {\r\n    margin-top: 70px;\r\n    width: 1200px;\r\n    height: 700px;\r\n    color: white;\r\n    border: 2px solid rgba(255, 255, 255, 0.3);\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-top: 10px;\r\n    justify-content: center;\r\n}\r\n\r\n.edit-profile-text {\r\n    align-self: flex-start;\r\n    font-size: large;\r\n    text-align: left;\r\n    padding-top: 10px;\r\n    padding-left: 50px;\r\n    line-height: 35px;\r\n}\r\n\r\n.user-id {\r\n    font-size: medium;\r\n    margin-left: 20px;\r\n    color: #ffd700;\r\n}\r\n\r\n.edit-profile-input {\r\n    display: flex;\r\n    width: 500px;\r\n    margin: 20px 0; /* 为每个输入框添加垂直间距 */\r\n}\r\n\r\n.edit-profile-columns {\r\n    display: flex; /* 将两列并排显示 */\r\n    justify-content: space-between; /* 在两列之间添加空间 */\r\n    width: 100%; /* 宽度为容器的100% */\r\n}\r\n\r\n.column {\r\n    flex: 1; /* 使每一列占据相等的空间 */\r\n    margin: 0 10px; /* 给列之间添加一些间距 */\r\n}\r\n\r\n.edit-profile-input input[type=\"textarea\"] {\r\n    width: 100%; /* 宽度为100% */\r\n    max-width: 100%; /* 最大宽度为100% */\r\n    resize: none; /* 禁止手动调整大小 */\r\n    word-break: break-all; /* 长字自动换行 */\r\n}\r\n\r\n.edit-profile-input label {\r\n    margin-top: 10px;\r\n    width: 160px;\r\n    font-size: 15px;\r\n    color: white;\r\n}\r\n\r\n.edit-profile-container .el-form-item {\r\n    width: 100%;\r\n    height: 40px;\r\n}\r\n\r\n.edit-profile-input input {\r\n    -webkit-text-fill-color: white;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: transparent;\r\n    outline: none;\r\n    font-size: 1em;\r\n    color: white;\r\n}\r\n\r\ninput:-webkit-autofill {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n}\r\n\r\n.edit-profile-submit {\r\n    width: 400px;\r\n    height: 45px;\r\n    margin-top: 6%;\r\n    background: #fff;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 40px;\r\n    cursor: pointer;\r\n    font-size: 1em;\r\n    color: black;\r\n    font-weight: 500;\r\n}\r\n\r\n.edit-profile-submit:hover {\r\n    background: #ff5733;\r\n}\r\n\r\n.back-guest {\r\n    position: relative;\r\n    left: -48%;\r\n    top: -268%;\r\n    margin-top: 10px;\r\n    margin-right: 350px;\r\n    color: rgb(255, 244, 94);\r\n    cursor: pointer;\r\n}\r\n\r\n.back-guest:hover {\r\n    color: #ff5733;\r\n}\r\n\r\n.edit-profile-button {\r\n    position: relative;\r\n    top:-100%;\r\n    left: 3%;\r\n    background-color: rgba(255, 255, 255, 0.303); /* 设置为半透明 */\r\n    color:  #ffffffb0;\r\n    font-weight: 700; /* 设置字体粗细，500 为中等粗细 */\r\n    border: 1px solid  #ffffff00; \r\n    border-radius: 10px; /* 设置圆角 */\r\n    cursor: pointer;\r\n    transition: background-color 0.3s, border-color 0.3s; /* 添加边框颜色过渡 */\r\n    margin-top: 10px;\r\n    margin-right: 10px; /* 增加一个右边距 */\r\n    text-align: center; /* 文字居中 */\r\n    width: 200px; /* 设置按钮的宽度 */\r\n    height: 60px; /* 设置按钮的高度 */\r\n}\r\n\r\n.edit-pwd-button  {\r\n    position: relative;\r\n    top:-100%;\r\n    left: 5%;\r\n    background-color: rgba(255, 255, 255, 0.303); /* 设置为半透明 */\r\n    color:  #ffffffb0;\r\n    font-weight: 700; /* 设置字体粗细，500 为中等粗细 */\r\n    border: 1px solid  #ffffff00; \r\n    border-radius: 10px; /* 设置圆角 */\r\n    cursor: pointer;\r\n    transition: background-color 0.3s, border-color 0.3s; /* 添加边框颜色过渡 */\r\n    margin-top: 10px;\r\n    margin-right: 10px; /* 增加一个右边距 */\r\n    text-align: center; /* 文字居中 */\r\n    width: 200px; /* 设置按钮的宽度 */\r\n    height: 60px; /* 设置按钮的高度 */\r\n}\r\n\r\n.edit-profile-button:hover, .edit-pwd-button:hover {\r\n    background-color: #f47f41;\r\n    border-color: #f47f41; /* 修改hover状态下的边框颜色 */\r\n}\r\n\r\n.edit-profile-button.active,\r\n.edit-pwd-button.active {\r\n    background-color: #ff5900; /* 保持激活状态的颜色 */\r\n    border-color: #ff5900;\r\n    color: #ffffff; /* 文字颜色 */\r\n}\r\n.avatar-uploader {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100px;\r\n    height: 100px;\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n}\r\n.avatar-uploader-icon {\r\n    width: 15vw; /* 根据需要调整大小 */\r\n    height: 15vw; /* 确保宽高相等 */\r\n    max-width: 200px; /* 设置最大宽度，防止过大 */\r\n    max-height: 200px;\r\n    font-size: 28px;\r\n    color: #8c8c8c;\r\n}\r\n.avatar {\r\n    width: 15vw; /* 根据需要调整大小 */\r\n    height: 15vw; /* 确保宽高相等 */\r\n    max-width: 200px; /* 设置最大宽度，防止过大 */\r\n    max-height: 200px;\r\n    border-radius: 50%; /* 使其为正圆形 */\r\n    object-fit: contain; /* 确保图片按比例填充容器 */\r\n    overflow:auto;\r\n    background-color: transparent;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}