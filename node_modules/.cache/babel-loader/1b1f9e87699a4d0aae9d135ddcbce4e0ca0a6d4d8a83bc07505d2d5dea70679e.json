{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios'\nimport subInfo from '@/components/subInfo.vue';\nimport getMyURLs from '@/commons/getMyURLs';\nimport axios from 'axios';\nexport default {\n  components: {\n    subInfo\n  },\n  mounted() {\n    setTimeout(() => {\n      this.show = true;\n    }, 0);\n    this.getURLs();\n  },\n  data() {\n    return {\n      show: true,\n      searchName: '',\n      searchType: '',\n      gridData: [],\n      allData: [],\n      source: \"record\",\n      options: [{\n        value: 'pic',\n        label: '图片'\n      }, {\n        value: 'txt',\n        label: '文本'\n      }, {\n        value: '',\n        label: '全部'\n      }]\n    };\n  },\n  watch: {\n    searchName(newValue) {\n      this.filterData(newValue);\n    },\n    searchType(newValue2) {\n      this.filterData(newValue2);\n    }\n  },\n  methods: {\n    logOut() {\n      this.$store.dispatch('logout');\n      if (this.$route.path !== '/intro') {\n        setTimeout(() => {\n          this.$router.push('/intro');\n        }, 100);\n      }\n    },\n    async filterData() {\n      console.log('searchName', this.searchName);\n      console.log('searchType', this.searchType);\n      if (this.searchName || this.searchType) {\n        console.log('searchType', this.searchType);\n        try {\n          const responses = await Promise.all(this.allData.map(async item => {\n            try {\n              return await axios.get(item);\n            } catch (error) {\n              console.error(`从 ${item} 获取数据时出错:`, error);\n              return null;\n            }\n          }));\n          this.gridData = responses.filter(response => {\n            if (!response) return false; // 过滤掉返回 null 的情况\n            const name = response.data.name;\n            const type = response.data.type; // 假设响应中包含类型信息\n\n            const nameMatches = this.searchName ? name && name.toLowerCase().includes(this.searchName.toLowerCase()) : true;\n            const typeMatches = this.searchType ? type && type.toLowerCase().includes(this.searchType.toLowerCase()) : true;\n\n            // 同时满足名称和类型条件\n            return nameMatches && typeMatches;\n          }).map(response => response.config.url);\n          console.log('filteredData', this.gridData);\n        } catch (error) {\n          console.error('处理 Promise.all 操作时出错:', error);\n        }\n      } else {\n        this.gridData = this.allData; // 没有搜索条件时，显示全部数据\n      }\n    },\n    async getURLs() {\n      try {\n        this.allData = await getMyURLs();\n        // print(\"hi\",this.allData)\n        this.gridData = this.allData;\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"names":["subInfo","getMyURLs","axios","components","mounted","setTimeout","show","getURLs","data","searchName","searchType","gridData","allData","source","options","value","label","watch","newValue","filterData","newValue2","methods","logOut","$store","dispatch","$route","path","$router","push","console","log","responses","Promise","all","map","item","get","error","filter","response","name","type","nameMatches","toLowerCase","includes","typeMatches","config","url","e"],"sources":["src/components/recordWorks.vue"],"sourcesContent":["<template>\r\n<div class=\"container\">\r\n    <transition name=\"el-fade-in-linear\">\r\n        <div class=\"content\" v-show=\"show\">\r\n            <nav class=\"home-navbar\">\r\n                <div class=\"home-navbar-container\">\r\n                    <div class=\"want-to-be-left\">\r\n                        <a class=\"home-navbar-logo\">\r\n                            <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"home-logo-image\">\r\n                        </a>\r\n                        <div class=\"page-titile\">\r\n                            <h3></h3>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"want-to-be-right\">\r\n                        <ul class=\"home-navbar-menu\">\r\n                            <li class=\"guide-item\"><a href=\"#/guidePage\">用户指南</a></li>\r\n                            <li class=\"recharge-item\"><a href=\"#/myGas\">燃料管理</a></li>\r\n                            <li class=\"intro-item\"><a href=\"#/blockBrowse\">区块浏览器</a></li>\r\n                            <li class=\"explore-item\"><a href=\"#/exhibitWorks\">交易市场</a></li>\r\n                            <li class=\"upload-item\"><a href=\"#/uploadWorks\">凭证上传</a></li>\r\n                            <li class=\"records-item active\"><a href=\"#/recordWorks\">我的凭证</a></li>\r\n                            <li class=\"home-item\"><a href=\"#/home\">个人中心</a></li>\r\n                        </ul>\r\n                        <div>\r\n                            <button class=\"home-navbar-button\" @click=\"logOut\">退出登录</button>\r\n                        </div>\r\n                        <div class=\"home-navbar-profile\">\r\n                            <a href=\"https://github.com/Psalm404/Hellometa\" target=\"_blank\">\r\n                                <img src=\"../assets/github.jpg\" alt=\"Join us\">\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div class=\"display-container\">\r\n                <div class=\"profile-title\">\r\n                    <h2>Records</h2>\r\n                </div>\r\n                <div class=\"search-box\">\r\n                    <i class=\"el-icon-search\" style=\"font-size: large; line-height:33px;\"></i>\r\n                    <el-input class=\"search-by-name\" placeholder=\"按名称搜索\" v-model=\"searchName\" size=\"small\"></el-input>\r\n                    <el-select style=\"width:200px; \" size=\"small\" v-model=\"searchType\" placeholder=\"按类型搜索\">\r\n                        <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\r\n                    </el-select>\r\n                </div>\r\n            </div>\r\n            <div class=\"grid-box\">\r\n                <div v-for=\"(item, index) in gridData\" :key=\"index\" class=\"grid-item\">\r\n                    <subInfo :fileURL=\"item\" :source=\"source\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </transition>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios'\r\nimport subInfo from '@/components/subInfo.vue'\r\nimport getMyURLs from '@/commons/getMyURLs';\r\nimport axios from 'axios';\r\nexport default {\r\n    components: {\r\n        subInfo\r\n    },\r\n    mounted() {\r\n        setTimeout(() => {\r\n            this.show = true;\r\n        }, 0)\r\n        this.getURLs()\r\n    },\r\n    data() {\r\n        return {\r\n            show: true,\r\n            searchName: '',\r\n            searchType: '',\r\n            gridData: [],\r\n            allData:[],\r\n            source:\"record\",\r\n            options: [{\r\n                    value: 'pic',\r\n                    label: '图片'\r\n                }, {\r\n                    value: 'txt',\r\n                    label: '文本'\r\n                },\r\n                {\r\n                    value: '',\r\n                    label: '全部'\r\n                }\r\n            ]\r\n        };\r\n    },\r\n    watch: {\r\n        searchName(newValue) {\r\n            this.filterData(newValue);\r\n        },\r\n        searchType(newValue2) {\r\n            this.filterData(newValue2);\r\n        },\r\n    },\r\n    methods: {\r\n        logOut() {\r\n            this.$store.dispatch('logout');\r\n            if (this.$route.path !== '/intro') {\r\n                setTimeout(() => {\r\n                    this.$router.push('/intro');\r\n                }, 100);\r\n            }\r\n        },\r\n        async filterData() {\r\n            console.log('searchName', this.searchName);\r\n            console.log('searchType', this.searchType);\r\n\r\n            if (this.searchName || this.searchType) {\r\n                console.log('searchType', this.searchType)\r\n                try {\r\n                    const responses = await Promise.all(this.allData.map(async item => {\r\n                        try {\r\n                            return await axios.get(item);\r\n                        } catch (error) {\r\n                            console.error(`从 ${item} 获取数据时出错:`, error);\r\n                            return null;\r\n                        }\r\n                    }));\r\n\r\n                    this.gridData = responses.filter(response => {\r\n                        if (!response) return false; // 过滤掉返回 null 的情况\r\n                        const name = response.data.name;\r\n                        const type = response.data.type; // 假设响应中包含类型信息\r\n\r\n                        const nameMatches = this.searchName ?\r\n                            name && name.toLowerCase().includes(this.searchName.toLowerCase()) :\r\n                            true;\r\n\r\n                        const typeMatches = this.searchType ?\r\n                            type && type.toLowerCase().includes(this.searchType.toLowerCase()) :\r\n                            true;\r\n\r\n                        // 同时满足名称和类型条件\r\n                        return nameMatches && typeMatches;\r\n                    }).map(response => response.config.url);\r\n\r\n                    console.log('filteredData', this.gridData);\r\n                } catch (error) {\r\n                    console.error('处理 Promise.all 操作时出错:', error);\r\n                }\r\n            } else {\r\n                this.gridData = this.allData; // 没有搜索条件时，显示全部数据\r\n            }\r\n        },\r\n        async getURLs() {\r\n            try {\r\n                this.allData = await getMyURLs();\r\n                // print(\"hi\",this.allData)\r\n                this.gridData = this.allData;\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n    width: 100%;\r\n    height: auto;\r\n    max-height:100%;\r\n    /* display: flex;\r\n    flex-direction: column;\r\n    max-height: 100vh;\r\n    overflow: hidden;\r\n    position: relative; */\r\n}\r\n\r\n.content {\r\n    max-width: 100%;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    /* width: 100%;\r\n    height: 100%;\r\n    margin-left: 10%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: auto; */\r\n}\r\n\r\n.cool-text {\r\n    position: absolute;\r\n    z-index: 0;\r\n    font-size: 4.5em;\r\n    top: 0;\r\n    left: 75px;\r\n    color: rgba(255, 87, 51, 0.8);\r\n}\r\n\r\n.home-navbar {\r\n    margin-top: 20px;\r\n    margin-left: calc(50% - 48vw);\r\n    background-color: rgba(255, 255, 255, 0.6); /* 设置为半透明 */\r\n    border-bottom: 1px solid rgba(230, 232, 236, 0); /* 去掉底部边框 */\r\n    padding: 10px 20px;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 90%;\r\n    height: auto;\r\n    z-index: 1000;\r\n    border-radius: 25px; /* 设置圆角 */\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 添加阴影效果 */\r\n    backdrop-filter: blur(30px); /* 添加背景模糊效果 */\r\n}\r\n\r\n/* Recharge */\r\n.guide-item {\r\n    position: relative;\r\n    top: 10px;\r\n    /* 根据需要调整位置 */\r\n    left: -110px;\r\n    /* 根据需要调整位置 */\r\n}\r\n\r\n\r\n/* Recharge */\r\n.recharge-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -100px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Browser */\r\n.intro-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -90px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Explore */\r\n.explore-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -80px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Upload */\r\n.upload-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -70px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Records */\r\n.records-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -60px; /* 根据需要调整位置 */\r\n}\r\n\r\n/* Home */\r\n.home-item {\r\n    position: relative;\r\n    top: 10px; /* 根据需要调整位置 */\r\n    left: -50px; /* 根据需要调整位置 */\r\n}\r\n\r\n.home-navbar-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n}\r\n\r\n.want-to-be-left {\r\n    display: flex;\r\n    justify-content: flex-start; /* 左对齐 */\r\n    align-items: center;\r\n    flex-grow: 1; /* 使其占据剩余空间 */\r\n}\r\n\r\n.want-to-be-right {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n.home-navbar-logo-container {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.home-navbar-logo {\r\n    font-size: 2px;\r\n    font-weight: bold;\r\n    color: #333;\r\n    text-decoration: none;\r\n}\r\n\r\n.home-logo-image {\r\n    height: 40px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.home-navbar-title {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.home-navbar-menu li {\r\n    margin: 0 15px;\r\n}\r\n\r\n.home-navbar-menu {\r\n    list-style: none;\r\n    display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.home-navbar-menu li a {\r\n    color: #4d3535;\r\n    text-decoration: none;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    transition: color 0.3s;\r\n}\r\n\r\n.home-navbar-menu li.active a {\r\n    font-size: 18px;\r\n    color:  #ff5900;\r\n}\r\n\r\n.home-navbar-menu li a:hover {\r\n    color:  #ff5900;\r\n}\r\n\r\n.home-navbar-actions {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.home-navbar-button {\r\n    background-color: rgba(255, 255, 255, 0.6); /* 设置为半透明 */\r\n    color: #4d3535;\r\n    border: 1px solid #4d3535; /* 添加2px的边框，颜色与原背景色一致 */\r\n    padding: 10px 10px;\r\n    border-radius: 20px; /* 设置圆角 */\r\n    cursor: pointer;\r\n    transition: background-color 0.3s, border-color 0.3s; /* 添加边框颜色过渡 */\r\n    margin-right: 10px; /* 增加一个右边距 */\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 添加阴影效果 */\r\n    backdrop-filter: blur(30px); /* 添加背景模糊效果 */\r\n}\r\n\r\n.home-navbar-button:hover {\r\n    background-color: #ff5900;\r\n    border-color: #ff5900; /* 修改hover状态下的边框颜色 */\r\n}\r\n\r\n.home-navbar-profile img {\r\n    width: 35px;\r\n    height: 35px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n}\r\n\r\n.profile-titile{\r\n    z-index: 00; /* 设置一个较高的 z-index 使其在页面顶层 */\r\n}\r\n\r\nh2 {\r\n    position: relative;\r\n    left: 12%;\r\n    top: 23px;\r\n    font-size: 6em;\r\n    color:  #c64500;\r\n    text-align: center;\r\n}\r\n\r\n/* 新增的样式 */\r\n.display-container {\r\n    display: flex;\r\n    align-items: center; /* 垂直居中对齐 */\r\n    justify-content: space-between; /* 在两端对齐 */\r\n    margin-top: 70px; /* 根据需要调整间距 */\r\n    padding: 0 15px; /* 根据需要调整内边距 */\r\n}\r\n\r\n\r\n.search-box {\r\n    position: relative;\r\n    top:0%;\r\n    left: -28%;\r\n    z-index: 10;\r\n    text-align: left;\r\n    color: #9c9c9c;\r\n    padding: 10px 15px;\r\n    width: 500px;\r\n    box-shadow: 2px 4px 15px #171717;\r\n    background-color: rgb(48, 48, 48);\r\n    border-radius: 5px;\r\n    margin: 0px 60px;\r\n    margin-left: 10%;\r\n    display: flex;\r\n    gap: 15px;\r\n}\r\n\r\n.grid-box {\r\n    z-index: 1;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    gap: 25px;\r\n    margin: 20px 60px;\r\n}\r\n\r\n.grid-item {\r\n    color: white;\r\n    background-color: rgb(48, 48, 48);\r\n    height: 330px;\r\n    text-align: center;\r\n    border-radius: 7px;\r\n    box-shadow: 2px 4px 15px #171717;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 1px solid #ccc; /* 添加灰白色边框 */\r\n}\r\n\r\n</style>\r\n"],"mappings":";AA0DA;AACA,OAAAA,OAAA;AACA,OAAAC,SAAA;AACA,OAAAC,KAAA;AACA;EACAC,UAAA;IACAH;EACA;EACAI,QAAA;IACAC,UAAA;MACA,KAAAC,IAAA;IACA;IACA,KAAAC,OAAA;EACA;EACAC,KAAA;IACA;MACAF,IAAA;MACAG,UAAA;MACAC,UAAA;MACAC,QAAA;MACAC,OAAA;MACAC,MAAA;MACAC,OAAA;QACAC,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA;IAEA;EACA;EACAC,KAAA;IACAR,WAAAS,QAAA;MACA,KAAAC,UAAA,CAAAD,QAAA;IACA;IACAR,WAAAU,SAAA;MACA,KAAAD,UAAA,CAAAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,MAAA,CAAAC,QAAA;MACA,SAAAC,MAAA,CAAAC,IAAA;QACArB,UAAA;UACA,KAAAsB,OAAA,CAAAC,IAAA;QACA;MACA;IACA;IACA,MAAAT,WAAA;MACAU,OAAA,CAAAC,GAAA,oBAAArB,UAAA;MACAoB,OAAA,CAAAC,GAAA,oBAAApB,UAAA;MAEA,SAAAD,UAAA,SAAAC,UAAA;QACAmB,OAAA,CAAAC,GAAA,oBAAApB,UAAA;QACA;UACA,MAAAqB,SAAA,SAAAC,OAAA,CAAAC,GAAA,MAAArB,OAAA,CAAAsB,GAAA,OAAAC,IAAA;YACA;cACA,aAAAjC,KAAA,CAAAkC,GAAA,CAAAD,IAAA;YACA,SAAAE,KAAA;cACAR,OAAA,CAAAQ,KAAA,MAAAF,IAAA,aAAAE,KAAA;cACA;YACA;UACA;UAEA,KAAA1B,QAAA,GAAAoB,SAAA,CAAAO,MAAA,CAAAC,QAAA;YACA,KAAAA,QAAA;YACA,MAAAC,IAAA,GAAAD,QAAA,CAAA/B,IAAA,CAAAgC,IAAA;YACA,MAAAC,IAAA,GAAAF,QAAA,CAAA/B,IAAA,CAAAiC,IAAA;;YAEA,MAAAC,WAAA,QAAAjC,UAAA,GACA+B,IAAA,IAAAA,IAAA,CAAAG,WAAA,GAAAC,QAAA,MAAAnC,UAAA,CAAAkC,WAAA,MACA;YAEA,MAAAE,WAAA,QAAAnC,UAAA,GACA+B,IAAA,IAAAA,IAAA,CAAAE,WAAA,GAAAC,QAAA,MAAAlC,UAAA,CAAAiC,WAAA,MACA;;YAEA;YACA,OAAAD,WAAA,IAAAG,WAAA;UACA,GAAAX,GAAA,CAAAK,QAAA,IAAAA,QAAA,CAAAO,MAAA,CAAAC,GAAA;UAEAlB,OAAA,CAAAC,GAAA,sBAAAnB,QAAA;QACA,SAAA0B,KAAA;UACAR,OAAA,CAAAQ,KAAA,0BAAAA,KAAA;QACA;MACA;QACA,KAAA1B,QAAA,QAAAC,OAAA;MACA;IACA;IACA,MAAAL,QAAA;MACA;QACA,KAAAK,OAAA,SAAAX,SAAA;QACA;QACA,KAAAU,QAAA,QAAAC,OAAA;MACA,SAAAoC,CAAA;QACAnB,OAAA,CAAAC,GAAA,CAAAkB,CAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}