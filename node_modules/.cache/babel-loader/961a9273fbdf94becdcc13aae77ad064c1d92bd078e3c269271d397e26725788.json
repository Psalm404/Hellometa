{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport var Chain;\n(function (Chain) {\n  Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n  Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n  Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain || (Chain = {}));\nexport var Hardfork;\n(function (Hardfork) {\n  Hardfork[\"Chainstart\"] = \"chainstart\";\n  Hardfork[\"Homestead\"] = \"homestead\";\n  Hardfork[\"Dao\"] = \"dao\";\n  Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n  Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n  Hardfork[\"Byzantium\"] = \"byzantium\";\n  Hardfork[\"Constantinople\"] = \"constantinople\";\n  Hardfork[\"Petersburg\"] = \"petersburg\";\n  Hardfork[\"Istanbul\"] = \"istanbul\";\n  Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n  Hardfork[\"Berlin\"] = \"berlin\";\n  Hardfork[\"London\"] = \"london\";\n  Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n  Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n  Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n  Hardfork[\"Merge\"] = \"merge\";\n  Hardfork[\"Shanghai\"] = \"shanghai\";\n  Hardfork[\"ShardingForkDev\"] = \"shardingFork\";\n})(Hardfork || (Hardfork = {}));\nexport var ConsensusType;\n(function (ConsensusType) {\n  ConsensusType[\"ProofOfStake\"] = \"pos\";\n  ConsensusType[\"ProofOfWork\"] = \"pow\";\n  ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType || (ConsensusType = {}));\nexport var ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n  ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n  ConsensusAlgorithm[\"Clique\"] = \"clique\";\n  ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm || (ConsensusAlgorithm = {}));\nexport var CustomChain;\n(function (CustomChain) {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n  CustomChain[\"ArbitrumOne\"] = \"arbitrum-one\";\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain || (CustomChain = {}));","map":{"version":3,"names":["Chain","Hardfork","ConsensusType","ConsensusAlgorithm","CustomChain"],"sources":["../../../src/common/enums.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,WAAYA,KAIX;AAJD,WAAYA,KAAK;EAChBA,KAAA,CAAAA,KAAA,4BAAW;EACXA,KAAA,CAAAA,KAAA,0BAAU;EACVA,KAAA,CAAAA,KAAA,mCAAkB;AACnB,CAAC,EAJWA,KAAK,KAALA,KAAK;AAMjB,WAAYC,QAmBX;AAnBD,WAAYA,QAAQ;EACnBA,QAAA,6BAAyB;EACzBA,QAAA,2BAAuB;EACvBA,QAAA,eAAW;EACXA,QAAA,yCAAqC;EACrCA,QAAA,qCAAiC;EACjCA,QAAA,2BAAuB;EACvBA,QAAA,qCAAiC;EACjCA,QAAA,6BAAyB;EACzBA,QAAA,yBAAqB;EACrBA,QAAA,+BAA2B;EAC3BA,QAAA,qBAAiB;EACjBA,QAAA,qBAAiB;EACjBA,QAAA,iCAA6B;EAC7BA,QAAA,+BAA2B;EAC3BA,QAAA,mDAA+C;EAC/CA,QAAA,mBAAe;EACfA,QAAA,yBAAqB;EACrBA,QAAA,oCAAgC;AACjC,CAAC,EAnBWA,QAAQ,KAARA,QAAQ;AAqBpB,WAAYC,aAIX;AAJD,WAAYA,aAAa;EACxBA,aAAA,wBAAoB;EACpBA,aAAA,uBAAmB;EACnBA,aAAA,4BAAwB;AACzB,CAAC,EAJWA,aAAa,KAAbA,aAAa;AAMzB,WAAYC,kBAIX;AAJD,WAAYA,kBAAkB;EAC7BA,kBAAA,qBAAiB;EACjBA,kBAAA,qBAAiB;EACjBA,kBAAA,qBAAiB;AAClB,CAAC,EAJWA,kBAAkB,KAAlBA,kBAAkB;AAM9B,WAAYC,WAiDX;AAjDD,WAAYA,WAAW;EACtB;;;;;EAKAA,WAAA,sCAAkC;EAElC;;;;;EAKAA,WAAA,oCAAgC;EAEhC;;;;;EAKAA,WAAA,uDAAmD;EAEnD;;;;;EAKAA,WAAA,gCAA4B;EAE5B;;;;;EAKAA,WAAA,6BAAyB;EAEzB;;;;;EAKAA,WAAA,wCAAoC;EAEpC;;;;;EAKAA,WAAA,8CAA0C;AAC3C,CAAC,EAjDWA,WAAW,KAAXA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}