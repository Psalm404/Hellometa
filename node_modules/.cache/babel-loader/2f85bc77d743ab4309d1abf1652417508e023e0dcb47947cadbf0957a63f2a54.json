{"ast":null,"code":"var _a;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line import/extensions\nimport * as ethereumCryptography from 'ethereum-cryptography/secp256k1.js';\nexport const secp256k1 = (_a = ethereumCryptography.secp256k1) !== null && _a !== void 0 ? _a : ethereumCryptography;\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexport const SECP256K1_ORDER = secp256k1.CURVE.n;\nexport const SECP256K1_ORDER_DIV_2 = SECP256K1_ORDER / BigInt(2);","map":{"version":3,"names":["ethereumCryptography","secp256k1","_a","MAX_UINT64","BigInt","MAX_INTEGER","SECP256K1_ORDER","CURVE","n","SECP256K1_ORDER_DIV_2"],"sources":["../../../src/tx/constants.ts"],"sourcesContent":[null],"mappings":";AAAA;;;;;;;;;;;;;;;;AAgBA;AACA,OAAO,KAAKA,oBAAoB,MAAM,oCAAoC;AAE1E,OAAO,MAAMC,SAAS,GAAG,CAAAC,EAAA,GAAAF,oBAAoB,CAACC,SAAS,cAAAC,EAAA,cAAAA,EAAA,GAAIF,oBAAoB;AAC/E;;;AAGA,OAAO,MAAMG,UAAU,GAAGC,MAAM,CAAC,oBAAoB,CAAC;AAEtD;;;AAGA,OAAO,MAAMC,WAAW,GAAGD,MAAM,CAChC,oEAAoE,CACpE;AAED,OAAO,MAAME,eAAe,GAAGL,SAAS,CAACM,KAAK,CAACC,CAAC;AAChD,OAAO,MAAMC,qBAAqB,GAAGH,eAAe,GAAGF,MAAM,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}