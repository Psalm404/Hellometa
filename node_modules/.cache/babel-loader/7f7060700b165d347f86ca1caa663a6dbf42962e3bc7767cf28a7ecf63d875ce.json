{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport { ProviderError, SubscriptionError } from 'web3-errors';\nimport { isNullish } from 'web3-utils';\nimport { isSupportSubscriptions } from './utils.js';\nimport { Web3RequestManagerEvent } from './web3_request_manager.js';\nexport class Web3SubscriptionManager {\n  constructor(requestManager, registeredSubscriptions, tolerateUnlinkedSubscription = false) {\n    this.requestManager = requestManager;\n    this.registeredSubscriptions = registeredSubscriptions;\n    this.tolerateUnlinkedSubscription = tolerateUnlinkedSubscription;\n    this._subscriptions = new Map();\n    this.requestManager.on(Web3RequestManagerEvent.BEFORE_PROVIDER_CHANGE, () => __awaiter(this, void 0, void 0, function* () {\n      yield this.unsubscribe();\n    }));\n    this.requestManager.on(Web3RequestManagerEvent.PROVIDER_CHANGED, () => {\n      this.clear();\n      this.listenToProviderEvents();\n    });\n    this.listenToProviderEvents();\n  }\n  listenToProviderEvents() {\n    const providerAsWebProvider = this.requestManager.provider;\n    if (!this.requestManager.provider || typeof (providerAsWebProvider === null || providerAsWebProvider === void 0 ? void 0 : providerAsWebProvider.supportsSubscriptions) === 'function' && !(providerAsWebProvider === null || providerAsWebProvider === void 0 ? void 0 : providerAsWebProvider.supportsSubscriptions())) {\n      return;\n    }\n    if (typeof this.requestManager.provider.on === 'function') {\n      if (typeof this.requestManager.provider.request === 'function') {\n        // Listen to provider messages and data\n        this.requestManager.provider.on('message',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n        message => this.messageListener(message));\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n        providerAsWebProvider.on('data', data => this.messageListener(data));\n      }\n    }\n  }\n  messageListener(data) {\n    var _a, _b, _c;\n    if (!data) {\n      throw new SubscriptionError('Should not call messageListener with no data. Type was');\n    }\n    const subscriptionId = ((_a = data.params) === null || _a === void 0 ? void 0 : _a.subscription) || ((_b = data.data) === null || _b === void 0 ? void 0 : _b.subscription) || ((_c = data.id) === null || _c === void 0 ? void 0 : _c.toString(16));\n    // Process if the received data is related to a subscription\n    if (subscriptionId) {\n      const sub = this._subscriptions.get(subscriptionId);\n      sub === null || sub === void 0 ? void 0 : sub.processSubscriptionData(data);\n    }\n  }\n  /**\n   * Will create a new subscription\n   *\n   * @param name - The subscription you want to subscribe to\n   * @param args - Optional additional parameters, depending on the subscription type\n   * @param returnFormat- ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n   *\n   * Will subscribe to a specific topic (note: name)\n   * @returns The subscription object\n   */\n  subscribe(name, args, returnFormat = DEFAULT_RETURN_FORMAT) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const Klass = this.registeredSubscriptions[name];\n      if (!Klass) {\n        throw new SubscriptionError('Invalid subscription type');\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      const subscription = new Klass(args !== null && args !== void 0 ? args : undefined, {\n        subscriptionManager: this,\n        returnFormat\n      });\n      yield this.addSubscription(subscription);\n      return subscription;\n    });\n  }\n  /**\n   * Will returns all subscriptions.\n   */\n  get subscriptions() {\n    return this._subscriptions;\n  }\n  /**\n   *\n   * Adds an instance of {@link Web3Subscription} and subscribes to it\n   *\n   * @param sub - A {@link Web3Subscription} object\n   */\n  addSubscription(sub) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.requestManager.provider) {\n        throw new ProviderError('Provider not available');\n      }\n      if (!this.supportsSubscriptions()) {\n        throw new SubscriptionError('The current provider does not support subscriptions');\n      }\n      if (sub.id && this._subscriptions.has(sub.id)) {\n        throw new SubscriptionError(`Subscription with id \"${sub.id}\" already exists`);\n      }\n      yield sub.sendSubscriptionRequest();\n      if (isNullish(sub.id)) {\n        throw new SubscriptionError('Subscription is not subscribed yet.');\n      }\n      this._subscriptions.set(sub.id, sub);\n      return sub.id;\n    });\n  }\n  /**\n   * Will clear a subscription\n   *\n   * @param id - The subscription of type {@link Web3Subscription}  to remove\n   */\n  removeSubscription(sub) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        id\n      } = sub;\n      if (isNullish(id)) {\n        throw new SubscriptionError('Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager.');\n      }\n      if (!this._subscriptions.has(id) && !this.tolerateUnlinkedSubscription) {\n        throw new SubscriptionError(`Subscription with id \"${id.toString()}\" does not exists`);\n      }\n      yield sub.sendUnsubscribeRequest();\n      this._subscriptions.delete(id);\n      return id;\n    });\n  }\n  /**\n   * Will unsubscribe all subscriptions that fulfill the condition\n   *\n   * @param condition - A function that access and `id` and a `subscription` and return `true` or `false`\n   * @returns An array of all the un-subscribed subscriptions\n   */\n  unsubscribe(condition) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = [];\n      for (const [id, sub] of this.subscriptions.entries()) {\n        if (!condition || typeof condition === 'function' && condition({\n          id,\n          sub\n        })) {\n          result.push(this.removeSubscription(sub));\n        }\n      }\n      return Promise.all(result);\n    });\n  }\n  /**\n   * Clears all subscriptions\n   */\n  clear() {\n    this._subscriptions.clear();\n  }\n  /**\n   * Check whether the current provider supports subscriptions.\n   *\n   * @returns `true` or `false` depending on if the current provider supports subscriptions\n   */\n  supportsSubscriptions() {\n    return isNullish(this.requestManager.provider) ? false : isSupportSubscriptions(this.requestManager.provider);\n  }\n}","map":{"version":3,"names":["DEFAULT_RETURN_FORMAT","ProviderError","SubscriptionError","isNullish","isSupportSubscriptions","Web3RequestManagerEvent","Web3SubscriptionManager","constructor","requestManager","registeredSubscriptions","tolerateUnlinkedSubscription","_subscriptions","Map","on","BEFORE_PROVIDER_CHANGE","__awaiter","unsubscribe","PROVIDER_CHANGED","clear","listenToProviderEvents","providerAsWebProvider","provider","supportsSubscriptions","request","message","messageListener","data","subscriptionId","_a","params","subscription","_b","_c","id","toString","sub","get","processSubscriptionData","subscribe","name","args","returnFormat","Klass","undefined","subscriptionManager","addSubscription","subscriptions","has","sendSubscriptionRequest","set","removeSubscription","sendUnsubscribeRequest","delete","condition","result","entries","push","Promise","all"],"sources":["../../src/web3_subscription_manager.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}