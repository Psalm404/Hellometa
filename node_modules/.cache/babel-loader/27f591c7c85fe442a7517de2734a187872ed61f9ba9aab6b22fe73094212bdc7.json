{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { toChecksumAddress, utf8ToHex } from 'web3-utils';\nimport { formatTransaction } from 'web3-eth';\nimport { ETH_DATA_FORMAT } from 'web3-types';\nimport { validator, isHexStrict } from 'web3-validator';\nimport { personalRpcMethods } from 'web3-rpc-methods';\nexport const getAccounts = requestManager => __awaiter(void 0, void 0, void 0, function* () {\n  const result = yield personalRpcMethods.getAccounts(requestManager);\n  return result.map(toChecksumAddress);\n});\nexport const newAccount = (requestManager, password) => __awaiter(void 0, void 0, void 0, function* () {\n  validator.validate(['string'], [password]);\n  const result = yield personalRpcMethods.newAccount(requestManager, password);\n  return toChecksumAddress(result);\n});\nexport const unlockAccount = (requestManager, address, password, unlockDuration) => __awaiter(void 0, void 0, void 0, function* () {\n  validator.validate(['address', 'string', 'uint'], [address, password, unlockDuration]);\n  return personalRpcMethods.unlockAccount(requestManager, address, password, unlockDuration);\n});\nexport const lockAccount = (requestManager, address) => __awaiter(void 0, void 0, void 0, function* () {\n  validator.validate(['address'], [address]);\n  return personalRpcMethods.lockAccount(requestManager, address);\n});\nexport const importRawKey = (requestManager, keyData, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n  validator.validate(['string', 'string'], [keyData, passphrase]);\n  return personalRpcMethods.importRawKey(requestManager, keyData, passphrase);\n});\nexport const sendTransaction = (requestManager, tx, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n  const formattedTx = formatTransaction(tx, ETH_DATA_FORMAT);\n  return personalRpcMethods.sendTransaction(requestManager, formattedTx, passphrase);\n});\nexport const signTransaction = (requestManager, tx, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n  const formattedTx = formatTransaction(tx, ETH_DATA_FORMAT);\n  return personalRpcMethods.signTransaction(requestManager, formattedTx, passphrase);\n});\nexport const sign = (requestManager, data, address, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n  validator.validate(['string', 'address', 'string'], [data, address, passphrase]);\n  const dataToSign = isHexStrict(data) ? data : utf8ToHex(data);\n  return personalRpcMethods.sign(requestManager, dataToSign, address, passphrase);\n});\nexport const ecRecover = (requestManager, signedData, signature) => __awaiter(void 0, void 0, void 0, function* () {\n  validator.validate(['string', 'string'], [signedData, signature]);\n  const signedDataString = isHexStrict(signedData) ? signedData : utf8ToHex(signedData);\n  return personalRpcMethods.ecRecover(requestManager, signedDataString, signature);\n});","map":{"version":3,"names":["toChecksumAddress","utf8ToHex","formatTransaction","ETH_DATA_FORMAT","validator","isHexStrict","personalRpcMethods","getAccounts","requestManager","__awaiter","result","map","newAccount","password","validate","unlockAccount","address","unlockDuration","lockAccount","importRawKey","keyData","passphrase","sendTransaction","tx","formattedTx","signTransaction","sign","data","dataToSign","ecRecover","signedData","signature","signedDataString"],"sources":["../../src/rpc_method_wrappers.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,SAASA,iBAAiB,EAAEC,SAAS,QAAQ,YAAY;AACzD,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,SAAkCC,eAAe,QAAgC,YAAY;AAC7F,SAASC,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;AACvD,SAASC,kBAAkB,QAAQ,kBAAkB;AAErD,OAAO,MAAMC,WAAW,GAAUC,cAAkD,IAAIC,SAAA;EACvF,MAAMC,MAAM,GAAG,MAAMJ,kBAAkB,CAACC,WAAW,CAACC,cAAc,CAAC;EAEnE,OAAOE,MAAM,CAACC,GAAG,CAACX,iBAAiB,CAAC;AACrC,CAAC;AAED,OAAO,MAAMY,UAAU,GAAGA,CACzBJ,cAAkD,EAClDK,QAAgB,KACbJ,SAAA;EACHL,SAAS,CAACU,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAE1C,MAAMH,MAAM,GAAG,MAAMJ,kBAAkB,CAACM,UAAU,CAACJ,cAAc,EAAEK,QAAQ,CAAC;EAE5E,OAAOb,iBAAiB,CAACU,MAAM,CAAC;AACjC,CAAC;AAED,OAAO,MAAMK,aAAa,GAAGA,CAC5BP,cAAkD,EAClDQ,OAAgB,EAChBH,QAAgB,EAChBI,cAAsB,KACnBR,SAAA;EACHL,SAAS,CAACU,QAAQ,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,CAACE,OAAO,EAAEH,QAAQ,EAAEI,cAAc,CAAC,CAAC;EAEtF,OAAOX,kBAAkB,CAACS,aAAa,CAACP,cAAc,EAAEQ,OAAO,EAAEH,QAAQ,EAAEI,cAAc,CAAC;AAC3F,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAC1BV,cAAkD,EAClDQ,OAAgB,KACbP,SAAA;EACHL,SAAS,CAACU,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAE,CAACE,OAAO,CAAC,CAAC;EAE1C,OAAOV,kBAAkB,CAACY,WAAW,CAACV,cAAc,EAAEQ,OAAO,CAAC;AAC/D,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGA,CAC3BX,cAAkD,EAClDY,OAAkB,EAClBC,UAAkB,KACfZ,SAAA;EACHL,SAAS,CAACU,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAACM,OAAO,EAAEC,UAAU,CAAC,CAAC;EAE/D,OAAOf,kBAAkB,CAACa,YAAY,CAACX,cAAc,EAAEY,OAAO,EAAEC,UAAU,CAAC;AAC5E,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAC9Bd,cAAkD,EAClDe,EAAe,EACfF,UAAkB,KACfZ,SAAA;EACH,MAAMe,WAAW,GAAGtB,iBAAiB,CAACqB,EAAE,EAAEpB,eAAe,CAAC;EAE1D,OAAOG,kBAAkB,CAACgB,eAAe,CAACd,cAAc,EAAEgB,WAAW,EAAEH,UAAU,CAAC;AACnF,CAAC;AAED,OAAO,MAAMI,eAAe,GAAGA,CAC9BjB,cAAkD,EAClDe,EAAe,EACfF,UAAkB,KACfZ,SAAA;EACH,MAAMe,WAAW,GAAGtB,iBAAiB,CAACqB,EAAE,EAAEpB,eAAe,CAAC;EAE1D,OAAOG,kBAAkB,CAACmB,eAAe,CAACjB,cAAc,EAAEgB,WAAW,EAAEH,UAAU,CAAC;AACnF,CAAC;AAED,OAAO,MAAMK,IAAI,GAAGA,CACnBlB,cAAkD,EAClDmB,IAAe,EACfX,OAAgB,EAChBK,UAAkB,KACfZ,SAAA;EACHL,SAAS,CAACU,QAAQ,CAAC,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,CAACa,IAAI,EAAEX,OAAO,EAAEK,UAAU,CAAC,CAAC;EAEhF,MAAMO,UAAU,GAAGvB,WAAW,CAACsB,IAAI,CAAC,GAAGA,IAAI,GAAG1B,SAAS,CAAC0B,IAAI,CAAC;EAE7D,OAAOrB,kBAAkB,CAACoB,IAAI,CAAClB,cAAc,EAAEoB,UAAU,EAAEZ,OAAO,EAAEK,UAAU,CAAC;AAChF,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAGA,CACxBrB,cAAkD,EAClDsB,UAAqB,EACrBC,SAAiB,KACdtB,SAAA;EACHL,SAAS,CAACU,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAACgB,UAAU,EAAEC,SAAS,CAAC,CAAC;EAEjE,MAAMC,gBAAgB,GAAG3B,WAAW,CAACyB,UAAU,CAAC,GAAGA,UAAU,GAAG7B,SAAS,CAAC6B,UAAU,CAAC;EAErF,OAAOxB,kBAAkB,CAACuB,SAAS,CAACrB,cAAc,EAAEwB,gBAAgB,EAAED,SAAS,CAAC;AACjF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}