{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  mounted() {\n    this.account = localStorage.getItem('account');\n    this.getAccountList();\n  },\n  data() {\n    return {\n      account: null,\n      drawer: false,\n      name: '',\n      address: '',\n      search: '',\n      listData: []\n    };\n  },\n  methods: {\n    handleDelete(index, row) {\n      this.$confirm('是否移除该账户？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n        axios.post(`${apiBaseUrl}/removeAddress`, row).then(res => {\n          console.log(res);\n          if (res.data.code === 200) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.listData.splice(index, 1);\n          } else {\n            this.$message({\n              type: 'error',\n              message: '删除失败'\n            });\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n          this.$message({\n            type: 'error',\n            message: '操作失败，请检查控制台以获取更多信息'\n          });\n        });\n      }).catch(() => {\n        console.log('用户取消了删除操作');\n      });\n      console.log(index, row);\n    },\n    async addSmallAccount() {\n      // 1. 校验账户名和地址\n      if (this.name === '') {\n        this.$message.warning('账户名不得为空');\n        return;\n      } else if (this.address === '') {\n        this.$message.warning('账户地址不得为空');\n        return;\n      }\n      try {\n        const addressList = await window.ethereum.request({\n          method: 'eth_accounts',\n          params: []\n        });\n        console.log('addressList', addressList);\n        if (!Array.isArray(addressList) || !addressList.includes(this.address.toLowerCase())) {\n          this.$message.warning('未查找到该账户地址');\n          console.log('1234');\n          return;\n        }\n        console.log('asds', data);\n        const data = {\n          account: this.account,\n          address: this.address,\n          name: this.name\n        };\n        const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n        axios.post(`${apiBaseUrl}/addSmallAccount`, data).then(response => {\n          console.log('response', response);\n          if (response.data.code === 200) {\n            this.$message.success('导入成功');\n            this.listData.push({\n              name: this.name,\n              address: this.address\n            });\n            // this.getAccountList();\n          } else {\n            this.$message.error(response.data.status);\n          }\n        });\n      } catch (error) {\n        console.error('Error:', error);\n        this.$message.error('操作失败，请检查控制台以获取更多信息');\n      }\n    },\n    getAccountList() {\n      const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n      axios.get(`${apiBaseUrl}/getSmallAccount`, {\n        params: {\n          account: this.account\n        }\n      }).then(res => {\n        console.log('res', res);\n        if (res.data.status === \"查询成功\" && res.data.addresses) {\n          this.listData = res.data.addresses.map(item => {\n            // 如果 address 属性不存在，给它一个默认值\n            return {\n              ...item,\n              addresses: item || 'null'\n            };\n          });\n        }\n        console.log('listData', this.listData);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","mounted","account","localStorage","getItem","getAccountList","data","drawer","name","address","search","listData","methods","handleDelete","index","row","$confirm","confirmButtonText","cancelButtonText","type","then","apiBaseUrl","process","env","VUE_APP_BACKEND_BASE_URL","post","res","console","log","code","$message","message","splice","catch","error","addSmallAccount","warning","addressList","window","ethereum","request","method","params","Array","isArray","includes","toLowerCase","response","success","push","status","get","addresses","map","item","e"],"sources":["src/components/myAccount.vue"],"sourcesContent":["<template>\r\n<div class=\"myAccount-container\" style=\"background-color: #708090;\">\r\n    <div class=\"content\" style=\"height:100vh\">\r\n        <div class=\"myAccount-guideBox\">\r\n            <div class=\"myAccount-title\">链账户管理</div>\r\n            <a class=\"myAccount-howtouse\" @click=\"drawer = true\" style=\"align-self:self-start;\">\r\n                <i class=\"el-icon-question\" style=\"display:contents;\"></i>\r\n                我该如何使用账户管理？</a>\r\n        </div>\r\n        <div class=\"myAccount-createAccount\">\r\n            <div style=\"display: flex; gap: 20px\">\r\n                <div style=\" display: flex; flex:1; justify-items: center; align-items:center; gap:15px;\"> <span> 账户名称: </span>\r\n                    <el-input size=\"medium\" v-model=\"name\" placeholder=\"请输入账户名称\" style=\"width:400px\" maxlength=\"12\" minlength=\"1\" show-word-limit> </el-input>\r\n                </div>\r\n                <div style=\" display: flex; flex:1; justify-items: center; align-items:center; gap:15px;\"> <span> 账户地址: </span>\r\n                    <el-input size=\"medium\" v-model=\"address\" placeholder=\"请输入账户地址\" style=\"width:400px\"> </el-input>\r\n                </div>\r\n            </div>\r\n            <div style=\"display: flex; flex-direction: column;\">\r\n                <el-button type=\"primary\" class=\"create-accountBT\" size=\"small\" style=\"align-self: self-end;\" @click=\"addSmallAccount()\"> 导入账户</el-button>\r\n            </div>\r\n        </div>\r\n        <div class=\"myAccount-accountList\">\r\n            <div style=\"align-self:self-start;\">链账户列表</div>\r\n            <div>\r\n                <el-table :key=\"listData.length\" :data=\"listData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))\" style=\"width:100%\">\r\n                    <el-table-column prop=\"name\" label=\"账户名称\" width=\"400\"></el-table-column>\r\n                    <el-table-column prop=\"address\" label=\"账户地址\" width=\"500\"></el-table-column>\r\n                    <el-table-column align=\"right\">\r\n                        <!-- eslint-disable-next-line -->\r\n                        <template slot=\"header\" slot-scope=\"scope\">\r\n                            <el-input v-model=\"search\" size=\"mini\" placeholder=\"输入名称关键字搜索\" />\r\n                        </template>\r\n                        <!-- eslint-disable-next-line -->\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">移除</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                </el-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <el-drawer size=\"40%\" :visible.sync=\"drawer\" :with-header=\"false\">\r\n        <div style=\"font-size:22px; font-weight:bold; color:black; margin-top:20px;\">我该如何使用链账户管理?</div>\r\n        <div style=\"margin:20px\">\r\n            <div style=\"display:flex; flex-direction: column; align-items: flex-start; gap:10px;\">\r\n                <div style=\"font-weight:bold\">一、下载MetaMask插件并注册账号 </div>\r\n                <div style=\"font-weight:bold\">二、连接SSENFT区块链网络 </div>\r\n                <div style=\"font-weight:bold\">三、导入MetaMask账户</div>\r\n            </div>\r\n            <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 一、下载MetaMask插件并注册账号 </div>\r\n            <br />\r\n            <div style=\"text-align: start\">&emsp;&emsp;MetaMask是一款常用的以太坊钱包插件，以Edge为例演示下载流程：</div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\">1. 在浏览器拓展市场下载安装MetaMask。</div>\r\n            <div>\r\n                <el-image :src=\"require('@/assets/account1.png') \"></el-image>\r\n            </div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\">2. 以第一次使用为例，点击“创建新钱包”。</div>\r\n            <div>\r\n                <el-image :src=\"require('@/assets/account2.png') \"></el-image>\r\n            </div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\">3. 根据引导完成注册流程。</div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\">4. 注册完毕后，进入个人主页。</div>\r\n            <div>\r\n                <el-image :src=\"require('@/assets/account3.png') \"></el-image>\r\n            </div>\r\n            <br />\r\n\r\n            <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 二、连接SSENFT区块链网络 </div>\r\n            <br />\r\n            <div style=\"text-align: start\">&emsp;&emsp;MetaMask首次注册后默认连接以太坊公链。根据项目需求，需要更换至SSENFT区块链网络。</div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\">1. 进入网络设置界面，流程如下：</div>\r\n            <div>\r\n                <el-image :src=\"require('@/assets/account4.png') \"></el-image>\r\n            </div>\r\n            <div>\r\n                <el-image :src=\"require('@/assets/account5.png') \"></el-image>\r\n            </div>\r\n            <div>\r\n                <el-image :src=\"require('@/assets/account6.png') \"></el-image>\r\n            </div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\">2. 输入网络配置：</div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\"> &emsp;&emsp;网络名称（建议）：SSENFT</div>\r\n            <div style=\"text-align: start; font-weight: bold\"> &emsp;&emsp;新的 RPC URL：http://8.134.209.144:18545</div>\r\n            <div style=\"text-align: start; font-weight: bold\"> &emsp;&emsp;链ID： 12346</div>\r\n            <div style=\"text-align: start; font-weight: bold\"> &emsp;&emsp;货币符号：eth</div>\r\n            <br />\r\n            <div>\r\n                <el-image :src=\"require('@/assets/account7.png') \"></el-image>\r\n            </div>\r\n            <div style=\"text-align: start;\"> 确保填入信息无误后，点击保存并切换至该网络。</div>\r\n            <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 三、导入MetaMask账户 </div>\r\n            <br />\r\n            <div style=\"text-align: start\">&emsp;&emsp;每个MetaMask账户都有唯一的地址。将MetaMask账户地址导入本系统，便于系统定位到账户并进行区块链操作。</div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\">1. 点击浏览器右上角拼图图标呼出MetaMask，点击账户名：</div>\r\n            <div>\r\n                <el-image :src=\"require('@/assets/account8.png') \" size=\"small\" style=\"width: 300px;\"></el-image>\r\n            </div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\">2. 进入“账户详情”界面，可以修改账户名和查看完整的账户地址。</div>\r\n            <div>\r\n                <el-image :src=\"require('@/assets/account9.png') \" size=\"small\" style=\"width: 300px;\"></el-image>\r\n            </div>\r\n            <br />\r\n            <div style=\"text-align: start; font-weight: bold\">3. 将账户名称和账户地址导入到本系统中。</div>\r\n            <div style=\"text-align: start;\">&emsp;&emsp;注意：账户名称理论上可以自行指定，但建议与MetaMask上的账户名保持相同。账户地址必须正确无误。</div>\r\n\r\n        </div>\r\n    </el-drawer>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    mounted() {\r\n        this.account = localStorage.getItem('account');\r\n        this.getAccountList();\r\n    },\r\n    data() {\r\n        return {\r\n            account: null,\r\n            drawer: false,\r\n            name: '',\r\n            address: '',\r\n            search: '',\r\n            listData: [],\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        handleDelete(index, row) {\r\n            this.$confirm('是否移除该账户？', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n                    axios.post(`${apiBaseUrl}/removeAddress`, row).then(res => {\r\n                    console.log(res);\r\n                    if (res.data.code === 200) {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '删除成功!'\r\n                        });\r\n                        this.listData.splice(index, 1);\r\n                    } else {\r\n                        this.$message({\r\n                            type: 'error',\r\n                            message: '删除失败'\r\n                        });\r\n                    }\r\n                }).catch(error => {\r\n                    console.error('Error:', error);\r\n                    this.$message({\r\n                        type: 'error',\r\n                        message: '操作失败，请检查控制台以获取更多信息'\r\n                    });\r\n                })\r\n            }).catch(() => {\r\n                console.log('用户取消了删除操作');\r\n            });\r\n            console.log(index, row);\r\n        },\r\n\r\n        async addSmallAccount() {\r\n            // 1. 校验账户名和地址\r\n            if (this.name === '') {\r\n                this.$message.warning('账户名不得为空');\r\n                return;\r\n            } else if (this.address === '') {\r\n                this.$message.warning('账户地址不得为空');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const addressList = await window.ethereum.request({\r\n                    method: 'eth_accounts',\r\n                    params: [],\r\n                });\r\n\r\n                console.log('addressList', addressList);\r\n                if (!Array.isArray(addressList) || !addressList.includes(this.address.toLowerCase())) {\r\n                    this.$message.warning('未查找到该账户地址');\r\n                    console.log('1234')\r\n                    return;\r\n                }\r\n                console.log('asds', data)\r\n                const data = {\r\n                    account: this.account,\r\n                    address: this.address,\r\n                    name: this.name,\r\n                };\r\n                const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n                    axios.post(`${apiBaseUrl}/addSmallAccount`, data).then(response => {\r\n                    console.log('response', response)\r\n                    if (response.data.code === 200) {\r\n                        this.$message.success('导入成功');\r\n                        this.listData.push({\r\n                            name: this.name,\r\n                            address: this.address\r\n                        });\r\n                        // this.getAccountList();\r\n                    } else {\r\n                        this.$message.error(response.data.status);\r\n                    }\r\n                });\r\n\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                this.$message.error('操作失败，请检查控制台以获取更多信息');\r\n            }\r\n        },\r\n        getAccountList() {\r\n            const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n            axios.get(`${apiBaseUrl}/getSmallAccount`, {\r\n                params: {\r\n                    account: this.account\r\n                }\r\n            }).then(res => {\r\n                console.log('res', res)\r\n                if (res.data.status === \"查询成功\" && res.data.addresses) {\r\n                    this.listData = res.data.addresses.map(item => {\r\n                        // 如果 address 属性不存在，给它一个默认值\r\n                        return {\r\n                            ...item,\r\n                            addresses: item || 'null'\r\n                        };\r\n                    });\r\n                }\r\n\r\n                console.log('listData', this.listData)\r\n            }).catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        }\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.myAccount-container {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* justify-content: center; */\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    min-width: 100vw;\r\n    /* background-image: linear-gradient(to top, #bdc2e8 0%, #bdc2e8 1%, #e6dee9 80%); */\r\n    background-image: linear-gradient(to top, #16181b 0%, rgb(47, 43, 43) 100%);\r\n    ;\r\n\r\n}\r\n\r\n.myAccount-guideBox {\r\n    margin-top: 50px;\r\n    /* border: 1px solid green; */\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n\r\n.myAccount-title {\r\n    flex: 1;\r\n    align-self: flex-start;\r\n    color: black;\r\n    font-weight: bold;\r\n    font-size: 2em;\r\n}\r\n\r\n.myAccount-createAccount {\r\n    padding: 30px;\r\n    margin-top: 30px;\r\n    width: 90%;\r\n    /*侧边栏删除记得改*/\r\n    height: 140px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-direction: column;\r\n}\r\n\r\n.myAccount-accountList {\r\n    padding: 30px;\r\n    margin-top: 30px;\r\n    width: 90%;\r\n    /*侧边栏删除记得改*/\r\n    /* height: 140px; */\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-direction: column;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}