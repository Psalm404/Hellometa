{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { parseBaseType, hexToNumber } from '../utils.js';\nimport { isHexStrict } from './string.js';\n/**\n * Checks if a given value is a valid big int\n */\nexport const isBigInt = value => typeof value === 'bigint';\n// Note: this could be simplified using ** operator, but babel does not handle it well\n// \tyou can find more at: https://github.com/babel/babel/issues/13109 and https://github.com/web3/web3.js/issues/6187\n/** @internal */\nexport const bigintPower = (base, expo) => {\n  let res = base;\n  for (let index = 1; index < expo; index += 1) {\n    res *= base;\n  }\n  return res;\n};\nexport const isUInt = (value, options = {\n  abiType: 'uint'\n}) => {\n  if (!['number', 'string', 'bigint'].includes(typeof value) || typeof value === 'string' && value.length === 0) {\n    return false;\n  }\n  let size;\n  if (options === null || options === void 0 ? void 0 : options.abiType) {\n    const {\n      baseTypeSize\n    } = parseBaseType(options.abiType);\n    if (baseTypeSize) {\n      size = baseTypeSize;\n    }\n  } else if (options.bitSize) {\n    size = options.bitSize;\n  }\n  const maxSize = bigintPower(BigInt(2), BigInt(size !== null && size !== void 0 ? size : 256)) - BigInt(1);\n  try {\n    const valueToCheck = typeof value === 'string' && isHexStrict(value) ? BigInt(hexToNumber(value)) : BigInt(value);\n    return valueToCheck >= 0 && valueToCheck <= maxSize;\n  } catch (error) {\n    // Some invalid number value given which can not be converted via BigInt\n    return false;\n  }\n};\nexport const isInt = (value, options = {\n  abiType: 'int'\n}) => {\n  if (!['number', 'string', 'bigint'].includes(typeof value)) {\n    return false;\n  }\n  if (typeof value === 'number' && value > Number.MAX_SAFE_INTEGER) {\n    return false;\n  }\n  let size;\n  if (options === null || options === void 0 ? void 0 : options.abiType) {\n    const {\n      baseTypeSize,\n      baseType\n    } = parseBaseType(options.abiType);\n    if (baseType !== 'int') {\n      return false;\n    }\n    if (baseTypeSize) {\n      size = baseTypeSize;\n    }\n  } else if (options.bitSize) {\n    size = options.bitSize;\n  }\n  const maxSize = bigintPower(BigInt(2), BigInt((size !== null && size !== void 0 ? size : 256) - 1));\n  const minSize = BigInt(-1) * bigintPower(BigInt(2), BigInt((size !== null && size !== void 0 ? size : 256) - 1));\n  try {\n    const valueToCheck = typeof value === 'string' && isHexStrict(value) ? BigInt(hexToNumber(value)) : BigInt(value);\n    return valueToCheck >= minSize && valueToCheck <= maxSize;\n  } catch (error) {\n    // Some invalid number value given which can not be converted via BigInt\n    return false;\n  }\n};\nexport const isNumber = value => {\n  if (isInt(value)) {\n    return true;\n  }\n  // It would be a decimal number\n  if (typeof value === 'string' && /[0-9.]/.test(value) && value.indexOf('.') === value.lastIndexOf('.')) {\n    return true;\n  }\n  if (typeof value === 'number') {\n    return true;\n  }\n  return false;\n};","map":{"version":3,"names":["parseBaseType","hexToNumber","isHexStrict","isBigInt","value","bigintPower","base","expo","res","index","isUInt","options","abiType","includes","length","size","baseTypeSize","bitSize","maxSize","BigInt","valueToCheck","error","isInt","Number","MAX_SAFE_INTEGER","baseType","minSize","isNumber","test","indexOf","lastIndexOf"],"sources":["../../../src/validation/numbers.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}