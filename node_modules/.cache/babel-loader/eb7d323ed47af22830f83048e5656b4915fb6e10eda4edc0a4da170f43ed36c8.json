{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { TransactionPollingTimeoutError } from 'web3-errors';\n// eslint-disable-next-line import/no-cycle\nimport { pollTillDefinedAndReturnIntervalId, rejectIfTimeout } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { rejectIfBlockTimeout } from './reject_if_block_timeout.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionReceipt } from '../rpc_method_wrappers.js';\nexport function waitForTransactionReceipt(web3Context, transactionHash, returnFormat, customGetTransactionReceipt) {\n  var _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    const pollingInterval = (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval;\n    const [awaitableTransactionReceipt, IntervalId] = pollTillDefinedAndReturnIntervalId(() => __awaiter(this, void 0, void 0, function* () {\n      try {\n        return (customGetTransactionReceipt !== null && customGetTransactionReceipt !== void 0 ? customGetTransactionReceipt : getTransactionReceipt)(web3Context, transactionHash, returnFormat);\n      } catch (error) {\n        console.warn('An error happen while trying to get the transaction receipt', error);\n        return undefined;\n      }\n    }), pollingInterval);\n    const [timeoutId, rejectOnTimeout] = rejectIfTimeout(web3Context.transactionPollingTimeout, new TransactionPollingTimeoutError({\n      numberOfSeconds: web3Context.transactionPollingTimeout / 1000,\n      transactionHash\n    }));\n    const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield rejectIfBlockTimeout(web3Context, transactionHash);\n    try {\n      // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n      return yield Promise.race([awaitableTransactionReceipt, rejectOnTimeout, rejectOnBlockTimeout // this will throw an error on Transaction Block Timeout\n      ]);\n    } finally {\n      if (timeoutId) clearTimeout(timeoutId);\n      if (IntervalId) clearInterval(IntervalId);\n      blockTimeoutResourceCleaner.clean();\n    }\n  });\n}","map":{"version":3,"names":["TransactionPollingTimeoutError","pollTillDefinedAndReturnIntervalId","rejectIfTimeout","rejectIfBlockTimeout","getTransactionReceipt","waitForTransactionReceipt","web3Context","transactionHash","returnFormat","customGetTransactionReceipt","pollingInterval","_a","transactionReceiptPollingInterval","transactionPollingInterval","awaitableTransactionReceipt","IntervalId","__awaiter","error","console","warn","undefined","timeoutId","rejectOnTimeout","transactionPollingTimeout","numberOfSeconds","rejectOnBlockTimeout","blockTimeoutResourceCleaner","Promise","race","clearTimeout","clearInterval","clean"],"sources":["../../../src/utils/wait_for_transaction_receipt.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,SAASA,8BAA8B,QAAQ,aAAa;AAG5D;AACA,SAASC,kCAAkC,EAAEC,eAAe,QAAQ,YAAY;AAChF;AACA,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE;AACA,SAASC,qBAAqB,QAAQ,2BAA2B;AAEjE,OAAM,SAAgBC,yBAAyBA,CAC9CC,WAAyC,EACzCC,eAAsB,EACtBC,YAA0B,EAC1BC,2BAIgC;;;IAEhC,MAAMC,eAAe,GACpB,CAAAC,EAAA,GAAAL,WAAW,CAACM,iCAAiC,cAAAD,EAAA,cAAAA,EAAA,GAAIL,WAAW,CAACO,0BAA0B;IAExF,MAAM,CAACC,2BAA2B,EAAEC,UAAU,CAAC,GAAGd,kCAAkC,CACnF,MAAWe,SAAA;MACV,IAAI;QACH,OAAO,CAACP,2BAA2B,aAA3BA,2BAA2B,cAA3BA,2BAA2B,GAAIL,qBAAqB,EAC3DE,WAAW,EACXC,eAAe,EACfC,YAAY,CACZ;OACD,CAAC,OAAOS,KAAK,EAAE;QACfC,OAAO,CAACC,IAAI,CAAC,6DAA6D,EAAEF,KAAK,CAAC;QAClF,OAAOG,SAAS;;IAElB,CAAC,GACDV,eAAe,CACf;IAED,MAAM,CAACW,SAAS,EAAEC,eAAe,CAAC,GAAGpB,eAAe,CACnDI,WAAW,CAACiB,yBAAyB,EACrC,IAAIvB,8BAA8B,CAAC;MAClCwB,eAAe,EAAElB,WAAW,CAACiB,yBAAyB,GAAG,IAAI;MAC7DhB;KACA,CAAC,CACF;IAED,MAAM,CAACkB,oBAAoB,EAAEC,2BAA2B,CAAC,GAAG,MAAMvB,oBAAoB,CACrFG,WAAW,EACXC,eAAe,CACf;IAED,IAAI;MACH;MACA,OAAO,MAAMoB,OAAO,CAACC,IAAI,CAAC,CACzBd,2BAA2B,EAC3BQ,eAAe,EACfG,oBAAoB,CAAE;MAAA,CACtB,CAAC;KACF,SAAS;MACT,IAAIJ,SAAS,EAAEQ,YAAY,CAACR,SAAS,CAAC;MACtC,IAAIN,UAAU,EAAEe,aAAa,CAACf,UAAU,CAAC;MACzCW,2BAA2B,CAACK,KAAK,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}