{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { decodeAddress, encodeAddress } from './address.js';\nimport { decodeBool, encodeBoolean } from './bool.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nimport { decodeString, encodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeTuple, encodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeArray, encodeArray } from './array.js';\nexport { encodeAddress, decodeAddress } from './address.js';\nexport { encodeBoolean, decodeBool } from './bool.js';\nexport { encodeBytes, decodeBytes } from './bytes.js';\nexport { encodeNumber, decodeNumber } from './number.js';\nexport { encodeString, decodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeTuple, decodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeArray, decodeArray } from './array.js';\nexport function encodeParamFromAbiParameter(param, value) {\n  if (param.type === 'string') {\n    return encodeString(param, value);\n  }\n  if (param.type === 'bool') {\n    return encodeBoolean(param, value);\n  }\n  if (param.type === 'address') {\n    return encodeAddress(param, value);\n  }\n  if (param.type === 'tuple') {\n    return encodeTuple(param, value);\n  }\n  if (param.type.endsWith(']')) {\n    return encodeArray(param, value);\n  }\n  if (param.type.startsWith('bytes')) {\n    return encodeBytes(param, value);\n  }\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    return encodeNumber(param, value);\n  }\n  throw new AbiError('Unsupported', {\n    param,\n    value\n  });\n}\nexport function decodeParamFromAbiParameter(param, bytes) {\n  if (param.type === 'string') {\n    return decodeString(param, bytes);\n  }\n  if (param.type === 'bool') {\n    return decodeBool(param, bytes);\n  }\n  if (param.type === 'address') {\n    return decodeAddress(param, bytes);\n  }\n  if (param.type === 'tuple') {\n    return decodeTuple(param, bytes);\n  }\n  if (param.type.endsWith(']')) {\n    return decodeArray(param, bytes);\n  }\n  if (param.type.startsWith('bytes')) {\n    return decodeBytes(param, bytes);\n  }\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    return decodeNumber(param, bytes);\n  }\n  throw new AbiError('Unsupported', {\n    param,\n    bytes\n  });\n}","map":{"version":3,"names":["AbiError","decodeAddress","encodeAddress","decodeBool","encodeBoolean","decodeBytes","encodeBytes","decodeNumber","encodeNumber","decodeString","encodeString","decodeTuple","encodeTuple","decodeArray","encodeArray","encodeParamFromAbiParameter","param","value","type","endsWith","startsWith","decodeParamFromAbiParameter","bytes"],"sources":["../../../../src/coders/base/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}