{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport function isBytes(a) {\n  return a instanceof Uint8Array || a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array';\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */Array.from({\n  length: 256\n}, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\nexport function numberToHexUnpadded(num) {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = {\n  _0: 48,\n  _9: 57,\n  _A: 65,\n  _F: 70,\n  _a: 97,\n  _f: 102\n};\nfunction asciiToBase16(char) {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n  let res;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength) throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  let res = new Uint8Array(sum);\n  let pad = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n  return n >> BigInt(pos) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n  return n | (value ? _1n : _0n) << BigInt(pos);\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = n => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = data => new Uint8Array(data); // creates Uint8Array\nconst u8fr = arr => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed, pred) => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n  bigint: val => typeof val === 'bigint',\n  function: val => typeof val === 'function',\n  boolean: val => typeof val === 'boolean',\n  string: val => typeof val === 'string',\n  stringOrUint8Array: val => typeof val === 'string' || isBytes(val),\n  isSafeInteger: val => Number.isSafeInteger(val),\n  array: val => Array.isArray(val),\n  field: (val, object) => object.Fp.isValid(val),\n  hash: val => typeof val === 'function' && Number.isSafeInteger(val.outputLen)\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n  const checkField = (fieldName, type, isOptional) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function') throw new Error(`Invalid validator \"${type}\", expected function`);\n    const val = object[fieldName];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });","map":{"version":3,"names":["_0n","BigInt","_1n","_2n","isBytes","a","Uint8Array","constructor","name","hexes","Array","from","length","_","i","toString","padStart","bytesToHex","bytes","Error","hex","numberToHexUnpadded","num","hexToNumber","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hexToBytes","hl","al","array","ai","hi","n1","charCodeAt","n2","undefined","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","n","len","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","res","e","concatBytes","arrays","sum","pad","set","equalBytes","b","diff","utf8ToBytes","str","TextEncoder","encode","bitLen","bitGet","pos","bitSet","value","bitMask","u8n","data","u8fr","arr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","reset","fill","h","reseed","seed","gen","out","sl","slice","push","genUntil","pred","validatorFns","bigint","val","function","boolean","string","stringOrUint8Array","isSafeInteger","Number","isArray","field","object","Fp","isValid","hash","outputLen","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","String","Object","entries"],"sources":["../../src/abstract/utils.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}