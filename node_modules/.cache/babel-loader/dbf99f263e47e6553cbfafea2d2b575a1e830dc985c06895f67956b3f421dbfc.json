{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { isNullish } from 'web3-validator';\n/**\n * An alternative to the node function `isPromise` that exists in `util/types` because it is not available on the browser.\n * @param object - to check if it is a `Promise`\n * @returns `true` if it is an `object` or a `function` that has a `then` function. And returns `false` otherwise.\n */\nexport function isPromise(object) {\n  return (typeof object === 'object' || typeof object === 'function') &&\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  typeof object.then === 'function';\n}\n/**\n * Wait for a promise but interrupt it if it did not resolve within a given timeout.\n * If the timeout reached, before the promise code resolve, either throw an error if an error object was provided, or return `undefined`.\n * @param awaitable - The promise or function to wait for.\n * @param timeout - The timeout in milliseconds.\n * @param error - (Optional) The error to throw if the timeout reached.\n */\nexport function waitWithTimeout(awaitable, timeout, error) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let timeoutId;\n    const result = yield Promise.race([awaitable instanceof Promise ? awaitable : awaitable(), new Promise((resolve, reject) => {\n      timeoutId = setTimeout(() => error ? reject(error) : resolve(undefined), timeout);\n    })]);\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    if (result instanceof Error) {\n      throw result;\n    }\n    return result;\n  });\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached. It returns promise and intervalId.\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nexport function pollTillDefinedAndReturnIntervalId(func, interval) {\n  let intervalId;\n  const polledRes = new Promise((resolve, reject) => {\n    intervalId = setInterval(function intervalCallbackFunc() {\n      (() => __awaiter(this, void 0, void 0, function* () {\n        try {\n          const res = yield waitWithTimeout(func, interval);\n          if (!isNullish(res)) {\n            clearInterval(intervalId);\n            resolve(res);\n          }\n        } catch (error) {\n          clearInterval(intervalId);\n          reject(error);\n        }\n      }))();\n      return intervalCallbackFunc;\n    }() // this will immediate invoke first call\n    , interval);\n  });\n  return [polledRes, intervalId];\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached.\n * pollTillDefinedAndReturnIntervalId() function should be used instead of pollTillDefined if you need IntervalId in result.\n * This function will be deprecated in next major release so use pollTillDefinedAndReturnIntervalId().\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nexport function pollTillDefined(func, interval) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return pollTillDefinedAndReturnIntervalId(func, interval)[0];\n  });\n}\n/**\n * Enforce a timeout on a promise, so that it can be rejected if it takes too long to complete\n * @param timeout - The timeout to enforced in milliseconds.\n * @param error - The error to throw if the timeout is reached.\n * @returns A tuple of the timeout id and the promise that will be rejected if the timeout is reached.\n *\n * @example\n * ```ts\n * const [timerId, promise] = web3.utils.rejectIfTimeout(100, new Error('time out'));\n * ```\n */\nexport function rejectIfTimeout(timeout, error) {\n  let timeoutId;\n  const rejectOnTimeout = new Promise((_, reject) => {\n    timeoutId = setTimeout(() => {\n      reject(error);\n    }, timeout);\n  });\n  return [timeoutId, rejectOnTimeout];\n}\n/**\n * Sets an interval that repeatedly executes the given cond function with the specified interval between each call.\n * If the condition is met, the interval is cleared and a Promise that rejects with the returned value is returned.\n * @param cond - The function/confition to call.\n * @param interval - The interval in milliseconds.\n * @returns - an array with the interval ID and the Promise.\n */\nexport function rejectIfConditionAtInterval(cond, interval) {\n  let intervalId;\n  const rejectIfCondition = new Promise((_, reject) => {\n    intervalId = setInterval(() => {\n      (() => __awaiter(this, void 0, void 0, function* () {\n        const error = yield cond();\n        if (error) {\n          clearInterval(intervalId);\n          reject(error);\n        }\n      }))();\n    }, interval);\n  });\n  return [intervalId, rejectIfCondition];\n}","map":{"version":3,"names":["isNullish","isPromise","object","then","waitWithTimeout","awaitable","timeout","error","timeoutId","result","Promise","race","resolve","reject","setTimeout","undefined","clearTimeout","Error","pollTillDefinedAndReturnIntervalId","func","interval","intervalId","polledRes","setInterval","intervalCallbackFunc","__awaiter","res","clearInterval","pollTillDefined","rejectIfTimeout","rejectOnTimeout","_","rejectIfConditionAtInterval","cond","rejectIfCondition"],"sources":["../../src/promise_helpers.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}