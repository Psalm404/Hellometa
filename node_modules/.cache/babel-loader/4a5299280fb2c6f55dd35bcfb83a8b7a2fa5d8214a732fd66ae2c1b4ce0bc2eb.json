{"ast":null,"code":"import { bytesToHex, format, hexToBytes, keccak256 } from 'web3-utils';\nimport { TransactionFactory } from 'web3-eth-accounts';\nimport { detectRawTransactionType } from './detect_transaction_type.js';\nimport { formatTransaction } from './format_transaction.js';\n/**\n * Decodes an [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded transaction.\n *\n * @param encodedSignedTransaction The RLP encoded transaction.\n * @param returnFormat ({@link DataFormat} Specifies how the return data should be formatted.\n * @returns {@link SignedTransactionInfoAPI}, an object containing the RLP encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).\n */\nexport function decodeSignedTransaction(encodedSignedTransaction, returnFormat, options = {\n  fillInputAndData: false\n}) {\n  return {\n    raw: format({\n      format: 'bytes'\n    }, encodedSignedTransaction, returnFormat),\n    tx: formatTransaction(Object.assign(Object.assign({}, TransactionFactory.fromSerializedData(hexToBytes(encodedSignedTransaction)).toJSON()), {\n      hash: bytesToHex(keccak256(hexToBytes(encodedSignedTransaction))),\n      type: detectRawTransactionType(hexToBytes(encodedSignedTransaction))\n    }), returnFormat, {\n      fillInputAndData: options.fillInputAndData\n    })\n  };\n}","map":{"version":3,"names":["bytesToHex","format","hexToBytes","keccak256","TransactionFactory","detectRawTransactionType","formatTransaction","decodeSignedTransaction","encodedSignedTransaction","returnFormat","options","fillInputAndData","raw","tx","Object","assign","fromSerializedData","toJSON","hash","type"],"sources":["../../../src/utils/decode_signed_transaction.ts"],"sourcesContent":[null],"mappings":"AAsBA,SAASA,UAAU,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,QAAQ,YAAY;AACtE,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,SAASC,wBAAwB,QAAQ,8BAA8B;AACvE,SAASC,iBAAiB,QAAQ,yBAAyB;AAE3D;;;;;;;AAOA,OAAM,SAAUC,uBAAuBA,CACtCC,wBAAwC,EACxCC,YAA0B,EAC1BC,OAAA,GAA0C;EAAEC,gBAAgB,EAAE;AAAK,CAAE;EAErE,OAAO;IACNC,GAAG,EAAEX,MAAM,CAAC;MAAEA,MAAM,EAAE;IAAO,CAAE,EAAEO,wBAAwB,EAAEC,YAAY,CAAC;IACxEI,EAAE,EAAEP,iBAAiB,CACpBQ,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACIX,kBAAkB,CAACY,kBAAkB,CACvCd,UAAU,CAACM,wBAAwB,CAAC,CACpC,CAACS,MAAM,EAAE;MACVC,IAAI,EAAElB,UAAU,CAACG,SAAS,CAACD,UAAU,CAACM,wBAAwB,CAAC,CAAC,CAAC;MACjEW,IAAI,EAAEd,wBAAwB,CAACH,UAAU,CAACM,wBAAwB,CAAC;IAAC,EAC5C,EACzBC,YAAY,EACZ;MAAEE,gBAAgB,EAAED,OAAO,CAACC;IAAgB,CAAE;GAE/C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}