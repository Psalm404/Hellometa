{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { ContractExecutionError, Eip838ExecutionError, InvalidResponseError } from 'web3-errors';\nimport { decodeContractErrorData, isAbiErrorFragment } from 'web3-eth-abi';\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\n// eslint-disable-next-line import/no-cycle\nimport { call } from '../rpc_method_wrappers.js';\nexport const parseTransactionError = (error, contractAbi) => {\n  var _a, _b, _c, _d, _e;\n  if (error instanceof ContractExecutionError && error.cause instanceof Eip838ExecutionError) {\n    if (contractAbi !== undefined) {\n      const errorsAbi = contractAbi.filter(abi => isAbiErrorFragment(abi));\n      decodeContractErrorData(errorsAbi, error.cause);\n      return {\n        reason: error.cause.message,\n        signature: (_a = error.cause.data) === null || _a === void 0 ? void 0 : _a.slice(0, 10),\n        data: (_b = error.cause.data) === null || _b === void 0 ? void 0 : _b.substring(10),\n        customErrorName: error.cause.errorName,\n        customErrorDecodedSignature: error.cause.errorSignature,\n        customErrorArguments: error.cause.errorArgs\n      };\n    }\n    return {\n      reason: error.cause.message,\n      signature: (_c = error.cause.data) === null || _c === void 0 ? void 0 : _c.slice(0, 10),\n      data: (_d = error.cause.data) === null || _d === void 0 ? void 0 : _d.substring(10)\n    };\n  }\n  if (error instanceof InvalidResponseError && !Array.isArray((_e = error.cause) === null || _e === void 0 ? void 0 : _e.errors) && error.cause !== undefined) {\n    return error.cause.message;\n  }\n  throw error;\n};\n/**\n *\tReturns the revert reason generated by the EVM if the transaction were to be executed.\n *\n * @param web3Context - ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n * @returns `undefined` if no revert reason was given, a revert reason object, a revert reason string, or an `unknown` error\n */\nexport function getRevertReason(web3Context, transaction, contractAbi, returnFormat = DEFAULT_RETURN_FORMAT) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      yield call(web3Context, transaction, web3Context.defaultBlock, returnFormat);\n      return undefined;\n    } catch (error) {\n      return parseTransactionError(error, contractAbi);\n    }\n  });\n}","map":{"version":3,"names":["ContractExecutionError","Eip838ExecutionError","InvalidResponseError","decodeContractErrorData","isAbiErrorFragment","DEFAULT_RETURN_FORMAT","call","parseTransactionError","error","contractAbi","cause","undefined","errorsAbi","filter","abi","reason","message","signature","_a","data","slice","_b","substring","customErrorName","errorName","customErrorDecodedSignature","errorSignature","customErrorArguments","errorArgs","_c","_d","Array","isArray","_e","errors","getRevertReason","web3Context","transaction","returnFormat","defaultBlock"],"sources":["../../../src/utils/get_revert_reason.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,SAASA,sBAAsB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAyB,aAAa;AACjH,SAASC,uBAAuB,EAAEC,kBAAkB,QAAQ,cAAc;AAC1E,SAICC,qBAAqB,QAGf,YAAY;AAEnB;AACA,SAASC,IAAI,QAAQ,2BAA2B;AAGhD,OAAO,MAAMC,qBAAqB,GAAGA,CAACC,KAAc,EAAEC,WAAyB,KAAI;;EAClF,IAAID,KAAK,YAAYR,sBAAsB,IAAIQ,KAAK,CAACE,KAAK,YAAYT,oBAAoB,EAAE;IAC3F,IAAIQ,WAAW,KAAKE,SAAS,EAAE;MAC9B,MAAMC,SAAS,GAAGH,WAAW,CAACI,MAAM,CAACC,GAAG,IACvCV,kBAAkB,CAACU,GAAG,CAAC,CACU;MAClCX,uBAAuB,CAACS,SAAS,EAAEJ,KAAK,CAACE,KAAK,CAAC;MAE/C,OAAO;QACNK,MAAM,EAAEP,KAAK,CAACE,KAAK,CAACM,OAAO;QAC3BC,SAAS,EAAE,CAAAC,EAAA,GAAAV,KAAK,CAACE,KAAK,CAACS,IAAI,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QACzCD,IAAI,EAAE,CAAAE,EAAA,GAAAb,KAAK,CAACE,KAAK,CAACS,IAAI,cAAAE,EAAA,uBAAAA,EAAA,CAAEC,SAAS,CAAC,EAAE,CAAC;QACrCC,eAAe,EAAEf,KAAK,CAACE,KAAK,CAACc,SAAS;QACtCC,2BAA2B,EAAEjB,KAAK,CAACE,KAAK,CAACgB,cAAc;QACvDC,oBAAoB,EAAEnB,KAAK,CAACE,KAAK,CAACkB;OACH;;IAGjC,OAAO;MACNb,MAAM,EAAEP,KAAK,CAACE,KAAK,CAACM,OAAO;MAC3BC,SAAS,EAAE,CAAAY,EAAA,GAAArB,KAAK,CAACE,KAAK,CAACS,IAAI,cAAAU,EAAA,uBAAAA,EAAA,CAAET,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACzCD,IAAI,EAAE,CAAAW,EAAA,GAAAtB,KAAK,CAACE,KAAK,CAACS,IAAI,cAAAW,EAAA,uBAAAA,EAAA,CAAER,SAAS,CAAC,EAAE;KACpB;;EAGlB,IACCd,KAAK,YAAYN,oBAAoB,IACrC,CAAC6B,KAAK,CAACC,OAAO,CAAC,CAAAC,EAAA,GAACzB,KAAK,CAACE,KAAwB,cAAAuB,EAAA,uBAAAA,EAAA,CAAEC,MAAM,CAAC,IACvD1B,KAAK,CAACE,KAAK,KAAKC,SAAS,EACxB;IACD,OAAOH,KAAK,CAACE,KAAK,CAACM,OAAO;;EAG3B,MAAMR,KAAK;AACZ,CAAC;AAED;;;;;;;AAOA,OAAM,SAAgB2B,eAAeA,CAGpCC,WAAyC,EACzCC,WAA4B,EAC5B5B,WAAyB,EACzB6B,YAAA,GAA6BjC,qBAAqC;;IAElE,IAAI;MACH,MAAMC,IAAI,CAAC8B,WAAW,EAAEC,WAAW,EAAED,WAAW,CAACG,YAAY,EAAED,YAAY,CAAC;MAC5E,OAAO3B,SAAS;KAChB,CAAC,OAAOH,KAAK,EAAE;MACf,OAAOD,qBAAqB,CAACC,KAAK,EAAEC,WAAW,CAAC;;EAElD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}