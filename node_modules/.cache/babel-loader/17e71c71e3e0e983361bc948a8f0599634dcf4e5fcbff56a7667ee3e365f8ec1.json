{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { BaseWeb3Error, MultipleErrors } from '../web3_error_base.js';\nimport { ERR_INVALID_RESPONSE, ERR_RESPONSE } from '../error_codes.js';\n// To avoid circular package dependency, copied to code here. If you update this please update same function in `json_rpc.ts`\nconst isResponseWithError = response => !Array.isArray(response) && response.jsonrpc === '2.0' && !!response && (\n// eslint-disable-next-line no-null/no-null\nresponse.result === undefined || response.result === null) &&\n// JSON RPC consider \"null\" as valid response\n'error' in response && (typeof response.id === 'number' || typeof response.id === 'string');\nconst buildErrorMessage = response => isResponseWithError(response) ? response.error.message : '';\nexport class ResponseError extends BaseWeb3Error {\n  constructor(response, message, request, statusCode) {\n    var _a;\n    super(message !== null && message !== void 0 ? message : `Returned error: ${Array.isArray(response) ? response.map(r => buildErrorMessage(r)).join(',') : buildErrorMessage(response)}`);\n    this.code = ERR_RESPONSE;\n    if (!message) {\n      this.data = Array.isArray(response) ? response.map(r => {\n        var _a;\n        return (_a = r.error) === null || _a === void 0 ? void 0 : _a.data;\n      }) : (_a = response === null || response === void 0 ? void 0 : response.error) === null || _a === void 0 ? void 0 : _a.data;\n    }\n    this.statusCode = statusCode;\n    this.request = request;\n    let errorOrErrors;\n    if (`error` in response) {\n      errorOrErrors = response.error;\n    } else if (response instanceof Array) {\n      errorOrErrors = response.filter(r => r.error).map(r => r.error);\n    }\n    if (Array.isArray(errorOrErrors) && errorOrErrors.length > 0) {\n      this.cause = new MultipleErrors(errorOrErrors);\n    } else {\n      this.cause = errorOrErrors;\n    }\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      data: this.data,\n      request: this.request,\n      statusCode: this.statusCode\n    });\n  }\n}\nexport class InvalidResponseError extends ResponseError {\n  constructor(result, request) {\n    super(result, undefined, request);\n    this.code = ERR_INVALID_RESPONSE;\n    let errorOrErrors;\n    if (`error` in result) {\n      errorOrErrors = result.error;\n    } else if (result instanceof Array) {\n      errorOrErrors = result.map(r => r.error);\n    }\n    if (Array.isArray(errorOrErrors)) {\n      this.cause = new MultipleErrors(errorOrErrors);\n    } else {\n      this.cause = errorOrErrors;\n    }\n  }\n}","map":{"version":3,"names":["BaseWeb3Error","MultipleErrors","ERR_INVALID_RESPONSE","ERR_RESPONSE","isResponseWithError","response","Array","isArray","jsonrpc","result","undefined","id","buildErrorMessage","error","message","ResponseError","constructor","request","statusCode","map","r","join","code","data","_a","errorOrErrors","filter","length","cause","toJSON","Object","assign","InvalidResponseError"],"sources":["../../../src/errors/response_errors.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}