{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Web3 from 'web3';\nimport axios from 'axios';\nexport default {\n  mounted() {\n    setTimeout(() => {\n      this.show = true;\n    }, 150);\n    this.account = localStorage.getItem('account');\n    this.getAccountList();\n    this.getTotalGas();\n  },\n  data() {\n    return {\n      show: false,\n      account: null,\n      myGas: null,\n      drawer: false,\n      drawer2: false,\n      drawer3: false,\n      totalGas: 0,\n      search: '',\n      CNYToUSD: '',\n      USDToETH: '',\n      listData: [],\n      rechargeRecord: null,\n      distributeRecord: null,\n      totalGasETH: null\n    };\n  },\n  methods: {\n    logOut() {\n      this.$store.dispatch('logout');\n      setTimeout(() => {\n        this.$router.push('/intro');\n      }, 200);\n    },\n    async getAccountList() {\n      const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n      let res = await axios.get(`${apiBaseUrl}/getSmallAccount`, {\n        params: {\n          account: this.account\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n      if (res.data.status === \"查询成功\" && res.data.addresses) {\n        this.listData = res.data.addresses.map(item => {\n          // 如果 address 属性不存在，给它一个默认值\n          return {\n            ...item,\n            addresses: item || 'null'\n          };\n        });\n        this.getAccountBalance();\n      }\n    },\n    distributeGas(index, info) {\n      console.log(index, info);\n      let total = Web3.utils.fromWei(this.totalGas, 'ether');\n      this.$prompt('请输入分配燃料数量（eth）;', '分配燃料', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValidator: value => {\n          const numberValue = parseFloat(value);\n          if (isNaN(numberValue)) {\n            return '请输入有效数字';\n          }\n          if (numberValue > total * 0.99) {\n            return '超过最大可分配额度 (' + (total * 0.99).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + ')';\n          }\n          return true;\n        }\n      }).then(({\n        value\n      }) => {\n        let toAddress = info.address;\n        let amount = parseFloat(Web3.utils.toWei(value, 'ether'));\n        const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n        axios.post(`${apiBaseUrl}/sendFunds`, {\n          toAddress: toAddress,\n          amount: amount\n        }).then(res => {\n          console.log(toAddress, amount);\n          console.log(res);\n          if (res.data.code === 200) {\n            this.$message({\n              type: 'success',\n              message: '分配成功'\n            });\n            this.getAccountBalance();\n            this.getTotalGas();\n          }\n        });\n      }).catch(() => {});\n    },\n    async getAccountBalance() {\n      console.log('getbalance');\n      let web3 = new Web3(window.ethereum);\n      try {\n        for (const item of this.listData) {\n          console.log(item.address);\n          const balance = await window.ethereum.request({\n            method: 'eth_getBalance',\n            params: [item.address, 'latest']\n          });\n          const balanceInEth = web3.utils.fromWei(balance, 'ether'); // 将 wei 转换为 ETH\n          const formattedBalance = parseFloat(balanceInEth).toFixed(8); // 保留 10 位小数\n\n          // 使用 $set 更新数据\n          this.$set(this.listData, this.listData.indexOf(item), {\n            ...item,\n            balance: formattedBalance\n          });\n          console.log('accountbalance', formattedBalance);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    getTotalGas() {\n      const params = {\n        account: this.account\n      };\n      console.log('account', this.account);\n      const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n      axios.get(`${apiBaseUrl}/getUserBalance`, {\n        params: params\n      }).then(res => {\n        if (res.data.code === 200) {\n          this.totalGas = res.data.balance;\n          this.totalGasETH = Web3.utils.fromWei(this.totalGas, 'ether');\n          // 调用 Vuex action 更新余额\n          this.$store.dispatch('updateUserBalance', this.totalGasETH);\n          console.log('userBalance::' + this.totalGasETH);\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    async getRecord() {\n      const params = {\n        account: this.account\n      };\n      const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n      await axios.get(`${apiBaseUrl}/getRecord`, {\n        params: params\n      }).then(res => {\n        console.log(res);\n        const recordList = res.data.records;\n        this.rechargeRecord = recordList.filter(item => {\n          return item.type === '充值';\n        });\n        this.distributeRecord = recordList.filter(item => {\n          return item.type === '分配燃料';\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    toGasRecharge() {\n      this.$router.push('/myGas/gasRecharge');\n    }\n  }\n};","map":{"version":3,"names":["Web3","axios","mounted","setTimeout","show","account","localStorage","getItem","getAccountList","getTotalGas","data","myGas","drawer","drawer2","drawer3","totalGas","search","CNYToUSD","USDToETH","listData","rechargeRecord","distributeRecord","totalGasETH","methods","logOut","$store","dispatch","$router","push","apiBaseUrl","process","env","VUE_APP_BACKEND_BASE_URL","res","get","params","catch","e","console","log","status","addresses","map","item","getAccountBalance","distributeGas","index","info","total","utils","fromWei","$prompt","confirmButtonText","cancelButtonText","inputValidator","value","numberValue","parseFloat","isNaN","toString","replace","then","toAddress","address","amount","toWei","post","code","$message","type","message","web3","window","ethereum","balance","request","method","balanceInEth","formattedBalance","toFixed","$set","indexOf","getRecord","recordList","records","filter","toGasRecharge"],"sources":["src/components/myGas.vue"],"sourcesContent":["<template>\r\n<div class=\"myGas-container\">\r\n    <div class=\"content\" style=\"height:100vh\">\r\n        <nav class=\"home-navbar\">\r\n            <div class=\"home-navbar-container\">\r\n                <div class=\"want-to-be-left\">\r\n                    <a class=\"home-navbar-logo\">\r\n                        <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"home-logo-image\">\r\n                    </a>\r\n                    <div class=\"page-titile\">\r\n                        <h3></h3>\r\n                    </div>\r\n                </div>\r\n                <div class=\"want-to-be-right\">\r\n                    <ul class=\"home-navbar-menu\">\r\n                        <li class=\"guide-item\"><a href=\"#/guidePage\">用户指南</a></li>\r\n                        <li class=\"recharge-item  active\"><a>燃料管理</a></li>\r\n                        <li class=\"intro-item\"><a href=\"#/blockBrowse\">区块浏览器</a></li>\r\n                        <li class=\"explore-item\">\r\n                            <a href=\"#/exhibitWorks\" :class=\"{ disabled: !$store.state.isAccountMatched }\">交易市场</a>\r\n                        </li>\r\n                        <li class=\"upload-item\">\r\n                            <a href=\"#/uploadWorks\" :class=\"{ disabled: !$store.state.isAccountMatched }\">凭证上传</a>\r\n                        </li>\r\n                        <li class=\"records-item\">\r\n                            <a href=\"#/recordWorks\" :class=\"{ disabled: !$store.state.isAccountMatched }\">我的凭证</a>\r\n                        </li>\r\n                        <li class=\"home-item\"><a href=\"#/home\">个人中心</a></li>\r\n                    </ul>\r\n                    <div>\r\n                        <button class=\"home-navbar-button\" @click=\"logOut\">退出登录</button>\r\n                    </div>\r\n                    <div class=\"home-navbar-profile\">\r\n                        <a href=\"https://github.com/Psalm404/Hellometa\" target=\"_blank\">\r\n                            <img src=\"../assets/github.jpg\" alt=\"Join us\">\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        <!-- 临时占位，有时间记得删 -->\r\n        <div class=\"myGas-guideBox\">\r\n\r\n        </div>\r\n        <transition name=\"el-fade-in-linear\">\r\n            <div class=\"myGas-info\" v-show=\"show\">\r\n                <a class=\"myGas-howtouse\" @click=\"drawer = true\" style=\"align-self:self-start;\">\r\n                    <i class=\"el-icon-question\" style=\"display:contents;\"></i>\r\n                    我该如何使用燃料管理？</a>\r\n                <div style=\"align-self: self-start; font-weight:bold; font-size:17px\"> 待分配燃料 </div>\r\n                <div style=\"font-size:2em; align-self: self-start;\">{{totalGasETH}} ETH</div>\r\n                <div style=\"display: flex; gap:10px\">\r\n                    <el-button class=\"custom-button\" size=\"mini\" @click=\"toGasRecharge()\">燃料充值</el-button>\r\n                    <!-- <el-button class=\"custom-button\" size=\"mini\" @click=\"distributeGas()\">分配燃料</el-button> -->\r\n                    <el-button class=\"custom-button\" size=\"mini\" @click=\"drawer2 = true; getRecord()\">收支明细</el-button>\r\n                    <el-button class=\"custom-button\" size=\"mini\" @click=\"drawer3 = true; getRecord()\">分配记录</el-button>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n        <transition name=\"el-fade-in-linear\">\r\n            <div class=\"myGas-accountList\" v-show=\"show\">\r\n                <div style=\"align-self:self-start;\">链账户列表</div>\r\n                <div>\r\n                    <el-table :key=\"listData.length\" :data=\"listData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))\" style=\"width:100%\">\r\n                        <el-table-column prop=\"name\" label=\"账户名称\" width=\"320\"></el-table-column>\r\n                        <el-table-column prop=\"address\" label=\"账户地址\" width=\"390\"></el-table-column>\r\n                        <el-table-column prop=\"balance\" label=\"账户余额（ETH）\" width=\"200\"></el-table-column>\r\n                        <el-table-column align=\"right\">\r\n                            <!-- eslint-disable-next-line -->\r\n                            <template slot=\"header\" slot-scope=\"scope\">\r\n                                <el-input class=\"custom-input\" v-model=\"search\" size=\"mini\" placeholder=\"输入名称关键字搜索\" />\r\n                            </template>\r\n                            <!-- eslint-disable-next-line -->\r\n                            <template slot-scope=\"scope\">\r\n                                <el-button class=\"custom-button2\" size=\"mini\" @click=\"distributeGas(scope.$index, scope.row)\">分配燃料</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n\r\n                    </el-table>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n    </div>\r\n\r\n    <el-drawer size=\"40%\" :visible.sync=\"drawer\" :with-header=\"false\">\r\n        <div style=\"font-size:22px; font-weight:bold; color:black; margin-top:10px;\">我该如何使用燃料管理?</div>\r\n        <div style=\"margin:20px\">\r\n            <div style=\"display:flex; flex-direction: column; align-items: flex-start; gap:10px;\">\r\n                <div style=\"font-weight:bold\">一、在链账户管理中导入账户 </div>\r\n                <div style=\"font-weight:bold\">二、充值账号余额 </div>\r\n                <div style=\"font-weight:bold\">三、将余额分配给小账户</div>\r\n            </div>\r\n            <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 一、在链账户管理中导入账户 </div>\r\n            <br />\r\n            <div style=\"text-align: start;\">&emsp;&emsp;进入个人中心，按照指引导入MetaMask钱包账户。</div>\r\n            <div>\r\n                <el-image :src=\"require('@/assets/gas1.png') \"></el-image>\r\n            </div>\r\n            <br />\r\n            <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 二、充值账号余额 </div>\r\n            <br />\r\n            <div style=\"text-align: start;\">&emsp;&emsp;点击'燃料充值'按钮，按照指引充值燃料余额。</div>\r\n            <br />\r\n            <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 三、将余额分配给小账户 </div>\r\n            <br />\r\n            <div style=\"text-align: start;\">&emsp;&emsp;在下方的链账户列表中，点击右侧按钮进行燃料分配。该操作将会根据分配数量，将余额中的燃料分配给指定小账户。</div>\r\n            <br />\r\n            <div style=\"text-align: start;\">&emsp;&emsp;注意，燃料充值和分配都是不可逆的，请确保无误后再进行操作。充值和分配记录分别可在'收支明细'和'分配记录'中进行查看。</div>\r\n        </div>\r\n    </el-drawer>\r\n    <el-drawer size=\"40%\" :visible.sync=\"drawer2\" :with-header=\"false\">\r\n        <div style=\"font-size:20px;color:black; margin-top:10px;\">收支明细</div>\r\n        <template>\r\n            <el-table :data=\"rechargeRecord\" style=\"width: 90%; margin:10px 30px;\">\r\n                <el-table-column prop=\"type\" label=\"交易类型\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"amount\" label=\"燃料变动\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"time\" label=\"交易时间\">\r\n                </el-table-column>\r\n            </el-table>\r\n        </template>\r\n    </el-drawer>\r\n    <el-drawer size=\"40%\" :visible.sync=\"drawer3\" :with-header=\"false\">\r\n        <div style=\"font-size:20px;color:black; margin-top:10px;\">分配记录</div>\r\n        <template>\r\n            <el-table :data=\"distributeRecord\" style=\"width: 90%; margin:10px 30px;\">\r\n                <el-table-column prop=\"address\" label=\"分配账户\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"amount\" label=\"燃料变动\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"time\" label=\"交易时间\">\r\n                </el-table-column>\r\n            </el-table>\r\n        </template>\r\n    </el-drawer>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Web3 from 'web3';\r\nimport axios from 'axios';\r\nexport default {\r\n    mounted() {\r\n        setTimeout(() => {\r\n            this.show = true;\r\n        }, 150)\r\n        this.account = localStorage.getItem('account')\r\n        this.getAccountList();\r\n        this.getTotalGas();\r\n    },\r\n    data() {\r\n        return {\r\n            show:false,\r\n            account: null,\r\n            myGas: null,\r\n            drawer: false,\r\n            drawer2: false,\r\n            drawer3: false,\r\n            totalGas: 0,\r\n            search: '',\r\n            CNYToUSD: '',\r\n            USDToETH: '',\r\n            listData: [],\r\n            rechargeRecord: null,\r\n            distributeRecord: null,\r\n            totalGasETH:null,\r\n        }\r\n    },\r\n    methods: {\r\n        logOut() {\r\n            this.$store.dispatch('logout');\r\n            setTimeout(() => {\r\n                this.$router.push('/intro');\r\n            }, 200);\r\n        },\r\n        async getAccountList() {\r\n            const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n            let res = await axios.get(`${apiBaseUrl}/getSmallAccount`, {\r\n                params: {\r\n                    account: this.account\r\n                }\r\n            }).catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n            if (res.data.status === \"查询成功\" && res.data.addresses) {\r\n                this.listData = res.data.addresses.map(item => {\r\n                    // 如果 address 属性不存在，给它一个默认值\r\n                    return {\r\n                        ...item,\r\n                        addresses: item || 'null'\r\n                    };\r\n                });\r\n                this.getAccountBalance();\r\n            }\r\n        },\r\n        distributeGas(index, info) {\r\n            console.log(index, info)\r\n            let total = Web3.utils.fromWei(this.totalGas, 'ether');\r\n            this.$prompt('请输入分配燃料数量（eth）;', '分配燃料', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                inputValidator: (value) => {\r\n                    const numberValue = parseFloat(value);\r\n                    if (isNaN(numberValue)) {\r\n                        return '请输入有效数字';\r\n                    }\r\n                    if (numberValue > total * 0.99) {\r\n                        return '超过最大可分配额度 (' + (total * 0.99).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + ')';\r\n                    }\r\n                    return true;\r\n                }\r\n            }).then(({\r\n                value\r\n            }) => {\r\n                let toAddress = info.address;\r\n                let amount = parseFloat(Web3.utils.toWei(value, 'ether'));\r\n                const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n                axios.post(`${apiBaseUrl}/sendFunds`, {\r\n                    toAddress: toAddress,\r\n                    amount: amount\r\n                }).then(res => {\r\n                    console.log(toAddress, amount)\r\n                    console.log(res)\r\n                    if (res.data.code === 200) {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '分配成功'\r\n                        });\r\n                        this.getAccountBalance();\r\n                        this.getTotalGas();\r\n                    }\r\n                });\r\n\r\n            }).catch(() => {});\r\n        },\r\n        async getAccountBalance() {\r\n            console.log('getbalance');\r\n            let web3 = new Web3(window.ethereum);\r\n            try {\r\n                for (const item of this.listData) {\r\n                    console.log(item.address);\r\n                    const balance = await window.ethereum.request({\r\n                        method: 'eth_getBalance',\r\n                        params: [item.address, 'latest']\r\n                    });\r\n\r\n                    const balanceInEth = web3.utils.fromWei(balance, 'ether'); // 将 wei 转换为 ETH\r\n                    const formattedBalance = parseFloat(balanceInEth).toFixed(8); // 保留 10 位小数\r\n\r\n                    // 使用 $set 更新数据\r\n                    this.$set(this.listData, this.listData.indexOf(item), {\r\n                        ...item,\r\n                        balance: formattedBalance\r\n                    });\r\n                    console.log('accountbalance', formattedBalance);\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        },\r\n        getTotalGas() {\r\n            const params = {\r\n                account: this.account\r\n            }\r\n            console.log('account', this.account)\r\n            const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n            axios.get(`${apiBaseUrl}/getUserBalance`, {\r\n                params: params\r\n            }).then(res => {\r\n                if (res.data.code === 200) {\r\n                    this.totalGas = res.data.balance;\r\n                    this.totalGasETH = Web3.utils.fromWei(this.totalGas, 'ether');\r\n                    // 调用 Vuex action 更新余额\r\n                    this.$store.dispatch('updateUserBalance',  this.totalGasETH);\r\n                    console.log('userBalance::' +  this.totalGasETH)\r\n                    \r\n                }\r\n            }).catch(e => {\r\n                console.log(e)\r\n            })\r\n        },\r\n        async getRecord() {\r\n            const params = {\r\n                account: this.account\r\n            }\r\n            const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\r\n            await axios.get(`${apiBaseUrl}/getRecord`, {\r\n                params: params\r\n            }).then(res => {\r\n                console.log(res)\r\n                const recordList = res.data.records;\r\n                this.rechargeRecord = recordList.filter((item) => {\r\n                    return item.type === '充值'\r\n                });\r\n                this.distributeRecord = recordList.filter((item) => {\r\n                    return item.type === '分配燃料'\r\n                });\r\n            }).catch((e) => {\r\n                console.log(e)\r\n            })\r\n        },\r\n        toGasRecharge() {\r\n            this.$router.push('/myGas/gasRecharge');\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.myGas-container {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* justify-content: center; */\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    max-width: 100vw;\r\n    background-color: #292929;\r\n    ;\r\n    /* background-image: linear-gradient(to top, #bdc2e8 0%, #bdc2e8 1%, #e6dee9 80%); */\r\n    /* background-image: linear-gradient(to top, #1e0e09 0%, rgba(255, 115, 22, 0.901) 100%); */\r\n    ;\r\n}\r\n\r\n.myGas-guideBox {\r\n    position: relative;\r\n    /* border:1px solid green; */\r\n    /* left: 8%; */\r\n    margin-top: 80px;\r\n    margin-left: 60px;\r\n    /* border: 1px solid green; */\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n\r\n.myGas-howtouse {\r\n    color: #ff5900;\r\n}\r\n\r\n.myGas-title {\r\n    position: relative;\r\n    left: -33%;\r\n    flex: 1;\r\n    color: rgb(245, 240, 232);\r\n    font-weight: bold;\r\n    font-size: 2em;\r\n}\r\n\r\n.myGas-info {\r\n    padding: 30px;\r\n    margin-left: 60px;\r\n    margin-top: 60px;\r\n    width: 90%;\r\n    /*侧边栏删除记得改*/\r\n    border-color: #ff5900;\r\n    background-color: #ffffff;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-direction: column;\r\n}\r\n\r\n.myGas-accountList {\r\n    padding: 30px;\r\n    margin-left: 60px;\r\n    margin-top: 40px;\r\n    width: 90%;\r\n    /*侧边栏删除记得改*/\r\n    /* height: 140px; */\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-direction: column;\r\n}\r\n\r\n.myGas-container .el-button--primary span {\r\n    color: white;\r\n}\r\n\r\n.router-arrow {\r\n    color: #fff;\r\n    position: relative;\r\n    left: -75%;\r\n}\r\n\r\n.el-icon-arrow-right {\r\n    color: #fff;\r\n}\r\n\r\n.content {\r\n    max-width: 100%;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    /* width: 100%;\r\n    height: 100%;\r\n    margin-left: 10%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: auto; */\r\n}\r\n\r\n/* 新增的样式 */\r\n.display-container {\r\n    display: flex;\r\n    align-items: center;\r\n    /* 垂直居中对齐 */\r\n    justify-content: space-between;\r\n    /* 在两端对齐 */\r\n    margin-top: 70px;\r\n    /* 根据需要调整间距 */\r\n    padding: 0 15px;\r\n    /* 根据需要调整内边距 */\r\n}\r\n\r\n.search-box {\r\n    position: relative;\r\n    top: 0%;\r\n    left: -28%;\r\n    z-index: 10;\r\n    text-align: left;\r\n    color: #9c9c9c;\r\n    padding: 10px 15px;\r\n    width: 500px;\r\n    box-shadow: 2px 4px 15px #171717;\r\n    background-color: rgb(48, 48, 48);\r\n    border-radius: 5px;\r\n    margin: 0px 60px;\r\n    margin-left: 10%;\r\n    display: flex;\r\n    gap: 15px;\r\n}\r\n\r\n.grid-box {\r\n    z-index: 0;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    /* 一行四个，每个项目平均分配空间 */\r\n    gap: 25px;\r\n    margin: 20px 60px;\r\n}\r\n\r\n.grid-item {\r\n    color: white;\r\n    background-color: rgb(48, 48, 48);\r\n    height: 330px;\r\n    text-align: center;\r\n    border-radius: 7px;\r\n    box-shadow: 2px 4px 15px #171717;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 1px solid #ccc;\r\n    /* 添加灰白色边框 */\r\n}\r\n\r\n.home-navbar {\r\n    margin-top: 20px;\r\n    margin-left: calc(50% - 48vw);\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    /* 设置为半透明 */\r\n    border-bottom: 1px solid rgba(230, 232, 236, 0);\r\n    /* 去掉底部边框 */\r\n    padding: 10px 20px;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 90%;\r\n    height: auto;\r\n    z-index: 1000;\r\n    border-radius: 25px;\r\n    /* 设置圆角 */\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n    /* 添加阴影效果 */\r\n    backdrop-filter: blur(30px);\r\n    /* 添加背景模糊效果 */\r\n}\r\n\r\n/* Recharge */\r\n.guide-item {\r\n    position: relative;\r\n    top: 10px;\r\n    /* 根据需要调整位置 */\r\n    left: -110px;\r\n    /* 根据需要调整位置 */\r\n}\r\n\r\n/* Recharge */\r\n.recharge-item {\r\n    position: relative;\r\n    top: 10px;\r\n    /* 根据需要调整位置 */\r\n    left: -100px;\r\n    /* 根据需要调整位置 */\r\n}\r\n\r\n/* Browser */\r\n.intro-item {\r\n    position: relative;\r\n    top: 10px;\r\n    /* 根据需要调整位置 */\r\n    left: -90px;\r\n    /* 根据需要调整位置 */\r\n}\r\n\r\n/* Explore */\r\n.explore-item {\r\n    position: relative;\r\n    top: 10px;\r\n    /* 根据需要调整位置 */\r\n    left: -80px;\r\n    /* 根据需要调整位置 */\r\n}\r\n\r\n/* Upload */\r\n.upload-item {\r\n    position: relative;\r\n    top: 10px;\r\n    /* 根据需要调整位置 */\r\n    left: -70px;\r\n    /* 根据需要调整位置 */\r\n}\r\n\r\n/* Records */\r\n.records-item {\r\n    position: relative;\r\n    top: 10px;\r\n    /* 根据需要调整位置 */\r\n    left: -60px;\r\n    /* 根据需要调整位置 */\r\n}\r\n\r\n/* Home */\r\n.home-item {\r\n    position: relative;\r\n    top: 10px;\r\n    /* 根据需要调整位置 */\r\n    left: -50px;\r\n    /* 根据需要调整位置 */\r\n}\r\n\r\n.home-navbar-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n}\r\n\r\n.want-to-be-left {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    /* 左对齐 */\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    /* 使其占据剩余空间 */\r\n}\r\n\r\n.want-to-be-right {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n.home-navbar-logo-container {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.home-navbar-logo {\r\n    font-size: 2px;\r\n    font-weight: bold;\r\n    color: #333;\r\n    text-decoration: none;\r\n}\r\n\r\n.home-logo-image {\r\n    height: 40px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.home-navbar-title {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.home-navbar-menu li {\r\n    margin: 0 15px;\r\n}\r\n\r\n.home-navbar-menu {\r\n    list-style: none;\r\n    display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.home-navbar-menu li a {\r\n    color: #4d3535;\r\n    text-decoration: none;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    transition: color 0.3s;\r\n}\r\n\r\n.home-navbar-menu li.active a {\r\n    font-size: 18px;\r\n    color: #ff5900;\r\n}\r\n\r\n.home-navbar-menu li a:hover {\r\n    color: #ff5900;\r\n}\r\n\r\n.home-navbar-actions {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.home-navbar-button {\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    /* 设置为半透明 */\r\n    color: #4d3535;\r\n    border: 1px solid #4d3535;\r\n    /* 添加2px的边框，颜色与原背景色一致 */\r\n    padding: 10px 10px;\r\n    border-radius: 20px;\r\n    /* 设置圆角 */\r\n    cursor: pointer;\r\n    transition: background-color 0.3s, border-color 0.3s;\r\n    /* 添加边框颜色过渡 */\r\n    margin-right: 10px;\r\n    /* 增加一个右边距 */\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n    /* 添加阴影效果 */\r\n    backdrop-filter: blur(30px);\r\n    /* 添加背景模糊效果 */\r\n}\r\n\r\n.home-navbar-button:hover {\r\n    background-color: #ff5900;\r\n    border-color: #ff5900;\r\n    /* 修改hover状态下的边框颜色 */\r\n}\r\n\r\n.home-navbar-profile img {\r\n    width: 35px;\r\n    height: 35px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n}\r\n\r\n.profile-titile {\r\n    z-index: 00;\r\n    /* 设置一个较高的 z-index 使其在页面顶层 */\r\n}\r\n\r\nh2 {\r\n    position: relative;\r\n    left: 12%;\r\n    top: 23px;\r\n    font-size: 6em;\r\n    color: #c64500;\r\n    text-align: center;\r\n}\r\n\r\n/* 自定义按钮样式 */\r\n::v-deep .custom-button {\r\n    background-color: #ff5900;\r\n    /* 默认橙色背景 */\r\n    color: white;\r\n    /* 白色文字 */\r\n    border-radius: 5px;\r\n    /* 圆角 */\r\n    border: none;\r\n    /* 无边框 */\r\n    transition: background-color 0.3s, color 0.3s;\r\n    /* 添加过渡效果 */\r\n    border: 1px solid #ff5900;\r\n    /* 添加橙色边框 */\r\n}\r\n\r\n::v-deep .custom-button:hover {\r\n    /* background-color: #e65000; 悬停时稍微加深橙色 */\r\n    background-color: white;\r\n    /* 按下时背景变为白色 */\r\n    color: #ff5900;\r\n    /* 文字变为橙色 */\r\n    border: 1px solid #ff5900;\r\n    /* 添加橙色边框 */\r\n}\r\n\r\n::v-deep .custom-button:active {\r\n    background-color: white;\r\n    /* 按下时背景变为白色 */\r\n    color: #ff5900;\r\n    /* 文字变为橙色 */\r\n    border: 1px solid #ff5900;\r\n    /* 添加橙色边框 */\r\n}\r\n\r\n::v-deep .custom-button2 {\r\n    background-color: #f6894f;\r\n    color: white;\r\n    border-radius: 5px;\r\n    transition: background-color 0.3s, color 0.3s;\r\n    border: 1px solid #f6894f;\r\n}\r\n\r\n::v-deep .custom-button2:hover {\r\n    background-color: white;\r\n    color: #f6894f;\r\n    border: 1px solid #f6894f;\r\n}\r\n\r\n::v-deep .custom-button2:active {\r\n    background-color: white;\r\n    color: #f6894f;\r\n    border: 1px solid#f6894f;\r\n}\r\n\r\n::v-deep .custom-input .el-input__inner {\r\n    /* border-color: #ff5900; 将边框颜色改为橙色 */\r\n    border-radius: 5px;\r\n    /* 添加圆角 */\r\n}\r\n\r\n::v-deep .custom-input .el-input__inner:focus {\r\n    border-color: #e65000;\r\n    /* 聚焦时边框颜色变深 */\r\n    box-shadow: 0 0 5px rgba(230, 80, 0, 0.5);\r\n    /* 添加阴影效果 */\r\n}\r\n\r\n.disabled {\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}