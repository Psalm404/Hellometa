{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedAccount: null,\n      isAccountManagementVisible: false,\n      // 控制链账户管理部分的显示\n      account: null,\n      drawer: false,\n      name: '',\n      show: false,\n      address: '',\n      search: '',\n      listData: []\n    };\n  },\n  created() {\n    console.log('created avatar load=================>');\n    this.account = localStorage.getItem('account');\n    console.log('account' + this.account);\n    // this.loadAvatar();\n  },\n  mounted() {\n    setTimeout(() => {\n      this.show = true;\n    }, 150);\n    this.account = localStorage.getItem('account');\n    this.connectWallet();\n    this.loadAvatar();\n    console.log('account', this.account);\n    this.getAccountList();\n  },\n  computed: {\n    user() {\n      const user = this.$store.state.user;\n      console.log(user);\n      return user;\n    },\n    filteredListData() {\n      return this.listData.filter(data => !this.search || data.name.toLowerCase().includes(this.search.toLowerCase()));\n    },\n    isAccountMatched() {\n      if (!this.selectedAccount || !this.listData) return false;\n      return this.listData.some(item => item.address.toLowerCase() === this.selectedAccount.toLowerCase());\n    }\n  },\n  methods: {\n    logOut() {\n      console.log('登出');\n      this.selectedAccount = null; // 注销时清空选中的钱包地址\n      this.$store.dispatch('logout');\n      console.log(this.$route.path);\n      if (this.$route.path !== '/intro') {\n        setTimeout(() => {\n          this.$router.push('/intro');\n        }, 100);\n      }\n    },\n    editProfile() {\n      setTimeout(() => {\n        this.$router.push('/editProfile');\n      }, 100);\n    },\n    // 切换链账户管理部分的显示状态\n    toggleAccountManagement() {\n      this.getAccountList();\n      this.isAccountManagementVisible = !this.isAccountManagementVisible;\n    },\n    loadAvatar() {\n      const account = this.user.account;\n      if (!account) {\n        console.error('账号信息不完整。');\n        return;\n      }\n      const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n      axios.get(`${apiBaseUrl}/loadAvatar`, {\n        params: {\n          account\n        }\n      }).then(res => {\n        console.log('res.data' + res.data);\n        console.log('res.data.avatarUrl:::' + res.data.avatarUrl);\n        if (res.data && res.data.avatarUrl) {\n          this.$store.commit('setUserAvatar', res.data.avatarUrl);\n          localStorage.setItem(`avatar_${account}`, res.data.avatarUrl);\n          this.$forceUpdate();\n        }\n      }).catch(error => {\n        console.error('Error loading avatar:', error);\n        // 检查是否存在响应对象，并判断状态码\n        if (error.response && error.response.status === 401) {\n          this.logOut();\n        } else {\n          console.error('Error loading avatar:', error); // 处理其他错误\n        }\n      });\n    },\n    async getAccountList() {\n      const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n      try {\n        let res = await axios.get(`${apiBaseUrl}/getSmallAccount`, {\n          params: {\n            account: this.user.account\n          }\n        });\n        if (res.data && res.data.status === \"查询成功\" && res.data.addresses) {\n          this.listData = res.data.addresses.map(item => {\n            // 如果 address 属性不存在，给它一个默认值\n            return {\n              ...item,\n              addresses: item.address || 'null'\n            };\n          });\n          this.checkAccountMatch(); // 在数据获取后检查账户匹配\n        } else {\n          console.log(\"数据状态错误或地址为空\");\n        }\n      } catch (error) {\n        console.log('请求出错:', error);\n        // 检查是否是 401 错误，并处理\n        if (error.response && error.response.status === 401) {\n          this.logOut();\n        } else {\n          console.log('Error loading avatar:', error);\n        }\n      }\n    },\n    handleDelete(index, row) {\n      this.$confirm('是否移除该账户？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n        axios.post(`${apiBaseUrl}/removeAddress`, row).then(res => {\n          console.log(res);\n          if (res.data.code == '200') {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.listData.splice(index, 1);\n          } else {\n            this.$message({\n              type: 'error',\n              message: '删除失败'\n            });\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n          this.$message({\n            type: 'error',\n            message: '操作失败，请检查控制台以获取更多信息'\n          });\n        });\n      }).catch(() => {\n        console.log('用户取消了删除操作');\n      });\n      console.log(index, row);\n    },\n    async addSmallAccount() {\n      // 1. 校验账户名和地址\n      if (this.name === '') {\n        this.$message.warning('账户名不得为空');\n        return;\n      } else if (this.address === '') {\n        this.$message.warning('账户地址不得为空');\n        return;\n      }\n      try {\n        const addressList = await window.ethereum.request({\n          method: 'eth_accounts',\n          params: []\n        });\n        console.log('addressList', addressList);\n        if (!Array.isArray(addressList) || !addressList.includes(this.address.toLowerCase())) {\n          this.$message.warning('未查找到该账户地址');\n          return;\n        }\n        const data = {\n          account: this.account,\n          address: this.address,\n          name: this.name\n        };\n        console.log('asds', data);\n        axios.post('http://8.134.209.144:28888/api/addSmallAccount', data).then(response => {\n          console.log('response', response);\n          if (response.data.code === 200) {\n            this.$message.success('导入成功');\n            this.listData.push({\n              name: this.name,\n              address: this.address\n            });\n            // this.getAccountList();\n          } else {\n            this.$message.error(response.data.status);\n          }\n        });\n      } catch (error) {\n        console.error('Error:', error);\n        this.$message.error('操作失败，请检查控制台以获取更多信息');\n      }\n    },\n    async connectWallet() {\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          // 请求用户连接 MetaMask 钱包\n          const accounts = await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          this.selectedAccount = accounts[0]; // 获取第一个钱包地址\n          this.checkAccountMatch(); // 检查账户是否匹配\n          console.log('当前连接的 MetaMask 账号:', accounts[0]);\n\n          // 添加账户变更事件监听器\n          window.ethereum.on('accountsChanged', accounts => {\n            if (accounts.length === 0) {\n              // 用户已注销\n              console.log('用户已注销');\n              this.selectedAccount = null;\n            } else {\n              this.selectedAccount = accounts[0];\n              console.log('MetaMask 账号已更改:', accounts[0]);\n            }\n            this.checkAccountMatch(); // 检查账户是否匹配\n          });\n        } catch (error) {\n          console.error('连接钱包失败:', error);\n        }\n      } else {\n        console.error('MetaMask 未检测到');\n        alert('请安装 MetaMask 钱包');\n      }\n    },\n    checkAccountMatch() {\n      const matched = this.isAccountMatched;\n      this.$store.commit('setAccountMatched', matched);\n    }\n  },\n  watch: {\n    selectedAccount() {\n      this.checkAccountMatch();\n    },\n    listData() {\n      this.checkAccountMatch();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedAccount","isAccountManagementVisible","account","drawer","name","show","address","search","listData","created","console","log","localStorage","getItem","mounted","setTimeout","connectWallet","loadAvatar","getAccountList","computed","user","$store","state","filteredListData","filter","toLowerCase","includes","isAccountMatched","some","item","methods","logOut","dispatch","$route","path","$router","push","editProfile","toggleAccountManagement","error","apiBaseUrl","process","env","VUE_APP_BACKEND_BASE_URL","get","params","then","res","avatarUrl","commit","setItem","$forceUpdate","catch","response","status","addresses","map","checkAccountMatch","handleDelete","index","row","$confirm","confirmButtonText","cancelButtonText","type","post","code","$message","message","splice","addSmallAccount","warning","addressList","window","ethereum","request","method","Array","isArray","success","accounts","on","length","alert","matched","watch"],"sources":["src/components/userHomePage.vue"],"sourcesContent":["<template>\n<div class=\"container\">\n\n    <div class=\"content\">\n        <div class=\"profile-titile\">\n            <h2>Profile</h2>\n        </div>\n        <nav class=\"home-navbar\">\n            <div class=\"home-navbar-container\">\n                <div class=\"want-to-be-left\">\n                    <a class=\"home-navbar-logo\">\n                        <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"home-logo-image\">\n                    </a>\n                    <div class=\"page-titile\">\n                        <h3></h3>\n                    </div>\n                </div>\n                <div class=\"want-to-be-right\">\n                    <ul class=\"home-navbar-menu\">\n                        <li class=\"guide-item\"><a href=\"#/guidePage\">用户指南</a></li>\n                        <li class=\"recharge-item\"><a href=\"#/myGas\">燃料管理</a></li>\n                        <li class=\"intro-item\"><a href=\"#/blockBrowse\">区块浏览器</a></li>\n                        <li class=\"explore-item\">\n                            <a href=\"#/exhibitWorks\" :class=\"{ disabled: !$store.state.isAccountMatched }\">交易市场</a>\n                        </li>\n                        <li class=\"upload-item\">\n                            <a href=\"#/uploadWorks\" :class=\"{ disabled: !$store.state.isAccountMatched }\">凭证上传</a>\n                        </li>\n                        <li class=\"records-item\">\n                            <a href=\"#/recordWorks\" :class=\"{ disabled: !$store.state.isAccountMatched }\">我的凭证</a>\n                        </li>\n                        <li class=\"home-item active\"><a>个人中心</a></li>\n                    </ul>\n                    <div>\n                        <button class=\"home-navbar-button\" @click=\"logOut\">退出登录</button>\n                    </div>\n                    <div class=\"home-navbar-profile\">\n                        <a href=\"https://github.com/Psalm404/Hellometa\" target=\"_blank\">\n                            <img src=\"../assets/github.jpg\" alt=\"Join us\">\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </nav>\n        <transition name=\"el-fade-in-linear\">\n            <div class=\"sidebar-wallet-container\" v-show=\"show\">\n                <div class=\"sidebar\">\n                    <img :src=\"this.user.avatar\" alt=\"未成功加载头像\" class=\"avatar\">\n                    <!-- <img v-else alt=\"未成功加载头像\" class=\"avatar\"> -->\n                    <div class=\"user-info-container\">\n                        <div class=\"user-info\">\n                            <p>用户ID: <span>{{ user.account }}</span></p>\n                            <p>公司名称: <span>{{ user.name }}</span></p>\n                            <p>描述: <span>{{ user.description }}</span></p>\n                            <button class=\"edit-profile-button\" @click=\"editProfile\">修改账号信息</button>\n                        </div>\n                        <div class=\"account-info\">\n                            <p>剩余燃料: <span>{{ user.balance }} ETH</span></p>\n                            <p>邮箱&电话: <span>{{ user.email }} | {{ user.phone }}</span></p>\n                            <p>连接到的钱包账户: <span>{{ selectedAccount ? selectedAccount : '未检测到钱包' }}</span></p>\n                            <p v-if=\"!isAccountMatched && selectedAccount\" class=\"warning-message\">\n                                非所属小账户！请将此账户导入或切换至其他账户\n                            </p>\n                            <!-- 重要的改动：添加动态类和点击事件 -->\n                            <button class=\"manage-account-button\" :class=\"{ active: isAccountManagementVisible }\" @click=\"toggleAccountManagement\">链上账号管理⬇️</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </transition>\n        <!-- 关键：myAccount.vue的内容合并到这里 -->\n        <div v-if=\"isAccountManagementVisible\" class=\"myAccount-container\" style=\"background-color: #708090;\">\n            <div class=\"content\" style=\"height:100vh\">\n                <div class=\"myAccount-guideBox\">\n                    <div class=\"myAccount-title\">链上账号管理</div>\n                    <a class=\"myAccount-howtouse\" @click=\"drawer = true\" style=\"align-self:self-start;\">\n                        <i class=\"el-icon-question\" style=\"display:contents;\"></i>\n                        我该如何使用账户管理？\n                    </a>\n                </div>\n                <div class=\"myAccount-createAccount\">\n                    <div style=\"display: flex; gap: 20px\">\n                        <div style=\" display: flex; flex:1; justify-items: center; align-items:center; gap:15px;\">\n                            <span> 账户名称: </span>\n                            <el-input size=\"medium\" v-model=\"name\" placeholder=\"请输入账户名称\" style=\"width:400px\" maxlength=\"12\" minlength=\"1\" show-word-limit></el-input>\n                        </div>\n                        <div style=\" display: flex; flex:1; justify-items: center; align-items:center; gap:15px;\">\n                            <span> 账户地址: </span>\n                            <el-input size=\"medium\" v-model=\"address\" placeholder=\"请输入账户地址\" style=\"width:400px\"></el-input>\n                        </div>\n                    </div>\n                    <div style=\"display: flex; flex-direction: column;\">\n                        <el-button type=\"primary\" class=\"create-accountBT\" size=\"small\" style=\"align-self: self-end;\" @click=\"addSmallAccount\"> 导入账户</el-button>\n                    </div>\n                </div>\n                <div class=\"myAccount-accountList\">\n                    <div style=\"align-self:self-start;\">小账户列表</div>\n                    <div>\n                        <el-table :key=\"listData.length\" :data=\"filteredListData\" style=\"width:100%\">\n                            <el-table-column prop=\"name\" label=\"账户名称\" width=\"400\"></el-table-column>\n                            <el-table-column prop=\"address\" label=\"账户地址\" width=\"500\"></el-table-column>\n                            <el-table-column :align=\"'right'\">\n                                <template #header>\n                                    <el-input v-model=\"search\" size=\"mini\" placeholder=\"输入名称关键字搜索\" />\n                                </template>\n                                <template #default=\"scope\">\n                                    <el-button size=\"mini\" class=\"delete-accountBT\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">移除</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                    </div>\n                </div>\n            </div>\n            <el-drawer size=\"40%\" :visible.sync=\"drawer\" :with-header=\"false\">\n                <div style=\"font-size:22px; font-weight:bold; color:black; margin-top:20px;\">我该如何使用链账户管理?</div>\n                <div style=\"margin:20px\">\n                    <div style=\"display:flex; flex-direction: column; align-items: flex-start; gap:10px;\">\n                        <div style=\"font-weight:bold\">一、下载MetaMask插件并注册账号 </div>\n                        <div style=\"font-weight:bold\">二、连接SSENFT区块链网络 </div>\n                        <div style=\"font-weight:bold\">三、导入MetaMask账户</div>\n                        <div style=\"font-weight:bold\">四、常见问题</div>\n                    </div>\n                    <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 一、下载MetaMask插件并注册账号 </div>\n                    <br />\n                    <div style=\"text-align: start\">&emsp;&emsp;MetaMask是一款常用的以太坊钱包插件，以Edge为例演示下载流程：</div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">1. 在浏览器拓展市场下载安装MetaMask。</div>\n                    <div>\n                        <el-image :src=\"require('@/assets/account1.png') \"></el-image>\n                    </div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">2. 以第一次使用为例，点击“创建新钱包”。</div>\n                    <div>\n                        <el-image :src=\"require('@/assets/account2.png') \"></el-image>\n                    </div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">3. 根据引导完成注册流程。</div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">4. 注册完毕后，进入个人主页。</div>\n                    <div>\n                        <el-image :src=\"require('@/assets/account3.png') \"></el-image>\n                    </div>\n                    <br />\n\n                    <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 二、连接SSENFT区块链网络 </div>\n                    <br />\n                    <div style=\"text-align: start\">&emsp;&emsp;MetaMask首次注册后默认连接以太坊公链。根据项目需求，需要更换至SSENFT区块链网络。</div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">1. 进入网络设置界面，流程如下：</div>\n                    <div>\n                        <el-image :src=\"require('@/assets/account4.png') \"></el-image>\n                    </div>\n                    <div>\n                        <el-image :src=\"require('@/assets/account5.png') \"></el-image>\n                    </div>\n                    <div>\n                        <el-image :src=\"require('@/assets/account6.png') \"></el-image>\n                    </div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">2. 输入网络配置：</div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\"> &emsp;&emsp;网络名称（建议）：SSENFT</div>\n                    <div style=\"text-align: start; font-weight: bold\"> &emsp;&emsp;新的 RPC URL：http://8.134.209.144:18545</div>\n                    <div style=\"text-align: start; font-weight: bold\"> &emsp;&emsp;链ID： 12346</div>\n                    <div style=\"text-align: start; font-weight: bold\"> &emsp;&emsp;货币符号：eth</div>\n                    <br />\n                    <div>\n                        <el-image :src=\"require('@/assets/account7.png') \"></el-image>\n                    </div>\n                    <div style=\"text-align: start;\"> 确保填入信息无误后，点击保存并切换至该网络。</div>\n                    <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 三、导入MetaMask账户 </div>\n                    <br />\n                    <div style=\"text-align: start\">&emsp;&emsp;每个MetaMask账户都有唯一的地址。将MetaMask账户地址导入本系统，便于系统定位到账户并进行区块链操作。</div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">1. 点击浏览器右上角拼图图标呼出MetaMask，点击账户名：</div>\n                    <div>\n                        <el-image :src=\"require('@/assets/account8.png') \" size=\"small\" style=\"width: 300px;\"></el-image>\n                    </div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">2. 进入“账户详情”界面，可以修改账户名和查看完整的账户地址。</div>\n                    <div>\n                        <el-image :src=\"require('@/assets/account9.png') \" size=\"small\" style=\"width: 300px;\"></el-image>\n                    </div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">3. 将账户名称和账户地址导入到本系统中。</div>\n                    <div style=\"text-align: start;\">&emsp;&emsp;注意：账户名称理论上可以自行指定，但建议与MetaMask上的账户名保持相同。账户地址必须正确无误。</div>\n                    <div style=\"margin-top:20px; font-weight:bold; font-size:large; text-align: start;\"> 四、常见问题 </div>\n                    <br />\n                    <div style=\"text-align: start; font-weight: bold\">总是提醒“未查询到该账户”怎么办？</div>\n                    <div style=\"text-align: start;\">&emsp;&emsp;确保您的地址与MetaMask钱包中的一致。如果仍然无法解决，请检查MetaMask中的账户连接是否正常。</div>\n                </div>\n            </el-drawer>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            selectedAccount: null,\n            isAccountManagementVisible: false, // 控制链账户管理部分的显示\n            account: null,\n            drawer: false,\n            name: '',\n            show: false,\n            address: '',\n            search: '',\n            listData: [],\n        };\n    },\n    created() {\n        console.log('created avatar load=================>');\n        this.account = localStorage.getItem('account');\n        console.log('account' + this.account)\n        // this.loadAvatar();\n    },\n    mounted() {\n        setTimeout(() => {\n            this.show = true;\n        }, 150)\n        this.account = localStorage.getItem('account');\n        this.connectWallet();\n\n        this.loadAvatar();\n        console.log('account', this.account)\n        this.getAccountList();\n    },\n    computed: {\n        user() {\n            const user = this.$store.state.user;\n            console.log(user);\n            return user;\n        },\n        filteredListData() {\n            return this.listData.filter(data => !this.search || data.name.toLowerCase().includes(this.search.toLowerCase()));\n        },\n        isAccountMatched() {\n            if (!this.selectedAccount || !this.listData) return false;\n            return this.listData.some(item => item.address.toLowerCase() === this.selectedAccount.toLowerCase());\n        },\n    },\n    methods: {\n        logOut() {\n            console.log('登出');\n            this.selectedAccount = null; // 注销时清空选中的钱包地址\n            this.$store.dispatch('logout');\n            console.log(this.$route.path)\n            if (this.$route.path !== '/intro') {\n                setTimeout(() => {\n                  this.$router.push('/intro');\n                }, 100);\n            }\n        },\n        editProfile() {\n            setTimeout(() => {\n                this.$router.push('/editProfile');\n            }, 100);\n        },\n        // 切换链账户管理部分的显示状态\n        toggleAccountManagement() {\n            this.getAccountList();\n            this.isAccountManagementVisible = !this.isAccountManagementVisible;\n        },\n        loadAvatar() {\n            const account = this.user.account;\n            if (!account) {\n                console.error('账号信息不完整。');\n                return;\n            }\n\n            const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n            axios.get(`${apiBaseUrl}/loadAvatar`, {\n                    params: {\n                        account\n                    }\n                })\n                .then(res => {\n                    console.log('res.data' + res.data);\n                    console.log('res.data.avatarUrl:::' + res.data.avatarUrl)\n                    if (res.data && res.data.avatarUrl) {\n                        this.$store.commit('setUserAvatar', res.data.avatarUrl);\n                        localStorage.setItem(`avatar_${account}`, res.data.avatarUrl);\n                        this.$forceUpdate();\n                    }\n                })\n                .catch(error => {\n                    console.error('Error loading avatar:', error);\n                    // 检查是否存在响应对象，并判断状态码\n                    if (error.response && error.response.status === 401) {\n                        this.logOut();\n                    } else {\n                        console.error('Error loading avatar:', error); // 处理其他错误\n                    }\n                });\n        },\n        async getAccountList() {\n            const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n\n            try {\n                let res = await axios.get(`${apiBaseUrl}/getSmallAccount`, {\n                    params: {\n                        account: this.user.account\n                    }\n                });\n\n                if (res.data && res.data.status === \"查询成功\" && res.data.addresses) {\n                    this.listData = res.data.addresses.map(item => {\n                        // 如果 address 属性不存在，给它一个默认值\n                        return {\n                            ...item,\n                            addresses: item.address || 'null'\n                        };\n                    });\n                    this.checkAccountMatch(); // 在数据获取后检查账户匹配\n                } else {\n                    console.log(\"数据状态错误或地址为空\");\n                }\n\n            } catch (error) {\n                console.log('请求出错:', error);\n                // 检查是否是 401 错误，并处理\n                if (error.response && error.response.status === 401) {\n                    this.logOut();\n                } else {\n                    console.log('Error loading avatar:', error);\n                }\n            }\n        },\n        handleDelete(index, row) {\n            this.$confirm('是否移除该账户？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                const apiBaseUrl = process.env.VUE_APP_BACKEND_BASE_URL;\n                axios.post(`${apiBaseUrl}/removeAddress`, row).then(res => {\n                    console.log(res);\n                    if (res.data.code == '200') {\n                        this.$message({\n                            type: 'success',\n                            message: '删除成功!'\n                        });\n                        this.listData.splice(index, 1);\n                    } else {\n                        this.$message({\n                            type: 'error',\n                            message: '删除失败'\n                        });\n                    }\n                }).catch(error => {\n                    console.error('Error:', error);\n                    this.$message({\n                        type: 'error',\n                        message: '操作失败，请检查控制台以获取更多信息'\n                    });\n                })\n            }).catch(() => {\n                console.log('用户取消了删除操作');\n            });\n            console.log(index, row);\n        },\n        async addSmallAccount() {\n            // 1. 校验账户名和地址\n            if (this.name === '') {\n                this.$message.warning('账户名不得为空');\n                return;\n            } else if (this.address === '') {\n                this.$message.warning('账户地址不得为空');\n                return;\n            }\n\n            try {\n                const addressList = await window.ethereum.request({\n                    method: 'eth_accounts',\n                    params: [],\n                });\n\n                console.log('addressList', addressList);\n                if (!Array.isArray(addressList) || !addressList.includes(this.address.toLowerCase())) {\n                    this.$message.warning('未查找到该账户地址');\n                    return;\n                }\n\n                const data = {\n                    account: this.account,\n                    address: this.address,\n                    name: this.name,\n                };\n                console.log('asds', data)\n                axios.post('http://8.134.209.144:28888/api/addSmallAccount', data).then(response => {\n                    console.log('response', response)\n                    if (response.data.code === 200) {\n                        this.$message.success('导入成功');\n                        this.listData.push({\n                            name: this.name,\n                            address: this.address\n                        });\n                        // this.getAccountList();\n                    } else {\n                        this.$message.error(response.data.status);\n                    }\n                });\n\n            } catch (error) {\n                console.error('Error:', error);\n                this.$message.error('操作失败，请检查控制台以获取更多信息');\n            }\n        },\n        async connectWallet() {\n            if (typeof window.ethereum !== 'undefined') {\n                try {\n                    // 请求用户连接 MetaMask 钱包\n                    const accounts = await window.ethereum.request({\n                        method: 'eth_requestAccounts'\n                    });\n                    this.selectedAccount = accounts[0]; // 获取第一个钱包地址\n                    this.checkAccountMatch(); // 检查账户是否匹配\n                    console.log('当前连接的 MetaMask 账号:', accounts[0]);\n\n                    // 添加账户变更事件监听器\n                    window.ethereum.on('accountsChanged', (accounts) => {\n                        if (accounts.length === 0) {\n                            // 用户已注销\n                            console.log('用户已注销');\n                            this.selectedAccount = null;\n                        } else {\n                            this.selectedAccount = accounts[0];\n                            console.log('MetaMask 账号已更改:', accounts[0]);\n                        }\n                        this.checkAccountMatch(); // 检查账户是否匹配\n                    });\n                } catch (error) {\n                    console.error('连接钱包失败:', error);\n                }\n            } else {\n                console.error('MetaMask 未检测到');\n                alert('请安装 MetaMask 钱包');\n            }\n        },\n        checkAccountMatch() {\n            const matched = this.isAccountMatched;\n            this.$store.commit('setAccountMatched', matched);\n        },\n    },\n    watch: {\n        selectedAccount() {\n            this.checkAccountMatch();\n        },\n        listData() {\n            this.checkAccountMatch();\n        },\n    },\n\n};\n</script>\n\n<style scoped>\n/* 重置一些默认样式 */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    /* max-height: 200%; */\n}\n\n/* 容器样式 */\n.container {\n    width: 100%;\n\n    max-height: 100%;\n}\n\n/* 内容样式 */\n.content {\n    max-width: 100%;\n    width: 100%;\n    margin: 0 auto;\n\n    /* max-height: 200%; */\n}\n\n.manage-account-button.active {\n    background-color: #f3a479;\n    border-color: #f3a479;\n    color: #ffffff;\n}\n\n.profile-titile {\n    position: relative;\n    left: -550px;\n    top: 75px;\n    z-index: 00;\n    /* 设置一个较高的 z-index 使其在页面顶层 */\n}\n\nh2 {\n    position: relative;\n    left: 2%;\n    font-size: 6em;\n    color: #c64500;\n    text-align: center;\n}\n\nh3 {\n    font-size: 1.3em;\n    color: #c64500;\n    text-align: center;\n}\n\nh4 {\n    position: absolute;\n    left: 33%;\n    font-size: 2em;\n    color: #c64500;\n    text-align: left;\n}\n\n.page-titile {\n    position: absolute;\n    left: 14%;\n    top: 21px;\n}\n\n.home-navbar {\n    margin-top: 20px;\n    margin-left: calc(50% - 48vw);\n    background-color: rgba(255, 255, 255, 0.6);\n    /* 设置为半透明 */\n    border-bottom: 1px solid rgba(230, 232, 236, 0);\n    /* 去掉底部边框 */\n    padding: 10px 20px;\n    position: fixed;\n    top: 0;\n    width: 90%;\n    height: auto;\n    z-index: 1000;\n    border-radius: 25px;\n    /* 设置圆角 */\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    /* 添加阴影效果 */\n    backdrop-filter: blur(30px);\n    /* 添加背景模糊效果 */\n}\n\n/* Recharge */\n.guide-item {\n    position: relative;\n    top: 10px;\n    /* 根据需要调整位置 */\n    left: -110px;\n    /* 根据需要调整位置 */\n}\n\n/* Recharge */\n.recharge-item {\n    position: relative;\n    top: 10px;\n    /* 根据需要调整位置 */\n    left: -100px;\n    /* 根据需要调整位置 */\n}\n\n/* Browser */\n.intro-item {\n    position: relative;\n    top: 10px;\n    /* 根据需要调整位置 */\n    left: -90px;\n    /* 根据需要调整位置 */\n}\n\n/* Explore */\n.explore-item {\n    position: relative;\n    top: 10px;\n    /* 根据需要调整位置 */\n    left: -80px;\n    /* 根据需要调整位置 */\n}\n\n/* Upload */\n.upload-item {\n    position: relative;\n    top: 10px;\n    /* 根据需要调整位置 */\n    left: -70px;\n    /* 根据需要调整位置 */\n}\n\n/* Records */\n.records-item {\n    position: relative;\n    top: 10px;\n    /* 根据需要调整位置 */\n    left: -60px;\n    /* 根据需要调整位置 */\n}\n\n/* Home */\n.home-item {\n    position: relative;\n    top: 10px;\n    /* 根据需要调整位置 */\n    left: -50px;\n    /* 根据需要调整位置 */\n}\n\n.home-navbar-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0 auto;\n}\n\n.want-to-be-left {\n    display: flex;\n    justify-content: flex-start;\n    /* 左对齐 */\n    align-items: center;\n    flex-grow: 1;\n    /* 使其占据剩余空间 */\n}\n\n.want-to-be-right {\n    display: flex;\n    justify-content: space-evenly;\n}\n\n.home-navbar-logo-container {\n    display: flex;\n    align-items: center;\n}\n\n.home-navbar-logo {\n    font-size: 2px;\n    font-weight: bold;\n    color: #333;\n    text-decoration: none;\n}\n\n.home-logo-image {\n    height: 40px;\n    margin-right: 10px;\n}\n\n.home-navbar-title {\n    margin: 0;\n    padding: 0;\n}\n\n.home-navbar-menu li {\n    margin: 0 15px;\n}\n\n.home-navbar-menu {\n    list-style: none;\n    display: flex;\n    margin: 0;\n    padding: 0;\n}\n\n.home-navbar-menu li a {\n    color: #4d3535;\n    text-decoration: none;\n    font-size: 18px;\n    font-weight: bold;\n    transition: color 0.3s;\n}\n\n.home-navbar-menu li.active a {\n    font-size: 18px;\n    color: #ff5900;\n}\n\n.home-navbar-menu li a:hover {\n    color: #ff5900;\n}\n\n.home-navbar-actions {\n    display: flex;\n    align-items: center;\n}\n\n.home-navbar-button {\n    background-color: rgba(255, 255, 255, 0.6);\n    /* 设置为半透明 */\n    color: #4d3535;\n    border: 1px solid #4d3535;\n    /* 添加2px的边框，颜色与原背景色一致 */\n    padding: 10px 10px;\n    border-radius: 20px;\n    /* 设置圆角 */\n    cursor: pointer;\n    transition: background-color 0.3s, border-color 0.3s;\n    /* 添加边框颜色过渡 */\n    margin-right: 10px;\n    /* 增加一个右边距 */\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    /* 添加阴影效果 */\n    backdrop-filter: blur(30px);\n    /* 添加背景模糊效果 */\n}\n\n.home-navbar-button:hover {\n    background-color: #ff5900;\n    border-color: #ff5900;\n    /* 修改hover状态下的边框颜色 */\n}\n\n.home-navbar-profile img {\n    width: 35px;\n    height: 35px;\n    border-radius: 50%;\n    cursor: pointer;\n}\n\n/* 侧边栏和头像样式 */\n.sidebar-wallet-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n}\n\n.sidebar {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n/* 响应式头像 */\n.avatar {\n    width: 15vw;\n    /* 根据需要调整大小 */\n    height: 15vw;\n    /* 确保宽高相等 */\n    max-width: 200px;\n    /* 设置最大宽度，防止过大 */\n    max-height: 200px;\n    border-radius: 50%;\n    /* 使其为正圆形 */\n    object-fit: cover;\n    /* 确保图片按比例填充容器 */\n    overflow: auto;\n    background-color: transparent;\n    text-align: center;\n    /* 使alt文字水平居中 */\n    line-height: 150px;\n    /* 调整这个值以改变alt文字的垂直位置 */\n    border: 0.8px solid #ffffffb0;\n    /* 3像素宽的蓝色描边 */\n}\n\n.avatar img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    /* 图片按比例填充容器 */\n}\n\n/* 用户信息容器 */\n.user-info-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin-top: 20px;\n}\n\n/* 用户信息样式 */\n.user-info,\n.account-info {\n    width: 80%;\n    max-width: 600px;\n    margin: 10px 0;\n    text-align: center;\n    color: #ffffffb0;\n}\n\n.user-info p,\n.account-info p {\n    margin: 10px 0;\n}\n\n.user-info p span,\n.account-info p span {\n    color: #ff741d;\n    font-style: italic;\n    font-size: 1em;\n}\n\n/* 按钮样式 */\n.edit-profile-button,\n.manage-account-button {\n    background-color: rgba(255, 255, 255, 0.303);\n    color: #ffffffb0;\n    font-weight: 700;\n    border: 1px solid transparent;\n    border-radius: 10px;\n    cursor: pointer;\n    transition: background-color 0.3s, border-color 0.3s;\n    margin-top: 10px;\n    width: 80%;\n    max-width: 400px;\n    height: 50px;\n    text-align: center;\n}\n\n.edit-profile-button:hover,\n.manage-account-button:hover {\n    background-color: #ff5900;\n    border-color: #ff5900;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n    .avatar {\n        width: 25vw;\n        height: 25vw;\n    }\n\n    .edit-profile-button,\n    .manage-account-button {\n        width: 90%;\n    }\n\n    .user-info,\n    .account-info {\n        width: 90%;\n    }\n}\n\n.myAccount-container {\n    position: relative;\n    background-color: #ffffff5b;\n    display: flex;\n    flex-direction: column;\n    /* justify-content: center; */\n    align-items: center;\n    min-height: 95vh;\n    min-width: 95vw;\n    /* background-image: linear-gradient(to top, #bdc2e8 0%, #bdc2e8 1%, #e6dee9 80%); */\n    background-image: linear-gradient(to top, #333 0%, rgb(47, 43, 43) 100%);\n    ;\n\n}\n\n.myAccount-guideBox {\n    margin-top: 50px;\n    margin-left: 50px;\n    color: #ff5900;\n    /* border: 1px solid green; */\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.myAccount-title {\n    flex: 1;\n    align-self: flex-start;\n    color: rgb(229, 223, 223);\n    font-weight: bold;\n    font-size: 2em;\n}\n\n.myAccount-createAccount {\n    padding: 30px;\n    margin-left: 50px;\n    margin-top: 30px;\n    width: 90%;\n    /*侧边栏删除记得改*/\n    height: 140px;\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n    display: flex;\n    gap: 20px;\n    flex-direction: column;\n}\n\n.myAccount-accountList {\n    padding: 30px;\n    margin-left: 50px;\n    margin-top: 30px;\n    width: 90%;\n    /*侧边栏删除记得改*/\n    /* height: 140px; */\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n    display: flex;\n    gap: 20px;\n    flex-direction: column;\n}\n\n.create-accountBT {\n    background-color: rgba(255, 255, 255, 0.6);\n    /* 设置为半透明 */\n    color: #4d3535;\n    border: 1px solid #4d3535;\n    /* 添加2px的边框，颜色与原背景色一致 */\n    padding: 10px 10px;\n    border-radius: 10px;\n    /* 设置圆角 */\n    cursor: pointer;\n    transition: background-color 0.3s, border-color 0.3s;\n    /* 添加边框颜色过渡 */\n    margin-right: 10px;\n    /* 增加一个右边距 */\n}\n\n.create-accountBT:hover {\n    background-color: #af4949;\n    /* 设置为半透明 */\n    color: #ffffff;\n    border: 1px solid #af4949;\n    /* 添加2px的边框，颜色与原背景色一致 */\n    padding: 10px 10px;\n    border-radius: 10px;\n    /* 设置圆角 */\n    cursor: pointer;\n    transition: background-color 0.3s, border-color 0.3s;\n    /* 添加边框颜色过渡 */\n    margin-right: 10px;\n    /* 增加一个右边距 */\n}\n\n.delete-accountBT {\n    background-color: rgba(255, 255, 255, 0.6);\n    /* 设置为半透明 */\n    color: #4d3535;\n    border: 1px solid #4d3535;\n    /* 添加2px的边框，颜色与原背景色一致 */\n    padding: 5px 5px;\n    border-radius: 10px;\n    /* 设置圆角 */\n    cursor: pointer;\n    transition: background-color 0.3s, border-color 0.3s;\n    /* 添加边框颜色过渡 */\n    margin-right: 10px;\n    /* 增加一个右边距 */\n}\n\n.delete-accountBT:hover {\n    background-color: rgba(255, 255, 255, 0.6);\n    /* 设置为半透明 */\n    color: #f63900;\n    border: 1px solid #4d3535;\n    /* 添加2px的边框，颜色与原背景色一致 */\n    padding: 5px 5px;\n    border-radius: 10px;\n    /* 设置圆角 */\n    cursor: pointer;\n    transition: background-color 0.3s, border-color 0.3s;\n    /* 添加边框颜色过渡 */\n    margin-right: 10px;\n    /* 增加一个右边距 */\n}\n\n.myAccount-howtouse {\n    color: #fff5d7;\n}\n\n.disabled {\n    pointer-events: none;\n    opacity: 0.5;\n}\n\n.warning-message {\n    color: #f63900;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}