{"ast":null,"code":"import contract from \"./contract\";\nasync function getActiveNFTsURLs() {\n  try {\n    if (!contract) {\n      console.error('合约实例未初始化');\n      return null;\n    }\n    const urls = await contract.methods.getActiveNFTsURLs().call();\n    return urls;\n  } catch (error) {\n    console.error('获取所有上架url列表失败', error);\n    return null;\n  }\n}\nexport default getActiveNFTsURLs;","map":{"version":3,"names":["contract","getActiveNFTsURLs","console","error","urls","methods","call"],"sources":["D:/my-repo/hellometa/src/commons/getActiveNFTsURLs.js"],"sourcesContent":["import contract from \"./contract\";  \r\n\r\nasync function getActiveNFTsURLs() {\r\n    try {\r\n        if (!contract) {\r\n            console.error('合约实例未初始化');\r\n            return null;\r\n        }\r\n\r\n        const urls = await contract.methods.getActiveNFTsURLs().call();\r\n        return urls;\r\n    } catch (error) {\r\n        console.error('获取所有上架url列表失败', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default getActiveNFTsURLs;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjC,eAAeC,iBAAiBA,CAAA,EAAG;EAC/B,IAAI;IACA,IAAI,CAACD,QAAQ,EAAE;MACXE,OAAO,CAACC,KAAK,CAAC,UAAU,CAAC;MACzB,OAAO,IAAI;IACf;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,OAAO,CAACJ,iBAAiB,CAAC,CAAC,CAACK,IAAI,CAAC,CAAC;IAC9D,OAAOF,IAAI;EACf,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,OAAO,IAAI;EACf;AACJ;AAEA,eAAeF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}